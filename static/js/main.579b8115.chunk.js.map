{"version":3,"sources":["styles/sass/LearnJapanese.module.scss","styles/sass/components/settings/GameSettingsMenu.module.scss","types/GameMode.ts","types/HintQuantity.ts","components/layout/GameModeButton.tsx","components/settings/KanaSettingsForm.tsx","types/LifeQuantity.ts","components/settings/HintSettingsForm.tsx","types/DisplayType.ts","components/settings/LivesSelector.tsx","components/settings/LifeSettingsForm.tsx","components/settings/TimeSettingsForm.tsx","data/GameModePresets.ts","components/settings/DisplayTypeButton.tsx","components/settings/DisplaySettingsForm.tsx","components/settings/GameSettingsMenu.tsx","utility/Environment.ts","components/layout/GameModeMenu.tsx","utility/Numbers.ts","utility/RandomNumberGenerator.ts","types/FailureReason.ts","components/game/Timer.tsx","components/game/LifeDisplay.tsx","components/ui/QuitButton.tsx","types/KanaColumn.ts","components/game/CountDown.tsx","components/game/DynamicCharacter.tsx","components/game/KanaDisplay.tsx","components/game/RomanjiInput.tsx","components/ui/PopOver.tsx","components/game/HintButton.tsx","components/game/RomanjiQuestion.tsx","utility/Arrays.ts","components/game/KanaQuestionBanner.tsx","components/game/KanaChoiceQuestion.tsx","components/ui/SessionProgressBar.tsx","filters/FilterChain.ts","filters/kana/DiagraphFilter.ts","filters/kana/ExclusionFilter.ts","filters/kana/KanaTypeFilter.ts","components/game/KanaMemoryTest.tsx","components/results/AnswerMistake.tsx","components/results/Feedback.tsx","components/results/ResultScreen.tsx","components/ui/LoadingSpinner.tsx","types/Kana.ts","data/Hiragana.ts","data/Katakana.ts","types/KanaType.ts","filters/kana/QuantityFilter.ts","repository/KanaRepository.ts","components/pages/GamePage.tsx","components/layout/KanaTypeIndicator.tsx","components/layout/KanaTile.tsx","components/layout/KanaGrid.tsx","components/ui/SearchField.tsx","filters/kana/DiacriticalFilter.ts","filters/kana/RomajiFilter.ts","components/pages/SearchPage.tsx","components/ui/Inspectable.tsx","components/ui/KanaCarousel.tsx","components/layout/ParallaxBackground.tsx","components/ui/HelpButton.tsx","components/pages/LandingPage.tsx","components/pages/NotFoundPage.tsx","components/pages/HelpPage.tsx","components/layout/Main.tsx","LearnJapanese.tsx","index.tsx","styles/sass/components/game/KanaDisplay.module.scss","styles/sass/components/pages/SearchPage.module.scss","styles/sass/components/layout/GameModeMenu.module.scss","styles/sass/components/pages/LandingPage.module.scss","styles/sass/components/game/KanaMemoryTest.module.scss","styles/sass/components/results/AnswerMistake.module.scss","styles/sass/components/layout/KanaTile.module.scss","styles/sass/components/pages/HelpPage.module.scss","styles/sass/components/pages/NotFoundPage.module.scss","styles/sass/components/game/KanaChoiceQuestion.module.scss","styles/sass/components/layout/GameModeButton.module.scss","styles/sass/components/settings/DisplayTypeButton.module.scss","styles/sass/components/ui/KanaCarousel.module.scss","styles/sass/components/results/Feedback.module.scss","styles/sass/components/results/ResultScreen.module.scss","styles/sass/components/game/LifeDisplay.module.scss","styles/sass/components/game/HintButton.module.scss","styles/sass/components/ui/SearchField.module.scss","styles/sass/components/ui/Inspectable.module.scss","styles/sass/components/layout/Main.module.scss","styles/sass/components/game/Timer.module.scss","styles/sass/components/ui/QuitButton.module.scss","styles/sass/components/game/RomanjiInput.module.scss","styles/sass/components/ui/SessionProgressBar.module.scss","styles/sass/components/layout/KanaGrid.module.scss","styles/sass/components/layout/KanaTypeIndicator.module.scss","styles/sass/components/layout/ParallaxBackground.module.scss","styles/sass/components/ui/HelpButton.module.scss"],"names":["module","exports","GameMode","HintQuantity","GameModeButton","props","handleClick","onClick","mode","state","isSelected","this","icon","iconColour","Button","block","className","styles","selected","notSelected","color","name","Component","KanaSettingsForm","defaultState","hiragana","katakana","diagraphs","quantity","reset","setState","onSelect","prevProps","prevState","Form","Row","Check","inline","label","check","checked","onChange","disabled","data-testid","InputGroup","hasValidation","Prepend","Text","Control","e","Number","target","value","type","required","placeholder","isInvalid","LifeQuantity","HintSettingsForm","enabled","THREE","ONE","FIVE","UNLIMITED","DisplayType","LivesSelector","handleOnChange","getOptions","Object","keys","map","k","filter","isNaN","valueOf","as","LifeSettingsForm","selector","ZERO","current","React","createRef","id","ref","TimeSettingsForm","timed","countdown","onChangeTimed","onChangeCountDown","defaultDisplaySettings","SINGLE_KANA","cards","defaultKanaSettings","defaultHintSettings","defaultLifeSettings","defaultTimeSettings","RELAXED","display","kana","hints","lives","time","ROMANJI","KANA","MULTIPLE_CARDS","TIME_ATTACK","secondsPerQuestion","HARDCORE","DisplayTypeButton","text","DisplaySettingsForm","Col","faStop","faThLarge","GameSettingsMenu","onConfirmation","displaySettings","kanaSettings","hintSettings","lifeSettings","timeSettings","onSubmit","onReset","wrapper","Card","bg","Tab","Container","defaultActiveKey","Header","Nav","variant","Item","Link","eventKey","faGamepad","modeIcon","kanaIcon","faLightbulb","hintsIcon","faHeart","livesIcon","faStopwatch","timeIcon","Body","Content","Pane","pane","Title","title","settings","Footer","noGuttersLeft","faUndo","noGuttersRight","confirm","faCheck","Environment","variable","parsed","replaceAll","toUpperCase","process","GameModeMenu","setCustomSettings","isCustomisingSettings","confirmSelected","onSelectedMode","onSelectMode","preset","onLaunchCustomSettings","CUSTOM","getSelectedModeDescription","fluid","descWrapper","desc","leftColumn","faGraduationCap","rightColumn","faFont","faCircle","faFire","faVial","playButton","size","faPlay","Numbers","randomInt","min","max","Math","floor","random","RandomNumberGenerator","array","length","getRandomObject","pool","objects","randomIndex","getRandomArrayIndex","firstKana","splice","FailureReason","Timer","stop","paused","isStopped","clearInterval","interval","restart","start","Date","now","undefined","getCurrentTime","formatTimeElapsed","play","onChangePausedState","setInterval","tick","pause","onPaused","pad","slice","pausable","faPause","delta","date","round","hours","getUTCHours","getUTCMinutes","getUTCSeconds","LifeDisplay","hearts","faInfinity","QuitButton","faTimes","KanaColumn","CountDown","remaining","decrement","onFinish","DynamicCharacter","getClasses","classes","join","getSize","style","getMargin","isDiagraphLeft","isDiagraphRight","fontSize","marginLeft","marginRight","KanaDisplay","notifyIncorrect","isNotifyingIncorrect","blur","index","kanaClass","redKana","leftDiagraphClass","diagraphBlur","diagraphLeft","rightDiagraphClass","diagraphRight","clickable","container","character","visibility","isDiagraph","code","RomanjiInput","input","handleKeyPress","event","key","preventDefault","onEnterKey","focus","plaintext","onKeyPress","PopOver","Popover","popover","HintButton","getTitle","totalQuantity","getContent","column","OTHER","isDiacritical","overlay","OverlayTrigger","onToggle","onUse","trigger","placement","tip","RomanjiQuestion","kanaDisplay","answer","hasUsedHintThisQuestion","romanji","includes","hidden","Group","controlId","xs","inputCol","tipCol","submit","faRedoAlt","Arrays","arr1","arr2","element","indexOf","a","b","JSON","stringify","sort","shuffled","i","j","elements","copy","remove","push","KanaQuestionBanner","getRomanji","Alert","question","aria-labelledby","KanaChoiceQuestion","displays","Map","indices","expected","get","select","handleKeySelection","toString","wrong","shuffle","concat","option","set","options","document","addEventListener","removeEventListener","tile","SessionProgressBar","inProgress","ProgressBar","animated","progress","FilterChain","filters","Set","add","values","reduced","forEach","apply","DiagraphFilter","include","ExclusionFilter","equals","KanaTypeFilter","KanaMemoryTest","timer","getQuestion","currentKana","answerQuestion","chain","addFilter","getRandomElements","execute","correct","correctAnswers","wrongAnswers","remainingKana","hasExhaustedKana","reason","success","livesRemaining","totalKanaOffered","duration","nextKana","nextRemainingKana","countDownTimeElapsed","failedToAnswer","close","onClose","NO_LIVES_REMAINING","noGutters","lifeDisplayContainer","AnswerMistake","times","kanaWrapper","infoWrapper","col","timesWrong","Feedback","getMistakeCounts","reduce","acc","Accordion","accordion","Toggle","toggle","faChevronDown","Collapse","mistake","ResultScreen","getKanaScore","result","NO_TIME_REMAINING","score","LoadingSpinner","active","Spinner","spinner","animation","role","Kana","_code","_romanji","_type","_column","_isDiacritical","other","areEqual","VOWEL","diacritical","K","S","T","N","H","M","Y","R","W","KanaType","QuantityFilter","KanaRepository","config","HIRAGANA","KATAKANA","readAllKana","readHiragana","readKatakana","convert","data","GamePage","startGame","gameSettings","loadKana","onGameClose","onResultMenuClose","inResultsScreen","onGameFinish","gameIdentifier","loading","read","KanaTypeIndicator","KanaTile","typeWrapper","diagraph","getFullRomanjiString","KanaGrid","Grid","makeResponsive","CSSGrid","maxWidth","defaultColumns","grid","gutterWidth","gutterHeight","layout","simple","columnWidth","easing","easings","cubicOut","columns","SearchField","append","inputGroup","faSearch","Append","DiacriticalFilter","RomajiFilter","search","some","romaji","SearchPage","onSearch","newSearch","toLowerCase","showHiragana","showKatakana","showDiagraphs","showDiacriticals","searchWrapper","switchWrapper","md","sm","hiraganaSwitch","Label","katakanaSwitch","diagraphSwitch","diacriticalSwitch","Inspectable","children","rootClose","cloneElement","white","black","KanaCarousel","handleAnimation","shown","next","nextRemaining","shownPool","onAnimationIteration","animate","ParallaxBackground","updateWindowDimensions","getBackgroundKana","width","window","innerWidth","height","innerHeight","updateMousePosition","xMouse","pageX","yMouse","pageY","calculateParallax","html","querySelector","getComputedStyle","parseFloat","kanaPerRow","ceil","totalKanaRequired","pools","position","background","HelpButton","button","href","LandingPage","content","header","to","help","heading","japanese","descriptionWrapper","description","NotFoundPage","home","faHome","HelpPage","faQuestionCircle","source","Main","basename","exact","path","component","LearnJapanese","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.579b8115.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LearnJapanese_wrapper__3CGpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GameSettingsMenu_wrapper__3mUhx\",\"header\":\"GameSettingsMenu_header__2dfTn\",\"title\":\"GameSettingsMenu_title__3t_ZH\",\"label\":\"GameSettingsMenu_label__2LwW8\",\"pane\":\"GameSettingsMenu_pane__14BzO\",\"check\":\"GameSettingsMenu_check__1Mkdc\",\"rule\":\"GameSettingsMenu_rule__2mid3\",\"modeIcon\":\"GameSettingsMenu_modeIcon__1o_FI\",\"kanaIcon\":\"GameSettingsMenu_kanaIcon__rYdi8\",\"livesIcon\":\"GameSettingsMenu_livesIcon__1w6jI\",\"hintsIcon\":\"GameSettingsMenu_hintsIcon__2BqDN\",\"timeIcon\":\"GameSettingsMenu_timeIcon__3FzWC\",\"noGuttersLeft\":\"GameSettingsMenu_noGuttersLeft__3z85Z\",\"noGuttersRight\":\"GameSettingsMenu_noGuttersRight__1mc3O\"};","export enum GameMode {\n    ROMANJI = \"Romanji\",\n    TIME_ATTACK = \"Time Attack\",\n    HARDCORE = \"Hardcore\",\n    RELAXED = \"Relaxed\",\n    KANA = \"Kana\",\n    CUSTOM = \"Custom\"\n}","export enum HintQuantity {\n    ZERO = 0,\n    ONE = 1,\n    THREE = 3,\n    FIVE = 5,\n    UNLIMITED = 999\n}","import { Component } from \"react\";\nimport { GameMode } from \"../../types/GameMode\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/layout/GameModeButton.module.scss\";\n\nexport interface GameModeButtonProps {\n    mode: GameMode;\n    icon: IconDefinition;\n    iconColour?: string;\n    onClick: (mode: GameMode) => void;\n    isSelected: boolean;\n}\n\nclass GameModeButton extends Component<GameModeButtonProps> {\n    constructor(props: GameModeButtonProps | Readonly<GameModeButtonProps>) {\n        super(props);\n        this.state = {\n            isSelected: false\n        }\n    }\n\n    handleClick = () => this.props.onClick(this.props.mode);\n\n    render() {\n        const { mode, icon, isSelected, iconColour } = this.props;\n\n        return (\n            <Button\n                block\n                className={isSelected ? styles.selected : styles.notSelected}\n                onClick={this.handleClick}\n            >\n                <FontAwesomeIcon\n                    className={styles.icon}\n                    color={isSelected ? iconColour : \"#000\"}\n                    icon={icon}\n                />\n                <p className={styles.name}>{mode}</p>\n            </Button>\n        );\n    }\n}\n\nexport default GameModeButton;\n","import { Component } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport { KanaSettings } from \"../../types/GameSettings\";\nimport styles from \"../../styles/sass/components/settings/GameSettingsMenu.module.scss\";\n\ninterface KanaSettingsProps {\n    onSelect: (settings: KanaSettings) => void;\n}\n\ninterface KanaSettingsState {\n    hiragana: boolean;\n    katakana: boolean;\n    diagraphs: boolean;\n    quantity: number;\n}\n\nclass KanaSettingsForm extends Component<KanaSettingsProps, KanaSettingsState> {\n\n    private readonly defaultState = { hiragana: true, katakana: false, diagraphs: false, quantity: 50 };\n\n    constructor(props: KanaSettingsProps | Readonly<KanaSettingsProps>) {\n        super(props);\n        this.state = this.defaultState;\n    }\n\n    componentDidMount() {\n        this.props.onSelect(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<KanaSettingsProps>, prevState: Readonly<KanaSettingsState>) {\n        if (prevState !== this.state) {\n            const { hiragana, katakana, diagraphs, quantity } = this.state;\n            this.props.onSelect({ hiragana, katakana, diagraphs, quantity });\n        }\n    }\n\n    render() {\n        const { hiragana, katakana, diagraphs, quantity } = this.state;\n\n        return (\n            <Form.Row>\n                <Form.Check\n                    inline\n                    label=\"Hiragana\"\n                    className={styles.check}\n                    checked={hiragana}\n                    onChange={() => this.setState({ hiragana: !hiragana })}\n                    disabled={hiragana && !katakana}\n                    data-testid=\"Hiragana\"\n                />\n                <Form.Check\n                    inline\n                    label=\"Katakana\"\n                    className={styles.check}\n                    checked={katakana}\n                    onChange={() => this.setState({ katakana: !katakana })}\n                    disabled={katakana && !hiragana}\n                    data-testid=\"Katakana\"\n                />\n                <Form.Check\n                    label=\"Diagraphs\"\n                    className={styles.check}\n                    checked={diagraphs}\n                    onChange={() => this.setState({ diagraphs: !diagraphs })}\n                    data-testid=\"Diagraphs\"\n                />\n\n                <InputGroup hasValidation>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Quantity</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                        onChange={(e) => this.setState({ quantity: Number(e.target.value) })}\n                        type=\"number\"\n                        required\n                        value={quantity}\n                        placeholder=\"Enter kana quantity\"\n                        isInvalid={quantity < 1 || quantity > 214}\n                    />\n                </InputGroup>\n            </Form.Row>\n        );\n    }\n\n    reset = () => this.setState(this.defaultState);\n}\n\nexport default KanaSettingsForm;","export enum LifeQuantity {\n    ZERO = 0,\n    ONE = 1,\n    THREE = 3,\n    FIVE = 5,\n    TEN = 10,\n    UNLIMITED = 999\n}","import { Component } from \"react\";\nimport { HintSettings } from \"../../types/GameSettings\";\nimport { HintQuantity } from \"../../types/HintQuantity\";\nimport { Form } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/settings/GameSettingsMenu.module.scss\";\n\nexport interface HintSettingsFormProps {\n    onChange: (settings: HintSettings) => void;\n}\n\ninterface HintSettingsFormState {\n    enabled: boolean;\n    quantity: HintQuantity;\n}\n\nclass HintSettingsForm extends Component<HintSettingsFormProps, HintSettingsFormState> {\n\n    private readonly defaultState = { enabled: true, quantity: HintQuantity.THREE };\n\n    constructor(props: HintSettingsFormProps | Readonly<HintSettingsFormProps>) {\n        super(props);\n        this.state = this.defaultState;\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<HintSettingsFormProps>, prevState: Readonly<HintSettingsFormState>) {\n        if (prevState !== this.state) {\n            const { enabled, quantity } = this.state;\n            this.props.onChange({ enabled, quantity });\n        }\n    }\n\n    render() {\n        const { quantity } = this.state;\n\n        return (\n            <Form.Row>\n                <Form.Check\n                    inline\n                    label=\"1\"\n                    className={styles.check}\n                    checked={quantity === HintQuantity.ONE}\n                    onChange={() => this.setState({ quantity: HintQuantity.ONE })}\n                    data-testid=\"1\"\n                />\n                <Form.Check\n                    inline\n                    label=\"3\"\n                    className={styles.check}\n                    checked={quantity === HintQuantity.THREE}\n                    onChange={() => this.setState({ quantity: HintQuantity.THREE })}\n                    data-testid=\"3\"\n                />\n                <Form.Check\n                    inline\n                    label=\"5\"\n                    className={styles.check}\n                    checked={quantity === HintQuantity.FIVE}\n                    onChange={() => this.setState({ quantity: HintQuantity.FIVE })}\n                    data-testid=\"5\"\n                />\n                <Form.Check\n                    label=\"Unlimited\"\n                    className={styles.check}\n                    checked={quantity === HintQuantity.UNLIMITED}\n                    onChange={() => this.setState({ quantity: HintQuantity.UNLIMITED })}\n                    data-testid=\"Unlimited\"\n                />\n            </Form.Row>\n        );\n    }\n\n    reset = () => this.setState(this.defaultState);\n}\n\nexport default HintSettingsForm;","export enum DisplayType {\n    SINGLE_KANA,\n    MULTIPLE_CARDS\n}","import { ChangeEvent, Component } from \"react\";\nimport { LifeQuantity } from \"../../types/LifeQuantity\";\nimport { Form } from \"react-bootstrap\";\n\ninterface LivesSelectorProps {\n    onSelect: (quantity: LifeQuantity) => void;\n    disabled?: boolean;\n}\n\ninterface LivesSelectorState {\n    selected: LifeQuantity;\n}\n\nclass LivesSelector extends Component<LivesSelectorProps, LivesSelectorState> {\n    constructor(props: LivesSelectorProps | Readonly<LivesSelectorProps>) {\n        super(props);\n        this.state = {\n            selected: LifeQuantity.FIVE\n        }\n    }\n\n    componentDidMount() {\n        this.props.onSelect(LifeQuantity.FIVE);\n    }\n\n    componentDidUpdate(prevProps: Readonly<LivesSelectorProps>, prevState: Readonly<LivesSelectorState>) {\n        if (prevState != this.state) {\n            this.props.onSelect(this.state.selected);\n        }\n    }\n\n    render() {\n        return (\n            <Form.Control disabled={this.props.disabled} as=\"select\" onChange={this.handleOnChange} data-testid=\"Lives\">\n                {this.getOptions()}\n            </Form.Control>\n        );\n    }\n\n    reset = () => this.setState({ selected: LifeQuantity.FIVE });\n\n    private handleOnChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n        const value = Number(e.target.value);\n        const quantity: LifeQuantity = value as LifeQuantity;\n        this.setState({ selected: quantity });\n        this.props.onSelect(quantity);\n    }\n\n    private getOptions = () => {\n        return Object.keys(LifeQuantity)\n            .map(k => Number(LifeQuantity[k as any]))\n            .filter(k => !isNaN(k))\n            .map(quantity => {\n                return <option\n                    key={quantity}\n                    selected={this.state.selected.valueOf() === quantity}>\n                    {quantity}\n                </option>\n            });\n    }\n}\n\nexport default LivesSelector;","import React, { Component } from \"react\";\nimport { LifeSettings } from \"../../types/GameSettings\";\nimport { LifeQuantity } from \"../../types/LifeQuantity\";\nimport LivesSelector from \"./LivesSelector\";\nimport { Form } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/settings/GameSettingsMenu.module.scss\";\n\ninterface LifeSettingsFormProps {\n    onChange: (settings: LifeSettings) => void;\n}\n\ninterface LifeSettingsFormState {\n    enabled: boolean;\n    quantity: LifeQuantity;\n}\n\nclass LifeSettingsForm extends Component<LifeSettingsFormProps, LifeSettingsFormState> {\n\n    private readonly selector: React.RefObject<LivesSelector>;\n    private readonly defaultState = { enabled: false, quantity: LifeQuantity.ZERO };\n\n    constructor(props: LifeSettingsFormProps | Readonly<LifeSettingsFormProps>) {\n        super(props);\n        this.selector = React.createRef();\n        this.state = this.defaultState;\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<LifeSettingsFormProps>, prevState: Readonly<LifeSettingsFormState>) {\n        if (prevState !== this.state) {\n            const { enabled, quantity } = this.state;\n            this.props.onChange({ enabled, quantity });\n        }\n    }\n\n    render() {\n        const { enabled } = this.state;\n\n        return (\n            <Form.Row>\n                <Form.Check\n                    inline\n                    label=\"Enable\"\n                    type=\"switch\"\n                    id=\"lives\"\n                    className={styles.check}\n                    checked={enabled}\n                    onChange={() => this.setState({ enabled: !enabled })}\n                    data-testid=\"Enable\"\n                />\n                <LivesSelector\n                    ref={this.selector}\n                    disabled={!enabled}\n                    onSelect={(quantity) => this.setState({ quantity })}\n                />\n            </Form.Row>\n        );\n    }\n\n    reset = () => {\n        this.selector.current?.reset();\n        this.setState(this.defaultState);\n    }\n}\n\nexport default LifeSettingsForm;","import { Component } from \"react\";\nimport { TimeSettings } from \"../../types/GameSettings\";\nimport { Form } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/settings/GameSettingsMenu.module.scss\";\n\nexport interface TimeSettingsFormProps {\n    onChange: (settings: TimeSettings) => void;\n}\n\ninterface TimeSettingsFormState {\n    timed: boolean;\n    countdown: boolean;\n}\n\nclass TimeSettingsForm extends Component<TimeSettingsFormProps, TimeSettingsFormState> {\n\n    private readonly defaultState = { timed: true, countdown: false };\n\n    constructor(props: TimeSettingsFormProps | Readonly<TimeSettingsFormProps>) {\n        super(props);\n        this.state = this.defaultState;\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<TimeSettingsFormProps>, prevState: Readonly<TimeSettingsFormState>) {\n        if (prevState !== this.state) {\n            const { timed, countdown } = this.state;\n            this.props.onChange({ timed, countdown });\n        }\n    }\n\n    render() {\n        const { timed, countdown } = this.state;\n\n        return (\n            <>\n                <Form.Row>\n                    <Form.Check\n                        inline\n                        label=\"Timed\"\n                        type=\"switch\"\n                        id=\"time\"\n                        className={styles.check}\n                        checked={timed}\n                        onChange={this.onChangeTimed}\n                        data-testid=\"Timed\"\n                    />\n                </Form.Row>\n                <Form.Row>\n                    <Form.Check\n                        label=\"Count Down\"\n                        type=\"switch\"\n                        id=\"countdown\"\n                        className={styles.check}\n                        checked={countdown}\n                        onChange={this.onChangeCountDown}\n                        data-testid=\"Countdown\"\n                    />\n                </Form.Row>\n            </>\n        );\n    }\n\n    reset = () => this.setState(this.defaultState);\n\n    private onChangeTimed = () => {\n        const { timed } = this.state;\n        if (timed) {\n            this.setState({ timed: false });\n        } else {\n            this.setState({ timed: true, countdown: false });\n        }\n    }\n\n    private onChangeCountDown = () => {\n        const { countdown } = this.state;\n        if (countdown) {\n            this.setState({ countdown: false });\n        } else {\n            this.setState({ countdown: true, timed: false });\n        }\n    }\n}\n\nexport default TimeSettingsForm;","import { DisplaySettings, GameSettings, HintSettings, KanaSettings, LifeSettings, TimeSettings } from \"../types/GameSettings\";\nimport { HintQuantity } from \"../types/HintQuantity\";\nimport { LifeQuantity } from \"../types/LifeQuantity\";\nimport { DisplayType } from \"../types/DisplayType\";\n\n// Default Settings\nexport const defaultDisplaySettings: DisplaySettings = {\n    type: DisplayType.SINGLE_KANA,\n    cards: 1\n}\n\nexport const defaultKanaSettings: KanaSettings = {\n    hiragana: true,\n    katakana: true,\n    diagraphs: true,\n}\n\nexport const defaultHintSettings: HintSettings = {\n    enabled: true,\n    quantity: HintQuantity.UNLIMITED\n}\n\nexport const defaultLifeSettings: LifeSettings = {\n    enabled: true,\n    quantity: LifeQuantity.FIVE\n}\n\nexport const defaultTimeSettings: TimeSettings = {\n    timed: true,\n    countdown: false\n}\n\n// Game Mode Presets\nexport const RELAXED: GameSettings = {\n    display: { type: DisplayType.SINGLE_KANA, cards: 1 },\n    kana: defaultKanaSettings,\n    hints: defaultHintSettings,\n    lives: { enabled: false },\n    time: { timed: false, countdown: false }\n}\n\nexport const ROMANJI: GameSettings = {\n    display: { type: DisplayType.SINGLE_KANA, cards: 1 },\n    kana: defaultKanaSettings,\n    hints: { enabled: true, quantity: HintQuantity.THREE },\n    lives: defaultLifeSettings,\n    time: defaultTimeSettings\n}\n\nexport const KANA: GameSettings = {\n    display: { type: DisplayType.MULTIPLE_CARDS, cards: 4 },\n    kana: defaultKanaSettings,\n    hints: { enabled: true, quantity: HintQuantity.THREE },\n    lives: defaultLifeSettings,\n    time: defaultTimeSettings\n}\n\nexport const TIME_ATTACK: GameSettings = {\n    display: { type: DisplayType.SINGLE_KANA, cards: 1 },\n    kana: defaultKanaSettings,\n    hints: { enabled: true, quantity: HintQuantity.THREE },\n    lives: { enabled: false },\n    time: { timed: false, countdown: true, secondsPerQuestion: 10 }\n}\n\nexport const HARDCORE: GameSettings = {\n    display: { type: DisplayType.MULTIPLE_CARDS, cards: 6 },\n    kana: defaultKanaSettings,\n    hints: { enabled: false },\n    lives: { enabled: true, quantity: LifeQuantity.ONE },\n    time: { timed: false, countdown: true, secondsPerQuestion: 5 }\n}","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../styles/sass/components/settings/DisplayTypeButton.module.scss\";\n\ninterface DisplayTypeButtonProps {\n    text: string;\n    icon: IconDefinition;\n    selected: boolean;\n    onClick: () => void;\n}\n\nclass DisplayTypeButton extends Component<DisplayTypeButtonProps> {\n\n    constructor(props: Readonly<DisplayTypeButtonProps> | DisplayTypeButtonProps) {\n        super(props);\n        this.state = {\n            selected: false\n        }\n    }\n\n    render() {\n        const { icon, onClick, text, selected } = this.props;\n\n        return (\n            <Button\n                block\n                className={selected ? styles.selected : styles.notSelected}\n                onClick={onClick}\n            >\n                <FontAwesomeIcon\n                    className={styles.icon}\n                    icon={icon}\n                />\n                <p className={styles.name}>{text}</p>\n            </Button>\n        );\n    }\n}\n\nexport default DisplayTypeButton;","import { Component } from \"react\";\nimport { DisplaySettings } from \"../../types/GameSettings\";\nimport { DisplayType } from \"../../types/DisplayType\";\nimport DisplayTypeButton from \"./DisplayTypeButton\";\nimport { faStop, faThLarge } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport interface DisplaySettingsFormProps {\n    onChange: (settings: DisplaySettings) => void;\n}\n\ninterface DisplaySettingsFormState {\n    type: DisplayType;\n    cards: number;\n}\n\nclass DisplaySettingsForm extends Component<DisplaySettingsFormProps, DisplaySettingsFormState> {\n\n    private readonly defaultState = { type: DisplayType.SINGLE_KANA, cards: 1, };\n\n    constructor(props: Readonly<DisplaySettingsFormProps> | DisplaySettingsFormProps) {\n        super(props);\n        this.state = this.defaultState;\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<DisplaySettingsFormProps>, prevState: Readonly<DisplaySettingsFormState>) {\n        if (prevState !== this.state) {\n            const { type, cards } = this.state;\n            this.props.onChange({ type, cards });\n        }\n    }\n\n    render() {\n        const { type } = this.state;\n\n        return (\n            <Row>\n                <Col>\n                    <DisplayTypeButton\n                        text=\"Romanji\"\n                        icon={faStop}\n                        selected={type === DisplayType.SINGLE_KANA}\n                        onClick={() => this.setState({ type: DisplayType.SINGLE_KANA, cards: 1 })}\n                    />\n                </Col>\n                <Col>\n                    <DisplayTypeButton\n                        text=\"Kana\"\n                        icon={faThLarge}\n                        selected={type === DisplayType.MULTIPLE_CARDS}\n                        onClick={() => this.setState({ type: DisplayType.MULTIPLE_CARDS, cards: 4 })}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n\n    reset = () => this.setState(this.defaultState);\n}\n\nexport default DisplaySettingsForm;","import React, { Component } from \"react\";\nimport { Button, Card, Col, Form, Nav, Tab } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../styles/sass/components/settings/GameSettingsMenu.module.scss\";\nimport { faCheck, faGamepad, faHeart, faLightbulb, faStopwatch, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { DisplaySettings, GameSettings, HintSettings, KanaSettings, LifeSettings, TimeSettings } from \"../../types/GameSettings\";\nimport KanaSettingsForm from \"./KanaSettingsForm\";\nimport HintSettingsForm from \"./HintSettingsForm\";\nimport LifeSettingsForm from \"./LifeSettingsForm\";\nimport TimeSettingsForm from \"./TimeSettingsForm\";\nimport { defaultDisplaySettings, defaultHintSettings, defaultKanaSettings, defaultLifeSettings, defaultTimeSettings } from \"../../data/GameModePresets\";\nimport DisplaySettingsForm from \"./DisplaySettingsForm\";\n\nexport interface GameSettingsMenuProps {\n    onSubmit: (settings: GameSettings) => void;\n}\n\ninterface GameSettingsMenuState {\n    displaySettings: DisplaySettings;\n    kanaSettings: KanaSettings;\n    hintSettings: HintSettings;\n    lifeSettings: LifeSettings;\n    timeSettings: TimeSettings;\n}\n\nclass GameSettingsMenu extends Component<GameSettingsMenuProps, GameSettingsMenuState> {\n\n    private readonly display: React.RefObject<DisplaySettingsForm>;\n    private readonly kana: React.RefObject<KanaSettingsForm>;\n    private readonly hints: React.RefObject<HintSettingsForm>;\n    private readonly lives: React.RefObject<LifeSettingsForm>;\n    private readonly time: React.RefObject<TimeSettingsForm>;\n\n    constructor(props: GameSettingsMenuProps | Readonly<GameSettingsMenuProps>) {\n        super(props);\n\n        this.display = React.createRef();\n        this.kana = React.createRef();\n        this.hints = React.createRef();\n        this.lives = React.createRef();\n        this.time = React.createRef();\n\n        this.state = {\n            displaySettings: defaultDisplaySettings,\n            kanaSettings: defaultKanaSettings,\n            hintSettings: defaultHintSettings,\n            lifeSettings: defaultLifeSettings,\n            timeSettings: defaultTimeSettings,\n        }\n    }\n\n    render() {\n        return (\n            <div className={styles.wrapper}>\n                <Card bg=\"dark\" className=\"mb-2\">\n                    <Tab.Container defaultActiveKey=\"mode\">\n                        <Card.Header>\n                            <Nav variant=\"pills\">\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"mode\">\n                                        <FontAwesomeIcon icon={faGamepad} className={styles.modeIcon}/>\n                                    </Nav.Link>\n                                </Nav.Item>\n\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"kana\">\n                                        <span className={styles.kanaIcon}>あ</span>\n                                    </Nav.Link>\n                                </Nav.Item>\n\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"hints\">\n                                        <FontAwesomeIcon icon={faLightbulb} className={styles.hintsIcon}/>\n                                    </Nav.Link>\n                                </Nav.Item>\n\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"lives\">\n                                        <FontAwesomeIcon icon={faHeart} className={styles.livesIcon}/>\n                                    </Nav.Link>\n                                </Nav.Item>\n\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"time\">\n                                        <FontAwesomeIcon icon={faStopwatch} className={styles.timeIcon}/>\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Card.Header>\n\n                        <Card.Body>\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"mode\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>Game Mode Settings</Card.Title>\n                                    <DisplaySettingsForm\n                                        ref={this.display}\n                                        onChange={(settings) => this.setState({ displaySettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"kana\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>Kana Settings</Card.Title>\n                                    <KanaSettingsForm\n                                        ref={this.kana}\n                                        onSelect={(settings) => this.setState({ kanaSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"hints\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>Hint Settings</Card.Title>\n                                    <HintSettingsForm\n                                        ref={this.hints}\n                                      onChange={(settings) => this.setState({ hintSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"lives\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>Life Settings</Card.Title>\n                                    <LifeSettingsForm\n                                        ref={this.lives}\n                                        onChange={(settings) => this.setState({ lifeSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"time\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>Time Settings</Card.Title>\n                                    <TimeSettingsForm\n                                        ref={this.time}\n                                        onChange={(settings) => this.setState({ timeSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <Form.Row>\n                                <Col className={styles.noGuttersLeft}>\n                                    <Button variant=\"danger\" block onClick={this.onReset} className={styles.reset}>\n                                        <FontAwesomeIcon icon={faUndo}/> Reset\n                                    </Button>\n                                </Col>\n                                <Col className={styles.noGuttersRight}>\n                                    <Button variant=\"success\" block onClick={this.onConfirmation}\n                                            className={styles.confirm}>\n                                        <FontAwesomeIcon icon={faCheck}/> Confirm\n                                    </Button>\n                                </Col>\n                            </Form.Row>\n                        </Card.Footer>\n\n                    </Tab.Container>\n                </Card>\n            </div>\n        );\n    }\n\n    onConfirmation = () => {\n        const { displaySettings, kanaSettings, hintSettings, lifeSettings, timeSettings } = this.state;\n        this.props.onSubmit({\n            display: displaySettings,\n            kana: kanaSettings,\n            hints: hintSettings,\n            lives: lifeSettings,\n            time: timeSettings\n        });\n    }\n\n    onReset = () => {\n        this.display.current?.reset();\n        this.kana.current?.reset();\n        this.hints.current?.reset();\n        this.lives.current?.reset();\n        this.time.current?.reset();\n    }\n}\n\nexport default GameSettingsMenu;","export class Environment {\n    static variable = (name: string): string => {\n        const parsed = name.replaceAll(\" \", \"_\").toUpperCase();\n        return process.env[\"REACT_APP_\" + parsed] as string;\n    }\n}","import { Component } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { GameMode } from \"../../types/GameMode\";\nimport { faCircle, faFire, faFont, faGraduationCap, faPlay, faStopwatch, faVial } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport GameModeButton from \"./GameModeButton\";\nimport GameSettingsMenu from \"../settings/GameSettingsMenu\";\nimport styles from \"../../styles/sass/components/layout/GameModeMenu.module.scss\";\nimport { HARDCORE, KANA, RELAXED, ROMANJI, TIME_ATTACK } from \"../../data/GameModePresets\";\nimport { GameSettings } from \"../../types/GameSettings\";\nimport { Environment } from \"../../utility/Environment\";\n\nexport interface GameModeMenuProps {\n    onSelectedMode: (mode: GameMode, settings: GameSettings) => void;\n}\n\ninterface GameModeMenuState {\n    selected: GameMode;\n    settings: GameSettings;\n    isCustomisingSettings: boolean;\n}\n\nclass GameModeMenu extends Component<GameModeMenuProps, GameModeMenuState> {\n    constructor(props: GameModeMenuProps | Readonly<GameModeMenuProps>) {\n        super(props);\n        this.state = {\n            selected: GameMode.RELAXED,\n            isCustomisingSettings: false,\n            settings: RELAXED\n        }\n    }\n\n    render() {\n        const { isCustomisingSettings, selected } = this.state;\n\n        return (\n            <Container fluid className={styles.wrapper}>\n                {!isCustomisingSettings && <>\n                    <Row>\n                        <Col className={styles.descWrapper}>\n                            <p className={styles.desc}>{this.getSelectedModeDescription()}</p>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className={styles.leftColumn}>\n                            <GameModeButton\n                                mode={GameMode.RELAXED}\n                                icon={faGraduationCap}\n                                iconColour={\"#fdb40e\"}\n                                isSelected={selected === GameMode.RELAXED}\n                                onClick={this.onSelectMode}\n                            />\n                        </Col>\n                        <Col className={styles.rightColumn}>\n                            <GameModeButton\n                                mode={GameMode.TIME_ATTACK}\n                                icon={faStopwatch}\n                                iconColour={\"#ff7730\"}\n                                isSelected={selected === GameMode.TIME_ATTACK}\n                                onClick={this.onSelectMode}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col className={styles.leftColumn}>\n                            <GameModeButton\n                                mode={GameMode.ROMANJI}\n                                isSelected={selected === GameMode.ROMANJI}\n                                icon={faFont}\n                                iconColour={\"#1785e2\"}\n                                onClick={this.onSelectMode}\n                            />\n                        </Col>\n                        <Col className={styles.rightColumn}>\n                            <GameModeButton\n                                mode={GameMode.KANA}\n                                isSelected={selected === GameMode.KANA}\n                                icon={faCircle}\n                                iconColour={\"#a01219\"}\n                                onClick={this.onSelectMode}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col className={styles.leftColumn}>\n                            <GameModeButton\n                                mode={GameMode.HARDCORE}\n                                icon={faFire}\n                                iconColour={\"#fc3131\"}\n                                isSelected={selected === GameMode.HARDCORE}\n                                onClick={this.onSelectMode}\n                            />\n                        </Col>\n                        <Col className={styles.rightColumn}>\n                            <GameModeButton\n                                mode={GameMode.CUSTOM}\n                                icon={faVial}\n                                iconColour={\"#41d085\"}\n                                isSelected={selected === GameMode.CUSTOM}\n                                onClick={this.onLaunchCustomSettings}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Button variant=\"success\" className={styles.playButton} onClick={this.confirmSelected}>\n                                <FontAwesomeIcon size=\"sm\" icon={faPlay}/> Start\n                            </Button>\n                        </Col>\n                    </Row>\n                </>}\n\n                {isCustomisingSettings && <GameSettingsMenu onSubmit={this.setCustomSettings}/>}\n            </Container>\n        );\n    }\n\n    setCustomSettings = (settings: GameSettings) => this.setState({ settings, isCustomisingSettings: false });\n\n    confirmSelected = () => {\n        const { selected, settings } = this.state;\n        this.props.onSelectedMode(selected, settings);\n    }\n\n    onSelectMode = (mode: GameMode) => {\n        let preset: GameSettings = ROMANJI;\n        switch (mode) {\n            case GameMode.RELAXED:\n                preset = RELAXED;\n                break;\n            case GameMode.TIME_ATTACK:\n                preset = TIME_ATTACK;\n                break;\n            case GameMode.ROMANJI:\n                preset = ROMANJI;\n                break;\n            case GameMode.KANA:\n                preset = KANA;\n                break;\n            case GameMode.HARDCORE:\n                preset = HARDCORE;\n                break;\n        }\n\n        this.setState({ selected: mode, settings: preset });\n    }\n\n    onLaunchCustomSettings = () => {\n        this.onSelectMode(GameMode.CUSTOM);\n        this.setState({ isCustomisingSettings: true });\n    }\n\n    private getSelectedModeDescription = () => Environment.variable(\"MODE_DESC_\" + this.state.selected);\n}\n\nexport default GameModeMenu;","export class Numbers {\n    static randomInt = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1) + min);\n}","import {Numbers} from \"./Numbers\";\n\nexport class RandomNumberGenerator {\n    //TODO: Move to Arrays.ts\n    static getRandomArrayIndex<T>(array: T[]): number {\n        return Numbers.randomInt(0, array.length - 1);\n    }\n\n    /**\n     * Picks a random object from the given pool and removes it.\n     * @param pool The array of objects to choose from.\n     * @returns A two-element tuple containing the randomly chosen object and the trimmed pool.\n     */\n    static getRandomObject = <T>(pool: T[]): [T, T[]] => {\n        const objects = [...pool];\n        const randomIndex = RandomNumberGenerator.getRandomArrayIndex(objects);\n        const firstKana = objects[randomIndex];\n        objects.splice(randomIndex, 1);\n        return [firstKana, objects];\n    };\n}","export enum FailureReason {\n    NO_LIVES_REMAINING,\n    NO_TIME_REMAINING\n}","import React, { Component } from \"react\";\nimport { faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../styles/sass/components/game/Timer.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport interface TimerProps {\n    end?: number;\n    className?: string;\n    pausable?: boolean;\n    onPaused?: () => void;\n}\n\ninterface TimerState {\n    start: number;\n    current: number;\n    interval: any;\n    paused: boolean;\n    isStopped: boolean;\n}\n\nclass Timer extends Component<TimerProps, TimerState> {\n    constructor(props: TimerProps | Readonly<TimerProps>) {\n        super(props);\n        this.state = {\n            start: Date.now(),\n            current: Date.now(),\n            interval: undefined,\n            paused: false,\n            isStopped: false\n        }\n    }\n\n    componentDidMount() {\n        this.start();\n    }\n\n    componentWillUnmount() {\n        this.stop();\n    }\n\n    render() {\n        const { paused, isStopped } = this.state;\n        const { className, pausable } = this.props;\n\n        return (\n            <span className={className}>\n                {pausable && !isStopped && <FontAwesomeIcon\n                    icon={paused ? faPlay : faPause}\n                    className={styles.pause}\n                    onClick={paused ? this.play : this.pause}\n                    title=\"Pause\"\n                    size=\"sm\"\n                />}\n                {this.formatTimeElapsed()}\n            </span>\n        );\n    }\n\n    stop = () => {\n        this.setState({ paused: true, isStopped: true });\n        clearInterval(this.state.interval);\n    }\n\n    restart = () => {\n        this.setState({\n            start: Date.now(),\n            current: Date.now(),\n            interval: undefined,\n            paused: false,\n            isStopped: false\n        }, () => this.start());\n    }\n\n    getCurrentTime = () => this.formatTimeElapsed();\n\n    private play = () => {\n        this.onChangePausedState();\n        this.setState({ interval: setInterval(() => this.tick(), 1000), paused: false });\n    }\n\n    private pause = () => {\n        this.onChangePausedState();\n        this.setState({ paused: true });\n        clearInterval(this.state.interval);\n    }\n\n    private tick = () => this.setState({ current: this.state.current + 1000 });\n\n    private start = () => {\n        this.setState({ interval: setInterval(() => this.tick(), 1000), paused: false, isStopped: false });\n    }\n\n    private onChangePausedState = () => {\n        if (this.props.onPaused) this.props.onPaused();\n    }\n\n    private formatTimeElapsed(): string {\n        const { start, current } = this.state;\n        const delta = current - start;\n        const date = new Date(1000 * Math.round(delta / 1000));\n        const hours = date.getUTCHours();\n        return (hours ? hours + \":\" : \"\") + this.pad(date.getUTCMinutes()) + \":\" + this.pad(date.getUTCSeconds());\n    }\n\n    private pad = (value: number) => (\"0\" + value).slice(-2);\n}\n\nexport default Timer;","import React, { Component } from \"react\";\nimport { faHeart, faInfinity } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../styles/sass/components/game/LifeDisplay.module.scss\";\n\nexport interface LifeDisplayProps {\n    hearts: number;\n}\n\nclass LifeDisplay extends Component<LifeDisplayProps> {\n    render() {\n        const { hearts } = this.props;\n        return (\n            <>\n                <FontAwesomeIcon icon={faHeart} title=\"Lives\" className={styles.icon}/>\n                <span className={styles.quantity}>\n                    {hearts === 999 ? <FontAwesomeIcon icon={faInfinity} title=\"Infinite\"/> : hearts}\n                </span>\n            </>\n        );\n    }\n}\n\nexport default LifeDisplay;","import React, { Component } from \"react\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../styles/sass/components/ui/QuitButton.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface QuitButtonProps {\n    onClick: () => void;\n}\n\nclass QuitButton extends Component<QuitButtonProps> {\n    render() {\n        return (\n            <FontAwesomeIcon\n                icon={faTimes}\n                className={styles.icon}\n                onClick={this.props.onClick}\n                title=\"Quit\"\n            />\n        );\n    }\n}\n\nexport default QuitButton;","export enum KanaColumn {\n    VOWEL = \"vowel\",\n    K = \"k\",\n    S = \"s\",\n    T = \"t\",\n    N = \"n\",\n    H = \"h\",\n    M = \"m\",\n    Y = \"y\",\n    R = \"r\",\n    W = \"w\",\n    OTHER = \"?\"\n}","import { Component } from \"react\";\n\nexport interface CountDownProps {\n    value: number;\n    className?: string;\n    onFinish: () => void;\n}\n\ninterface CountDownState {\n    remaining: number;\n    interval: any;\n}\n\nclass CountDown extends Component<CountDownProps, CountDownState> {\n    constructor(props: CountDownProps | Readonly<CountDownProps>) {\n        super(props);\n        this.state = {\n            remaining: this.props.value,\n            interval: undefined\n        }\n    }\n\n    componentDidMount() {\n        this.start();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.interval);\n    }\n\n    render() {\n        return (\n            <span className={this.props.className} title=\"Time Remaining\">\n                {this.state.remaining}\n            </span>\n        );\n    }\n\n    reset = () => {\n        clearInterval(this.state.interval);\n        this.setState({ remaining: this.props.value, interval: undefined }, () => this.start());\n    }\n\n    stop = () => {\n        clearInterval(this.state.interval);\n        this.setState({ interval: undefined });\n    }\n\n    private decrement = () => {\n        const { remaining } = this.state;\n        if (remaining === 0) {\n            this.props.onFinish();\n            this.reset();\n        } else {\n            this.setState({ remaining: remaining - 1 });\n        }\n    }\n\n    private start = () => this.setState({ interval: setInterval(() => this.decrement(), 1000 )});\n\n}\n\nexport default CountDown;","import { Component } from \"react\";\n\nexport interface DynamicCharacterProps {\n    value: string;\n    classes?: string[] | string;\n    style?: CharacterStyleProps;\n    isDiagraphLeft?: boolean;\n    isDiagraphRight?: boolean;\n}\n\nexport interface CharacterStyleProps {\n    size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n    color?: string;\n}\n\nexport class DynamicCharacter extends Component<DynamicCharacterProps> {\n    render() {\n        const { value, style, isDiagraphLeft, isDiagraphRight } = this.props;\n\n        return (\n            <p\n                style={{\n                    fontSize: this.getSize(),\n                    marginLeft: isDiagraphRight ? -this.getMargin() : 0,\n                    marginRight: isDiagraphLeft ? -this.getMargin() : 0,\n                    color: style?.color\n                }}\n                className={this.getClasses()}\n            >\n                {value}\n            </p>\n        );\n    }\n\n    private getClasses = (): string | undefined => {\n        const { classes } = this.props;\n        return typeof classes === \"string\" ? classes : classes?.join(\" \") ?? undefined;\n    }\n\n    private getSize = (): string => {\n        switch (this.props.style?.size) {\n            case \"xs\":\n                return \"2.5em\";\n            case \"sm\":\n                return \"3em\";\n            case \"md\":\n                return \"5em\";\n            case \"lg\":\n                return \"8em\";\n            case \"xl\":\n                return \"10em\";\n            default:\n                return \"1em\";\n        }\n    }\n\n    private getMargin = (): number => {\n        switch (this.props.style?.size) {\n            case \"xs\":\n                return 3;\n            case \"sm\":\n                return 4;\n            case \"md\":\n                return 5;\n            case \"lg\":\n                return 8;\n            case \"xl\":\n                return 10;\n            default:\n                return 0;\n        }\n    }\n}\n\nexport default DynamicCharacter;","import React, { Component } from \"react\";\nimport { Kana } from \"../../types/Kana\";\nimport { Container } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/game/KanaDisplay.module.scss\";\nimport DynamicCharacter, { CharacterStyleProps } from \"./DynamicCharacter\";\n\nexport interface KanaDisplayProps {\n    kana: Kana;\n    blur?: boolean;\n    index?: number;\n    onClick?: (kana: Kana) => void;\n    style?: KanaDisplayStyle;\n}\n\ninterface KanaDisplayStyle {\n    container?: string;\n    character?: CharacterStyleProps;\n}\n\ninterface KanaDisplayState {\n    isNotifyingIncorrect: boolean;\n}\n\nclass KanaDisplay extends Component<KanaDisplayProps, KanaDisplayState> {\n    constructor(props: KanaDisplayProps | Readonly<KanaDisplayProps>) {\n        super(props);\n        this.state = {\n            isNotifyingIncorrect: false\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<KanaDisplayProps>, prevState: Readonly<KanaDisplayState>) {\n        if (prevState.isNotifyingIncorrect) {\n            this.setState({ isNotifyingIncorrect: false });\n        }\n    }\n\n    notifyIncorrect = () => this.setState({ isNotifyingIncorrect: true });\n\n    render() {\n        const { isNotifyingIncorrect } = this.state;\n        const { blur, kana, style, index, onClick } = this.props;\n\n        const kanaClass = isNotifyingIncorrect ? styles.redKana : blur ? styles.blur : styles.kana;\n        const leftDiagraphClass = isNotifyingIncorrect ? styles.redKana : blur ? styles.diagraphBlur : styles.diagraphLeft;\n        const rightDiagraphClass = isNotifyingIncorrect ? styles.redKana : blur ? styles.diagraphBlur : styles.diagraphRight;\n        const clickable = onClick ? styles.clickable : \"\";\n\n        return (\n            <Container className={style?.container ? style.container : styles.wrapper} onClick={() => this.props.onClick?.(kana)}>\n                <span className={styles.index} style={{ color: style?.character?.color, visibility: index && !blur ? 'visible' : 'hidden' }}>\n                    {index}\n                </span>\n\n                {kana.isDiagraph() ?\n                    <>\n                        <DynamicCharacter\n                            value={kana.code[0]}\n                            style={style?.character}\n                            classes={[leftDiagraphClass, styles.diagraphLeft, clickable]}\n                            isDiagraphLeft={true}\n                        />\n                        <DynamicCharacter\n                            value={kana.code[1]}\n                            style={style?.character}\n                            classes={[rightDiagraphClass, styles.diagraphRight, clickable]}\n                            isDiagraphRight={true}\n                        />\n                    </> :\n                    <DynamicCharacter value={kana.code} style={style?.character} classes={[kanaClass, clickable]}/>\n                }\n            </Container>\n        );\n    }\n}\n\n\nexport default KanaDisplay;","import React, { ChangeEvent, Component } from \"react\";\nimport styles from \"../../styles/sass/components/game/RomanjiInput.module.scss\";\nimport { Form } from \"react-bootstrap\";\n\nexport interface RomanjiInputProps {\n    disabled?: boolean;\n    value?: string;\n    placeholder?: string;\n    onChange?: (value: string) => void;\n    onEnterKey?: () => void;\n}\n\nclass RomanjiInput extends Component<RomanjiInputProps> {\n\n    private readonly input = React.createRef<HTMLInputElement>();\n\n    componentDidMount() {\n        this.input?.current?.focus();\n    }\n\n    render() {\n        const { disabled, value, placeholder } = this.props;\n\n        return (\n            <Form.Control\n                className={styles.input}\n                plaintext\n                disabled={disabled}\n                value={value}\n                placeholder={placeholder}\n                onChange={this.handleOnChange}\n                onKeyPress={this.handleKeyPress}\n                ref={this.input}\n            />\n        );\n    }\n\n    private handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            if (this.props.value && this.props.onEnterKey) {\n                this.props.onEnterKey();\n            }\n        }\n        return false;\n    }\n\n    private handleOnChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n        this.props?.onChange?.(e.target.value);\n    }\n}\n\nexport default RomanjiInput;","import { Component } from \"react\";\nimport { Popover } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/PopOver.module.scss\";\n\ninterface PopOverProps {\n    title: string;\n    text: string;\n}\n\nclass PopOver extends Component<PopOverProps> {\n    render() {\n        const { title, text } = this.props;\n\n        return (\n            <Popover id=\"popover\" className={styles.popover} {...this.props}>\n                <Popover.Title as=\"h3\">{title}</Popover.Title>\n                <Popover.Content>{text}</Popover.Content>\n            </Popover>\n        );\n    }\n}\n\nexport default PopOver;","import React, { Component } from \"react\";\nimport styles from \"../../styles/sass/components/game/HintButton.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLightbulb } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, OverlayTrigger } from \"react-bootstrap\";\nimport PopOver from \"../ui/PopOver\";\nimport { Kana } from \"../../types/Kana\";\nimport { KanaColumn } from \"../../types/KanaColumn\";\n\nexport interface HintButtonProps {\n    kana: Kana;\n    quantity: number\n    totalQuantity?: number;\n    title?: string;\n    disabled?: boolean;\n    onUse?: () => void;\n}\n\nclass HintButton extends Component<HintButtonProps> {\n    render() {\n        const { title, disabled, quantity } = this.props;\n\n        const overlay = <PopOver title={this.getTitle()} text={this.getContent()}/>;\n        return (\n            <OverlayTrigger onToggle={this.props.onUse} trigger=\"focus\" placement=\"left\" overlay={overlay}>\n                <Button\n                    variant=\"warning\"\n                    className={quantity > 0 ? styles.tip : styles.disabled}\n                    title={title}\n                    disabled={disabled}\n                >\n                    <FontAwesomeIcon icon={faLightbulb}/>\n                </Button>\n            </OverlayTrigger>\n        );\n    }\n\n\n    private getTitle = () => {\n        const { quantity, totalQuantity } = this.props;\n        if (quantity > 0) {\n            if (quantity <= 10) {\n                return \"Need a hint? (\" + (quantity - 1) + \"/\" + totalQuantity + \" remaining)\";\n            }\n            return \"Need a hint?\"\n        }\n        return \"Sorry!\";\n    }\n\n    private getContent = () => {\n        const { kana, quantity } = this.props;\n        if (quantity <= 0) {\n            return \"You've used all of your hints.\";\n        }\n        if (kana.column === KanaColumn.OTHER) {\n            return \"This kana is exceptional. It is not a consonant nor a vowel.\"\n        }\n\n        let message: string;\n        const diacritical = \" Also, notice the diacritical mark.\";\n\n        if (kana.isDiagraph()) {\n            message = \"Diagraphs usually drop the 1st kana's 2nd letter when transcribed.\"\n        } else {\n            message = \"This kana is from the '\" + kana.column + \"' column in the \" + kana.type + \" syllabary.\";\n        }\n\n        return message + (kana.isDiacritical ? diacritical : \"\");\n    }\n\n}\n\nexport default HintButton;","import React, { Component } from \"react\";\nimport KanaDisplay from \"./KanaDisplay\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/game/KanaMemoryTest.module.scss\";\nimport RomanjiInput from \"./RomanjiInput\";\nimport HintButton from \"./HintButton\";\nimport { Kana } from \"../../types/Kana\";\nimport { HintSettings } from \"../../types/GameSettings\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface RomanjiQuestionProps {\n    kana: Kana;\n    hidden: boolean;\n    hintSettings: HintSettings;\n    onSubmit: (correct: boolean) => void;\n}\n\ninterface RomanjiQuestionState {\n    answer: string;\n    hints: number;\n    hasUsedHintThisQuestion: boolean;\n}\n\nclass RomanjiQuestion extends Component<RomanjiQuestionProps, RomanjiQuestionState> {\n\n    private readonly kanaDisplay: React.RefObject<KanaDisplay>;\n\n    constructor(props: Readonly<RomanjiQuestionProps> | RomanjiQuestionProps) {\n        super(props);\n\n        this.kanaDisplay = React.createRef();\n\n        this.state = {\n            answer: \"\",\n            hints: this.props.hintSettings?.quantity?.valueOf() ?? 0,\n            hasUsedHintThisQuestion: false\n        }\n    }\n\n    render() {\n        const { kana, hidden, hintSettings } = this.props;\n        const { answer, hints } = this.state;\n\n        return (\n            <>\n                <KanaDisplay\n                    kana={kana}\n                    key={kana.code}\n                    ref={this.kanaDisplay}\n                    blur={hidden}\n                    style={ { character: { size: \"xl\" }} }\n                />\n\n                <Form>\n                    <Form.Group controlId=\"answer\">\n                        <Row>\n                            <Col xs={true} className={styles.inputCol}>\n                                <RomanjiInput\n                                    value={answer}\n                                    disabled={!kana || hidden}\n                                    onChange={(value) => this.setState({ answer: value })}\n                                    placeholder={hidden ? \"Paused\" : \"Enter the romanji\"}\n                                    onEnterKey={this.answer}\n                                />\n                            </Col>\n                            <Col xs=\"auto\" className={styles.tipCol}>\n                                <HintButton\n                                    kana={kana}\n                                    quantity={hints}\n                                    totalQuantity={hintSettings.quantity?.valueOf() ?? 0}\n                                    key={kana.code}\n                                    title=\"Get a Hint\"\n                                    disabled={hidden || !hintSettings.enabled}\n                                    onUse={() => this.setState({ hasUsedHintThisQuestion: true })}\n                                />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n\n                    <Button\n                        className={styles.submit}\n                        variant={!!kana ? \"success\" : \"primary\"}\n                        type=\"button\"\n                        disabled={!answer && !!kana || hidden}\n                        onClick={this.answer}\n                    >\n                        {!!kana ? \"Check\" : <><FontAwesomeIcon icon={faRedoAlt}/> Restart</>}\n                    </Button>\n                </Form>\n            </>\n        );\n    }\n\n    private answer = () => {\n        const { answer, hints, hasUsedHintThisQuestion } = this.state;\n        const { kana } = this.props;\n\n        if (kana.romanji.includes(answer)) {\n            this.props.onSubmit(true);\n        } else {\n            this.kanaDisplay.current?.notifyIncorrect();\n            this.props.onSubmit(false);\n        }\n\n        this.setState({\n            answer: \"\",\n            hasUsedHintThisQuestion: false,\n            hints: hasUsedHintThisQuestion ? hints - 1 : hints\n        });\n    }\n}\n\nexport default RomanjiQuestion;","import { Numbers } from \"./Numbers\";\n\nexport default class Arrays {\n    /**\n     * Calculates the difference between two arrays.\n     * @return An array of all element deltas.\n     */\n    static subtracting<T>(arr1: T[], arr2: T[]): T[] {\n        if (arr1.length > arr2.length) {\n            return arr1.filter(element => arr2.indexOf(element) < 0);\n        } else {\n            return arr2.filter(element => arr1.indexOf(element) < 0);\n        }\n    }\n\n    /**\n     * Creates a new array by spreading all the elements into another.\n     * @return a copy of the given array.\n     */\n    public static copy<T>(array: T[]): T[] {\n        return [...array];\n    }\n\n    /**\n     * Checks if the two arrays are equals.\n     * Only works with array of primitive types.\n     * @return true if both arrays contain the same elements, else false.\n     */\n    public static areEqual(a: any[], b: any[]): boolean {\n        return JSON.stringify(a.sort()) === JSON.stringify(b.sort());\n    }\n\n    /**\n     * Shuffles the order of the elements in the given array.\n     * @return A copy of the array with shuffled elements.\n     */\n    public static shuffle<T>(array: T[]): T[] {\n        const shuffled = [...array];\n        for (let i = shuffled.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        return shuffled;\n    }\n\n    /**\n     * Removes an element from an array.\n     * @param array The array to remove from.\n     * @param value The value of the element to remove.\n     * @return The mutated array.\n     */\n    static remove<T>(array: T[], value: T): T[] {\n        const index = array.indexOf(value);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return array;\n    }\n\n    /**\n     * Generates n random elements from an array.\n     * @param array The array to pick from.\n     * @param quantity The number of elements to return.\n     * @return An array of all randomly selected elements.\n     */\n    static getRandomElements<T>(array: T[], quantity: number): T[] {\n        let elements = [];\n        let copy = this.copy(array);\n        for (let i = 0; i < quantity; i++) {\n            const index = Numbers.randomInt(0, copy.length - 1);\n            const element = copy[index];\n            copy = this.remove(copy, element)\n            elements.push(element);\n        }\n        return elements;\n    }\n}","import React, { Component } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/game/KanaChoiceQuestion.module.scss\";\nimport { Kana } from \"../../types/Kana\";\n\nexport interface KanaQuestionBannerProps {\n    value: Kana;\n}\n\nclass KanaQuestionBanner extends Component<KanaQuestionBannerProps> {\n    render() {\n        const { value } = this.props;\n        return (\n            <Alert className={styles.question} variant=\"secondary\" aria-labelledby=\"Kana Question\">\n                Which {value.isDiagraph() ? \"diagraph\" : \"kana\"} is {this.getRomanji()} ?\n            </Alert>\n        );\n    }\n\n    private getRomanji = () => {\n        const value = this.props.value;\n        const romanji = value.romanji;\n        if (romanji.length > 1) {\n            return <><strong>'{romanji[0]}'</strong> or <strong>'{romanji[1]}'</strong></>;\n        } else {\n            return <strong>'{romanji[0]}'</strong>;\n        }\n    }\n}\n\nexport default KanaQuestionBanner;","import React, { Component } from \"react\";\nimport { Kana } from \"../../types/Kana\";\nimport Arrays from \"../../utility/Arrays\";\nimport KanaDisplay from \"./KanaDisplay\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/game/KanaChoiceQuestion.module.scss\";\nimport KanaQuestionBanner from \"./KanaQuestionBanner\";\n\nexport interface KanaChoiceQuestionProps {\n    expected: Kana;\n    wrong: Kana[];\n    hidden: boolean;\n    onSubmit: (correct: boolean) => void;\n}\n\ninterface KanaChoiceQuestionState {\n    selected?: Kana;\n    options: Kana[];\n}\n\nclass KanaChoiceQuestion extends Component<KanaChoiceQuestionProps, KanaChoiceQuestionState> {\n\n    private displays = new Map<Kana, React.RefObject<KanaDisplay>>();\n    private indices = new Map<number, Kana>();\n\n    constructor(props: Readonly<KanaChoiceQuestionProps> | KanaChoiceQuestionProps) {\n        super(props);\n\n        const { expected, wrong } = this.props;\n\n        const kana = Arrays.shuffle(wrong.concat(expected));\n\n        kana.map((option, i) => {\n            const ref = React.createRef<KanaDisplay>();\n            this.displays.set(option, ref);\n            this.indices.set(i + 1, option);\n        });\n\n        this.state = {\n            selected: undefined,\n            options: kana\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeySelection);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeySelection);\n    }\n\n    render() {\n        const { expected, hidden } = this.props;\n        const { selected, options } = this.state;\n\n        return (\n            <div>\n                <KanaQuestionBanner value={expected} />\n\n                <Row>\n                    {options.map((option, i) => {\n                        return (\n                            <Col xs={6} key={\"col-\" + i}>\n                                <KanaDisplay\n                                    kana={option}\n                                    blur={hidden}\n                                    index={i + 1}\n                                    onClick={this.select}\n                                    style={{\n                                        container: selected === option ? styles.selected : styles.tile,\n                                        character: { size: \"md\", color: selected === option ? \"#43ea5f\" : undefined }\n                                    }}\n                                    ref={this.displays.get(option)}\n                                />\n                            </Col>\n                        )\n                    })}\n                </Row>\n\n                <Button variant={\"success\"} type=\"button\" disabled={!selected || hidden} onClick={this.answer} block>\n                    Check\n                </Button>\n            </div>\n        );\n    }\n\n    private answer = () => {\n        const { selected } = this.state;\n        if (this.props.expected === selected) {\n            this.props.onSubmit(true);\n        } else {\n            this.displays.get(selected as Kana)?.current?.notifyIncorrect();\n            this.props.onSubmit(false);\n        }\n    }\n\n    private select = (value?: Kana) => this.setState({ selected: value });\n\n    private handleKeySelection = (e: KeyboardEvent) => {\n        e.preventDefault();\n\n        //Handle Numbers (1 - Tile Quantity)\n        if ([...this.indices.keys()].map(i => i.toString()).includes(e.key)) {\n            const kana = this.indices.get(Number(e.key));\n            this.select(kana);\n        }\n\n        if (this.state.selected && e.key === 'Enter') {\n            this.answer();\n        }\n    }\n\n}\n\nexport default KanaChoiceQuestion;","import React, { Component } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/SessionProgressBar.module.scss\";\n\ninterface SessionProgressBarProps {\n    inProgress: boolean;\n    value: number;\n    title?: string;\n    className?: string;\n}\n\nclass SessionProgressBar extends Component<SessionProgressBarProps> {\n    render() {\n        const { inProgress, value, title, className } = this.props\n        return (\n            <ProgressBar\n                animated={inProgress}\n                className={className ? className : styles.progress}\n                now={value}\n                variant={!inProgress ? \"success\" : undefined}\n                title={title}\n            />\n        );\n    }\n}\n\nexport default SessionProgressBar;","import { Filter } from \"./Filter\";\n\nexport default class FilterChain<T> {\n    private filters = new Set<Filter<T>>();\n\n    constructor() { }\n\n    public addFilter(filter: Filter<T>) {\n        this.filters.add(filter);\n    }\n\n    public execute(values: T[]): T[] {\n        let reduced = values;\n        [...this.filters].forEach((filter: Filter<T>) => {\n            reduced = filter.apply(reduced);\n        });\n        return reduced;\n    }\n}","import { Kana } from \"../../types/Kana\";\nimport { Filter } from \"../Filter\";\n\nexport default class DiagraphFilter implements Filter<Kana> {\n\n    private readonly include: boolean;\n\n    constructor(include: boolean = false) {\n        this.include = include;\n    }\n\n    apply(kana: Kana[]): Kana[] {\n        return kana.filter(kana => kana.isDiagraph() === this.include);\n    }\n}","import { Kana } from \"../../types/Kana\";\nimport { Filter } from \"../Filter\";\n\nexport default class ExclusionFilter implements Filter<Kana> {\n\n    private readonly kana: Kana;\n\n    constructor(kana: Kana) {\n        this.kana = kana;\n    }\n\n    apply(kana: Kana[]): Kana[] {\n        return kana.filter(kana => !kana.equals(this.kana));\n    }\n}","import KanaType from \"../../types/KanaType\";\nimport { Kana } from \"../../types/Kana\";\nimport { Filter } from \"../Filter\";\n\nexport default class KanaTypeFilter implements Filter<Kana> {\n\n    private readonly type: KanaType;\n    private readonly include: boolean;\n\n    constructor(type: KanaType, include: boolean = false) {\n        this.type = type;\n        this.include = include;\n    }\n\n    apply(kana: Kana[]): Kana[] {\n        return kana.filter(kana => this.include ? kana.type === this.type : kana.type !== this.type);\n    }\n}","import React, { Component } from \"react\";\nimport { Kana } from \"../../types/Kana\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/game/KanaMemoryTest.module.scss\";\nimport { RandomNumberGenerator } from \"../../utility/RandomNumberGenerator\";\nimport Timer from \"./Timer\";\nimport { GameSettings } from \"../../types/GameSettings\";\nimport LifeDisplay from \"./LifeDisplay\";\nimport { LifeQuantity } from \"../../types/LifeQuantity\";\nimport QuitButton from \"../ui/QuitButton\";\nimport GameResult from \"../../types/GameResult\";\nimport { FailureReason } from \"../../types/FailureReason\";\nimport CountDown from \"./CountDown\";\nimport RomanjiQuestion from \"./RomanjiQuestion\";\nimport { DisplayType } from \"../../types/DisplayType\";\nimport KanaChoiceQuestion from \"./KanaChoiceQuestion\";\nimport Arrays from \"../../utility/Arrays\";\nimport SessionProgressBar from \"../ui/SessionProgressBar\";\nimport FilterChain from \"../../filters/FilterChain\";\nimport DiagraphFilter from \"../../filters/kana/DiagraphFilter\";\nimport ExclusionFilter from \"../../filters/kana/ExclusionFilter\";\nimport KanaTypeFilter from \"../../filters/kana/KanaTypeFilter\";\n\nexport interface KanaMemoryTestProps {\n    kana: Kana[];\n    settings: GameSettings;\n    onClose: () => void;\n    onFinish: (result: GameResult) => void;\n}\n\ninterface KanaMemoryTestState {\n    currentKana: Kana;\n    remainingKana: Kana[];\n    correctAnswers: Set<Kana>;\n    wrongAnswers: Kana[];\n    hasExhaustedKana: boolean;\n    paused: boolean;\n    lives: number;\n    failedToAnswer: number;\n}\n\nclass KanaMemoryTest extends Component<KanaMemoryTestProps, KanaMemoryTestState> {\n    private readonly timer: React.RefObject<Timer>;\n    private readonly countdown: React.RefObject<CountDown>;\n\n    constructor(props: KanaMemoryTestProps | Readonly<KanaMemoryTestProps>) {\n        super(props);\n\n        this.timer = React.createRef();\n        this.countdown = React.createRef();\n\n        const { settings, kana } = this.props;\n\n        const [firstKana, remainingKana] = RandomNumberGenerator.getRandomObject(kana);\n\n        this.state = {\n            currentKana: firstKana,\n            remainingKana: remainingKana,\n            correctAnswers: new Set<Kana>(),\n            wrongAnswers: [],\n            hasExhaustedKana: false,\n            paused: false,\n            lives: settings.lives.quantity?.valueOf() ?? LifeQuantity.ZERO,\n            failedToAnswer: 0\n        }\n    }\n\n    componentDidUpdate() {\n        const { lives, correctAnswers, wrongAnswers} = this.state\n        const { kana, settings, onFinish } = this.props;\n\n        if (settings.lives.enabled && lives === 0) {\n            onFinish({\n                reason: FailureReason.NO_LIVES_REMAINING,\n                success: false,\n                livesRemaining: 0,\n                totalKanaOffered: kana.length,\n                correctAnswers: correctAnswers,\n                wrongAnswers: wrongAnswers,\n                duration: this.timer.current?.getCurrentTime() ?? undefined\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.reset();\n    }\n\n    render() {\n        const { correctAnswers, failedToAnswer, hasExhaustedKana, lives, remainingKana } = this.state;\n        const { kana, settings } = this.props;\n\n        return (\n            <Container className={styles.wrapper}>\n                <Row noGutters>\n                    <Col xs={12}>\n                        <SessionProgressBar\n                            inProgress={!hasExhaustedKana}\n                            value={((correctAnswers.size + failedToAnswer) / kana.length) * 100}\n                            title={(kana.length - remainingKana.length)  + \"/\" + kana.length}\n                        />\n                    </Col>\n\n                    <Col>\n                        <QuitButton onClick={this.close} />\n                    </Col>\n\n                    <Col className={styles.lifeDisplayContainer}>\n                        {settings.lives.enabled && <LifeDisplay hearts={lives} />}\n                    </Col>\n\n                    <Col>\n                        {settings.time.timed &&\n                            <Timer className={styles.timer} ref={this.timer} pausable onPaused={this.onPaused}/>\n                        }\n                        {settings.time.countdown &&\n                            <CountDown\n                                className={styles.timer}\n                                ref={this.countdown}\n                                value={settings.time?.secondsPerQuestion ?? 10}\n                                onFinish={this.countDownTimeElapsed}\n                            />\n                        }\n                    </Col>\n                </Row>\n\n                {this.getQuestion()}\n            </Container>\n        );\n    }\n\n    private getQuestion = () => {\n        const { settings, kana } = this.props;\n        const { currentKana, paused } = this.state;\n\n        switch (settings.display.type) {\n            case DisplayType.SINGLE_KANA: {\n                return (\n                    <RomanjiQuestion\n                        kana={currentKana}\n                        onSubmit={this.answerQuestion}\n                        hidden={paused}\n                        hintSettings={settings.hints}\n                    />\n                );\n            }\n            case DisplayType.MULTIPLE_CARDS: {\n                const chain = new FilterChain<Kana>();\n\n                chain.addFilter(new DiagraphFilter(currentKana.isDiagraph()));\n                chain.addFilter(new KanaTypeFilter(currentKana.type, true));\n                chain.addFilter(new ExclusionFilter(currentKana));\n\n                const wrong = Arrays.getRandomElements(chain.execute(kana), settings.display.cards - 1);\n\n                return (\n                    <KanaChoiceQuestion\n                        key={currentKana.code}\n                        expected={currentKana}\n                        wrong={wrong}\n                        hidden={paused}\n                        onSubmit={this.answerQuestion}\n                    />\n                );\n            }\n        }\n    }\n\n    answerQuestion = (correct: boolean) => {\n        const { currentKana, correctAnswers, wrongAnswers, remainingKana, lives } = this.state;\n        const { settings, kana } = this.props;\n\n        if (correct) {\n            //Add the current kana to the correct answers set.\n            this.setState({ correctAnswers: correctAnswers.add(currentKana)});\n\n            if (remainingKana.length === 0) {\n                //If we're out of kana, stop the timer and let the component know the pool has been exhausted.\n                this.timer.current?.stop();\n                this.setState({ hasExhaustedKana: true, paused: false });\n                this.props.onFinish({\n                    reason: undefined,\n                    success: true,\n                    livesRemaining: lives,\n                    totalKanaOffered: kana.length,\n                    correctAnswers: correctAnswers,\n                    wrongAnswers: wrongAnswers,\n                    duration: this.timer.current?.getCurrentTime() ?? undefined\n                });\n            } else {\n                //If we're being timed per kana, reset the timer.\n                this.countdown.current?.reset();\n\n                //Pick a random remaining kana and remove it from the pool.\n                const [nextKana, nextRemainingKana] = RandomNumberGenerator.getRandomObject(remainingKana);\n\n                //Update the next kana to be displayed and the remaining kana with one less.\n                this.setState({ currentKana: nextKana, remainingKana: nextRemainingKana });\n            }\n        } else {\n            //If the question was answered incorrectly, update the lives and wrong answer pool.\n            this.setState({\n                lives: settings.lives.enabled && !settings.time.countdown ? lives - 1 : lives,\n                wrongAnswers: wrongAnswers.concat(currentKana)\n            });\n        }\n    }\n\n    reset = () => {\n        const [nextKana, remainingKana] = RandomNumberGenerator.getRandomObject(this.props.kana);\n\n        this.setState({\n            currentKana: nextKana,\n            remainingKana: remainingKana,\n            correctAnswers: new Set<Kana>(),\n            wrongAnswers: [],\n            paused: false,\n            hasExhaustedKana: false,\n        });\n\n        this.timer.current?.restart();\n        this.countdown.current?.reset();\n    }\n\n    private countDownTimeElapsed = () => {\n        const { lives, wrongAnswers, currentKana, remainingKana, failedToAnswer } = this.state;\n        //this.kanaDisplay.current?.notifyIncorrect(); TODO: Can we notify the question components of incorrectness when timer runs out?\n        this.countdown.current?.reset();\n\n        //Pick a random remaining kana and remove it from the pool.\n        const [nextKana, nextRemainingKana] = RandomNumberGenerator.getRandomObject(remainingKana);\n\n        this.setState({\n            currentKana: nextKana,\n            remainingKana: nextRemainingKana,\n            lives: this.props.settings.lives.enabled ? lives - 1 : lives,\n            wrongAnswers: wrongAnswers.concat(currentKana),\n            failedToAnswer: failedToAnswer + 1\n        });\n    }\n\n    private close = () => {\n        this.reset();\n        this.props.onClose();\n    }\n\n    private onPaused = () => this.setState({ paused: !this.state.paused })\n}\n\nexport default KanaMemoryTest;","import { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Kana } from \"../../types/Kana\";\nimport styles from \"../../styles/sass/components/results/AnswerMistake.module.scss\";\n\ninterface AnswerMistakeProps {\n    kana: Kana;\n    times: number;\n}\n\nclass AnswerMistake extends Component<AnswerMistakeProps> {\n    render() {\n        const { kana, times } = this.props;\n\n        return (\n            <Container className={styles.wrapper}>\n                <Row className={styles.kanaWrapper}>\n                    <p className={styles.kana}>{kana.code}</p>\n                </Row>\n\n                <Row className={styles.infoWrapper}>\n                    <Col xs={6} className={styles.col}>\n                        <span className={styles.timesWrong}>x{times}</span>\n                    </Col>\n                    <Col xs={6} className={styles.col}>\n                        <span className={styles.romanji}>{kana.romanji[0]}</span>\n                    </Col>\n                </Row>\n\n            </Container>\n        );\n    }\n}\n\nexport default AnswerMistake;","import { Component } from \"react\";\nimport { Accordion, Button, Card, Container } from \"react-bootstrap\";\nimport { Kana } from \"../../types/Kana\";\nimport AnswerMistake from \"./AnswerMistake\";\nimport styles from \"../../styles/sass/components/results/Feedback.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface FeedbackProps {\n    kana: Kana[];\n}\n\nclass Feedback extends Component<FeedbackProps> {\n    render() {\n        return (\n            <Container>\n                <Accordion className={styles.accordion}>\n                    <Card className=\"bg-dark text-white\">\n                        <Card.Header>\n                            <Accordion.Toggle as={Button} eventKey=\"0\" variant=\"link\" className={styles.toggle}>\n                                View your mistakes{' '}\n                                <FontAwesomeIcon icon={faChevronDown} />\n                            </Accordion.Toggle>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body className={styles.wrapper}>\n                                {[...this.getMistakeCounts()]\n                                    .map(([kana, times]) => { return { kana: kana, times: times }})\n                                    .sort((a, b) => b.times - a.times)\n                                    .map(mistake => {\n                                        return(\n                                            <AnswerMistake\n                                                key={mistake.kana.code}\n                                                kana={mistake.kana}\n                                                times={mistake.times}\n                                            />\n                                        )\n                                    })\n                                }\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            </Container>\n        );\n    }\n\n    private getMistakeCounts = (): Map<Kana, number> => {\n        return this.props.kana.reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map<Kana, number>());\n    }\n}\n\nexport default Feedback;","import { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { FailureReason } from \"../../types/FailureReason\";\nimport GameResult from \"../../types/GameResult\";\nimport QuitButton from \"../ui/QuitButton\";\nimport Feedback from \"./Feedback\";\nimport styles from \"../../styles/sass/components/results/ResultScreen.module.scss\";\n\nexport interface ResultScreenProps {\n    onClose: () => void;\n    result: GameResult;\n}\n\nclass ResultScreen extends Component<ResultScreenProps> {\n    render() {\n        const { result } = this.props;\n\n        return (\n            <Container className={styles.wrapper}>\n                <Row>\n                    <Col>\n                        <QuitButton onClick={this.props.onClose} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <p className={styles.title}>{this.getTitle(result)}</p>\n                        <p className={styles.score}>{this.getKanaScore(result)}</p>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Feedback kana={result.wrongAnswers} />\n                </Row>\n            </Container>\n        );\n    }\n\n    private getKanaScore = (result: GameResult): string => {\n        const correct = result.correctAnswers.size;\n        const wrong = new Set(result.wrongAnswers).size\n        return \"You answered \" + correct + \"/\" + (correct + wrong) + \" correctly.\";\n    }\n\n    private getTitle = (result: GameResult): string => {\n        if (result.success) {\n            return \"Congratulations, you won!\";\n        }\n\n        let failureMessage = \"Oh no! \";\n        let reason: string;\n\n        switch (result.reason) {\n            case FailureReason.NO_LIVES_REMAINING: {\n                reason = \"You ran out of lives!\";\n                break;\n            }\n            case FailureReason.NO_TIME_REMAINING: {\n                reason = \"You ran out of time!\";\n                break;\n            }\n            default: {\n                reason = \"You lost.\";\n            }\n        }\n        return failureMessage + reason;\n    }\n}\n\nexport default ResultScreen;","import React, { Component } from 'react';\nimport { Spinner } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/layout/LoadingSpinner.module.scss\";\n\nclass LoadingSpinner extends Component<{ active: any }> {\n    render() {\n        const { active } = this.props;\n        if (active) {\n            return (\n                <div>\n                    <Spinner\n                        className={styles.spinner}\n                        animation=\"border\"\n                        role=\"status\"\n                        variant=\"danger\"\n                        title=\"Loading\"\n                    />\n                </div>\n            );\n        }\n        return null;\n    }\n}\n\nexport default LoadingSpinner","import KanaType from \"./KanaType\";\nimport {KanaColumn} from \"./KanaColumn\";\nimport Arrays from \"../utility/Arrays\";\n\nexport class Kana {\n    private readonly _code: string;\n    private readonly _romanji: string[];\n    private readonly _type: KanaType;\n    private readonly _column: KanaColumn;\n    private readonly _isDiacritical: boolean;\n\n    constructor(code: string, romanji: string[], type: KanaType, column: KanaColumn, isDiacritical: boolean) {\n        this._code = code;\n        this._romanji = romanji;\n        this._type = type;\n        this._column = column;\n        this._isDiacritical = isDiacritical;\n    }\n\n    public isDiagraph(): boolean {\n        return this._code.length === 2;\n    }\n\n    public getFullRomanjiString(): string {\n        if (this.romanji.length === 1) {\n            return this.romanji[0];\n        } else {\n            return this.romanji[0] + \" (\" + this.romanji[1] + \")\";\n        }\n    }\n\n    get code(): string {\n        return this._code;\n    }\n\n    get romanji(): string[] {\n        return this._romanji;\n    }\n\n    get type(): KanaType {\n        return this._type;\n    }\n\n    get column(): KanaColumn {\n        return this._column;\n    }\n\n    get isDiacritical(): boolean {\n        return this._isDiacritical;\n    }\n\n    public equals(other: any): boolean {\n        if (!other) return false;\n        if (!(other instanceof Kana)) return false;\n        if (!Arrays.areEqual(this.romanji, other.romanji)) return false;\n        if (other.type !== this.type) return false;\n        if (other.column !== this.column) return false;\n        if (other.isDiacritical !== this.isDiacritical) return false;\n        return other.code === this.code;\n    }\n}","import { KanaColumn } from \"../types/KanaColumn\";\nimport { KanaData } from \"./DataTypes\";\n\nfunction hiragana(): KanaData[] {\n    return [\n        //Vowels (Big)\n        {\n            name: \"あ\",\n            code: \"\\u3042\",\n            romanji: [\"a\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"い\",\n            code: \"\\u3044\",\n            romanji: [\"i\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"う\",\n            code: \"\\u3046\",\n            romanji: [\"u\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"え\",\n            code: \"\\u3048\",\n            romanji: [\"e\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"お\",\n            code: \"\\u304A\",\n            romanji: [\"o\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n\n        //K Column (Big)\n        {\n            name: \"か\",\n            code: \"\\u304B\",\n            romanji: [\"ka\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"き\",\n            code: \"\\u304D\",\n            romanji: [\"ki\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"く\",\n            code: \"\\u304F\",\n            romanji: [\"ku\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"け\",\n            code: \"\\u3051\",\n            romanji: [\"ke\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"こ\",\n            code: \"\\u3053\",\n            romanji: [\"ko\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacriticals (Dakuten)\n        {\n            name: \"が\",\n            code: \"\\u304C\",\n            romanji: [\"ga\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ぎ\",\n            code: \"\\u304E\",\n            romanji: [\"gi\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ぐ\",\n            code: \"\\u3050\",\n            romanji: [\"gu\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"げ\",\n            code: \"\\u3052\",\n            romanji: [\"ge\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ご\",\n            code: \"\\u3054\",\n            romanji: [\"go\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n\n        //K Diagraphs\n        {\n            name: \"きゃ\",\n            code: \"\\u304D\\u3083\",\n            romanji: [\"kya\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"きゅ\",\n            code: \"\\u304D\\u3085\",\n            romanji: [\"kyu\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"きょ\",\n            code: \"\\u304D\\u3087\",\n            romanji: [\"kyo\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacritical Diagraphs\n        {\n            name: \"ぎゃ\",\n            code: \"\\u304E\\u3083\",\n            romanji: [\"gya\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"ぎゅ\",\n            code: \"\\u304E\\u3085\",\n            romanji: [\"gyu\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"ぎょ\",\n            code: \"\\u304E\\u3087\",\n            romanji: [\"gyo\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //S Column (Big)\n        {\n            name: \"さ\",\n            code: \"\\u3055\",\n            romanji: [\"sa\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"し\",\n            code: \"\\u3057\",\n            romanji: [\"shi\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"す\",\n            code: \"\\u3059\",\n            romanji: [\"su\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"せ\",\n            code: \"\\u305B\",\n            romanji: [\"se\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"そ\",\n            code: \"\\u305D\",\n            romanji: [\"so\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacriticals (Dakuten)\n        {\n            name: \"ざ\",\n            code: \"\\u3056\",\n            romanji: [\"za\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"じ\",\n            code: \"\\u3058\",\n            romanji: [\"zi\", \"ji\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ず\",\n            code: \"\\u305A\",\n            romanji: [\"zu\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ぜ\",\n            code: \"\\u305C\",\n            romanji: [\"ze\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ぞ\",\n            code: \"\\u305E\",\n            romanji: [\"zo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //S Diagraphs\n        {\n            name: \"しゃ\",\n            code: \"\\u3057\\u3083\",\n            romanji: [\"sha\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"しゅ\",\n            code: \"\\u3057\\u3085\",\n            romanji: [\"shu\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"しょ\",\n            code: \"\\u3057\\u3087\",\n            romanji: [\"sho\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacritical Diagraphs\n        {\n            name: \"じゃ\",\n            code: \"\\u3058\\u3083\",\n            romanji: [\"zya\", \"ja\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"じゅ\",\n            code: \"\\u3058\\u3085\",\n            romanji: [\"zyu\", \"ju\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"じょ\",\n            code: \"\\u3058\\u3087\",\n            romanji: [\"zyo\", \"jo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //T Column (Big)\n        {\n            name: \"た\",\n            code: \"\\u305F\",\n            romanji: [\"ta\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ち\",\n            code: \"\\u3061\",\n            romanji: [\"ti\", \"chi\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"つ\",\n            code: \"\\u3064\",\n            romanji: [\"tsu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"て\",\n            code: \"\\u3066\",\n            romanji: [\"te\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"と\",\n            code: \"\\u3068\",\n            romanji: [\"to\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacriticals (Dakuten)\n        {\n            name: \"だ\",\n            code: \"\\u3060\",\n            romanji: [\"da\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ぢ\",\n            code: \"\\u3062\",\n            romanji: [\"di\", \"ji\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"づ\",\n            code: \"\\u3065\",\n            romanji: [\"du\", \"zu\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"で\",\n            code: \"\\u3067\",\n            romanji: [\"de\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ど\",\n            code: \"\\u3069\",\n            romanji: [\"do\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //T Diagraphs\n        {\n            name: \"ちゃ\",\n            code: \"\\u3061\\u3083\",\n            romanji: [\"cha\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ちゅ\",\n            code: \"\\u3061\\u3085\",\n            romanji: [\"chu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ちょ\",\n            code: \"\\u3061\\u3087\",\n            romanji: [\"cho\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacritical Diagraphs\n        {\n            name: \"ぢゃ\",\n            code: \"\\u3062\\u3083\",\n            romanji: [\"dya\", \"ja\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ぢゅ\",\n            code: \"\\u3062\\u3085\",\n            romanji: [\"dyu\", \"ju\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ぢょ\",\n            code: \"\\u3062\\u3087\",\n            romanji: [\"dyo\", \"jo\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //N Column (Big)\n        {\n            name: \"な\",\n            code: \"\\u306A\",\n            romanji: [\"na\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"に\",\n            code: \"\\u306B\",\n            romanji: [\"ni\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ぬ\",\n            code: \"\\u306C\",\n            romanji: [\"nu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ね\",\n            code: \"\\u306D\",\n            romanji: [\"ne\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"の\",\n            code: \"\\u306E\",\n            romanji: [\"no\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n        //N Diagraphs\n        {\n            name: \"にゃ\",\n            code: \"\\u306B\\u3083\",\n            romanji: [\"nya\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"にゅ\",\n            code: \"\\u306B\\u3085\",\n            romanji: [\"nyu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"にょ\",\n            code: \"\\u306B\\u3087\",\n            romanji: [\"nyo\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n\n        //H Column (Big)\n        {\n            name: \"は\",\n            code: \"\\u306F\",\n            romanji: [\"ha\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ひ\",\n            code: \"\\u3072\",\n            romanji: [\"hi\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ふ\",\n            code: \"\\u3075\",\n            romanji: [\"hu\", \"fu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"へ\",\n            code: \"\\u3078\",\n            romanji: [\"he\", \"e\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ほ\",\n            code: \"\\u307B\",\n            romanji: [\"ho\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacriticals (Dakuten)\n        {\n            name: \"ば\",\n            code: \"\\u3070\",\n            romanji: [\"ba\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"び\",\n            code: \"\\u3073\",\n            romanji: [\"bi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぶ\",\n            code: \"\\u3076\",\n            romanji: [\"bu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"べ\",\n            code: \"\\u3079\",\n            romanji: [\"be\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぼ\",\n            code: \"\\u307C\",\n            romanji: [\"bo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacriticals (Handakuten)\n        {\n            name: \"ぱ\",\n            code: \"\\u3071\",\n            romanji: [\"pa\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぴ\",\n            code: \"\\u3074\",\n            romanji: [\"pi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぷ\",\n            code: \"\\u3077\",\n            romanji: [\"pu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぺ\",\n            code: \"\\u307A\",\n            romanji: [\"pe\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぽ\",\n            code: \"\\u307D\",\n            romanji: [\"po\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diagraphs\n        {\n            name: \"ひゃ\",\n            code: \"\\u3072\\u3083\",\n            romanji: [\"hya\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ひゅ\",\n            code: \"\\u3072\\u3085\",\n            romanji: [\"hyu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ひょ\",\n            code: \"\\u3072\\u3087\",\n            romanji: [\"hyo\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacritical Diagraphs (Dakuten)\n        {\n            name: \"びゃ\",\n            code: \"\\u3073\\u3083\",\n            romanji: [\"bya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"びゅ\",\n            code: \"\\u3073\\u3085\",\n            romanji: [\"byu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"びょ\",\n            code: \"\\u3073\\u3087\",\n            romanji: [\"byo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacritical Diagraphs (Handakuten)\n        {\n            name: \"ぴゃ\",\n            code: \"\\u3074\\u3083\",\n            romanji: [\"pya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぴゅ\",\n            code: \"\\u3074\\u3085\",\n            romanji: [\"pyu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぴょ\",\n            code: \"\\u3074\\u3087\",\n            romanji: [\"pyo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //M Column (Big)\n        {\n            name: \"ま\",\n            code: \"\\u307E\",\n            romanji: [\"ma\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"み\",\n            code: \"\\u307F\",\n            romanji: [\"mi\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"む\",\n            code: \"\\u3080\",\n            romanji: [\"mu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"め\",\n            code: \"\\u3081\",\n            romanji: [\"me\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"も\",\n            code: \"\\u3082\",\n            romanji: [\"mo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //M Diagraphs\n        {\n            name: \"みゃ\",\n            code: \"\\u307F\\u3083\",\n            romanji: [\"mya\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"みゅ\",\n            code: \"\\u307F\\u3085\",\n            romanji: [\"myu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"みょ\",\n            code: \"\\u307F\\u3087\",\n            romanji: [\"myo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //Y Column (Big)\n        {\n            name: \"や\",\n            code: \"\\u3084\",\n            romanji: [\"ya\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"ゆ\",\n            code: \"\\u3086\",\n            romanji: [\"yu\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"よ\",\n            code: \"\\u3088\",\n            romanji: [\"yo\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n\n        //R Column (Big)\n        {\n            name: \"ら\",\n            code: \"\\u3089\",\n            romanji: [\"ra\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"り\",\n            code: \"\\u308A\",\n            romanji: [\"ri\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"る\",\n            code: \"\\u308B\",\n            romanji: [\"ru\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"れ\",\n            code: \"\\u308C\",\n            romanji: [\"re\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"ろ\",\n            code: \"\\u308D\",\n            romanji: [\"ro\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //R Diagraphs\n        {\n            name: \"りゃ\",\n            code: \"\\u308A\\u3083\",\n            romanji: [\"rya\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"りゅ\",\n            code: \"\\u308A\\u3085\",\n            romanji: [\"ryu\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"りょ\",\n            code: \"\\u308A\\u3087\",\n            romanji: [\"ryo\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //W Column (Big)\n        {\n            name: \"わ\",\n            code: \"\\u308F\",\n            romanji: [\"wa\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n        {\n            name: \"を\",\n            code: \"\\u3092\",\n            romanji: [\"wo\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n\n        //N\n        {\n            name: \"ん\",\n            code: \"\\u3093\",\n            romanji: [\"n\"],\n            column: KanaColumn.OTHER,\n            diacritical: false\n        }\n    ];\n}\n\nexport default hiragana;","import {KanaColumn} from \"../types/KanaColumn\";\nimport { KanaData } from \"./DataTypes\";\n\nfunction katakana(): KanaData[] {\n    return [\n        //Vowels (Big)\n        {\n            name: \"ア\",\n            code: \"\\u30A2\",\n            romanji: [\"a\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"イ\",\n            code: \"\\u30A4\",\n            romanji: [\"i\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"ウ\",\n            code: \"\\u30A6\",\n            romanji: [\"u\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"エ\",\n            code: \"\\u30A8\",\n            romanji: [\"e\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"オ\",\n            code: \"\\u30AA\",\n            romanji: [\"o\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n\n        //K Column (Big)\n        {\n            name: \"カ\",\n            code: \"\\u30AB\",\n            romanji: [\"ka\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"キ\",\n            code: \"\\u30AD\",\n            romanji: [\"ki\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"ク\",\n            code: \"\\u30AF\",\n            romanji: [\"ku\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"ケ\",\n            code: \"\\u30B1\",\n            romanji: [\"ke\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"コ\",\n            code: \"\\u30B3\",\n            romanji: [\"ko\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacriticals (Dakuten)\n        {\n            name: \"ガ\",\n            code: \"\\u30AC\",\n            romanji: [\"ga\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ギ\",\n            code: \"\\u30AE\",\n            romanji: [\"gi\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"グ\",\n            code: \"\\u30B0\",\n            romanji: [\"gu\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ゲ\",\n            code: \"\\u30B2\",\n            romanji: [\"ge\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ゴ\",\n            code: \"\\u30B4\",\n            romanji: [\"go\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n\n        //K Diagraphs\n        {\n            name: \"キャ\",\n            code: \"\\u30AD\\u30E3\",\n            romanji: [\"kya\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"キュ\",\n            code: \"\\u30AD\\u30E5\",\n            romanji: [\"kyu\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"キョ\",\n            code: \"\\u30AD\\u30E7\",\n            romanji: [\"kyo\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacritical Diagraphs\n        {\n            name: \"ギャ\",\n            code: \"\\u30AE\\u30E3\",\n            romanji: [\"gya\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ギュ\",\n            code: \"\\u30AE\\u30E5\",\n            romanji: [\"gyu\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ギョ\",\n            code: \"\\u30AE\\u30E7\",\n            romanji: [\"gyo\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n\n        //S Column (Big)\n        {\n            name: \"サ\",\n            code: \"\\u30B5\",\n            romanji: [\"sa\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"シ\",\n            code: \"\\u30B7\",\n            romanji: [\"shi\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"ス\",\n            code: \"\\u30B9\",\n            romanji: [\"su\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"セ\",\n            code: \"\\u30BB\",\n            romanji: [\"se\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"ソ\",\n            code: \"\\u30BD\",\n            romanji: [\"so\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacriticals (Dakuten)\n        {\n            name: \"ザ\",\n            code: \"\\u30B6\",\n            romanji: [\"za\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"シ\",\n            code: \"\\u30B8\",\n            romanji: [\"zi\" ,\"ji\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ズ\",\n            code: \"\\u30BA\",\n            romanji: [\"zu\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ゼ\",\n            code: \"\\u30BC\",\n            romanji: [\"ze\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ゾ\",\n            code: \"\\u30BE\",\n            romanji: [\"zo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //S Diagraphs\n\n        {\n            name: \"シャ\",\n            code: \"\\u30B7\\u30E3\",\n            romanji: [\"sha\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"シュ\",\n            code: \"\\u30B7\\u30E5\",\n            romanji: [\"shu\"],\n            column: KanaColumn.S,\n            diacritical: false\n\n        },\n        {\n            name: \"ショ\",\n            code: \"\\u30B7\\u30E7\",\n            romanji: [\"sho\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacritical Diagraphs\n        {\n            name: \"ジャ\",\n            code: \"\\u30B8\\u30E3\",\n            romanji: [\"zya\", \"ja\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ジュ\",\n            code: \"\\u30B8\\u30E5\",\n            romanji: [\"zyu\", \"ju\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ジョ\",\n            code: \"\\u30B8\\u30E7\",\n            romanji: [\"zyo\", \"jo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //T Column (Big)\n        {\n            name: \"タ\",\n            code: \"\\u30BF\",\n            romanji: [\"ta\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"チ\",\n            code: \"\\u30C1\",\n            romanji: [\"ti\", \"chi\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ツ\",\n            code: \"\\u30C4\",\n            romanji: [\"tsu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"テ\",\n            code: \"\\u30C6\",\n            romanji: [\"te\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ト\",\n            code: \"\\u30C8\",\n            romanji: [\"to\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacriticals (Dakuten)\n        {\n            name: \"ダ\",\n            code: \"\\u30C0\",\n            romanji: [\"da\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヂ\",\n            code: \"\\u30C2\",\n            romanji: [\"di\", \"ji\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヅ\",\n            code: \"\\u30C5\",\n            romanji: [\"du\", \"zu\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"デ\",\n            code: \"\\u30C7\",\n            romanji: [\"de\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ド\",\n            code: \"\\u30C9\",\n            romanji: [\"do\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //T Diagraphs\n        {\n            name: \"チャ\",\n            code: \"\\u30C1\\u30E3\",\n            romanji: [\"cha\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"チュ\",\n            code: \"\\u30C1\\u30E5\",\n            romanji: [\"chu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"チョ\",\n            code: \"\\u30C1\\u30E7\",\n            romanji: [\"cho\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacritical Diagraphs\n        {\n            name: \"ヂャ\",\n            code: \"\\u30C2\\u30E3\",\n            romanji: [\"dya\", \"ja\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヂュ\",\n            code: \"\\u30C2\\u30E5\",\n            romanji: [\"dyu\", \"ju\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヂョ\",\n            code: \"\\u30C2\\u30E7\",\n            romanji: [\"dyo\", \"jo\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //N Column (Big)\n        {\n            name: \"ナ\",\n            code: \"\\u30CA\",\n            romanji: [\"na\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ニ\",\n            code: \"\\u30CB\",\n            romanji: [\"ni\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ヌ\",\n            code: \"\\u30CC\",\n            romanji: [\"nu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ネ\",\n            code: \"\\u30CD\",\n            romanji: [\"ne\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ノ\",\n            code: \"\\u30CE\",\n            romanji: [\"no\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n        //N Diagraphs\n        {\n            name: \"ニャ\",\n            code: \"\\u30CB\\u30E3\",\n            romanji: [\"nya\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ニュ\",\n            code: \"\\u30CB\\u30E5\",\n            romanji: [\"nyu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ニョ\",\n            code: \"\\u30CB\\u30E7\",\n            romanji: [\"nyo\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n        //H Column (Big)\n        {\n            name: \"ハ\",\n            code: \"\\u30CF\",\n            romanji: [\"ha\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヒ\",\n            code: \"\\u30D2\",\n            romanji: [\"hi\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"フ\",\n            code: \"\\u30D5\",\n            romanji: [\"hu\", \"fu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヘ\",\n            code: \"\\u30D8\",\n            romanji: [\"he\", \"e\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ホ\",\n            code: \"\\u30DB\",\n            romanji: [\"ho\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacriticals (Dakuten)\n        {\n            name: \"バ\",\n            code: \"\\u30D0\",\n            romanji: [\"ba\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ビ\",\n            code: \"\\u30D3\",\n            romanji: [\"bi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ブ\",\n            code: \"\\u30D6\",\n            romanji: [\"bu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ベ\",\n            code: \"\\u30D9\",\n            romanji: [\"be\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ボ\",\n            code: \"\\u30DC\",\n            romanji: [\"bo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacriticals (Handakuten)\n        {\n            name: \"パ\",\n            code: \"\\u30D1\",\n            romanji: [\"pa\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ピ\",\n            code: \"\\u30D4\",\n            romanji: [\"pi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"プ\",\n            code: \"\\u30D7\",\n            romanji: [\"pu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ペ\",\n            code: \"\\u30DA\",\n            romanji: [\"pe\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ポ\",\n            code: \"\\u30DD\",\n            romanji: [\"po\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diagraphs\n        {\n            name: \"ヒャ\",\n            code: \"\\u30D2\\u30E3\",\n            romanji: [\"hya\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヒュ\",\n            code: \"\\u30D2\\u30E5\",\n            romanji: [\"hyu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヒョ\",\n            code: \"\\u30D2\\u30E7\",\n            romanji: [\"hyo\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacritical Diagraphs (Dakuten)\n        {\n            name: \"ビャ\",\n            code: \"\\u30D3\\u30E3\",\n            romanji: [\"bya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ビュ\",\n            code: \"\\u30D3\\u30E5\",\n            romanji: [\"byu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ビョ\",\n            code: \"\\u30D3\\u30E7\",\n            romanji: [\"byo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacritical Diagraphs (Handakuten)\n        {\n            name: \"ピャ\",\n            code: \"\\u30D4\\u30E3\",\n            romanji: [\"pya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ピュ\",\n            code: \"\\u30D4\\u30E5\",\n            romanji: [\"pyu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ピョ\",\n            code: \"\\u30D4\\u30E7\",\n            romanji: [\"pyo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //M Column (Big)\n        {\n            name: \"マ\",\n            code: \"\\u30DE\",\n            romanji: [\"ma\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ミ\",\n            code: \"\\u30DF\",\n            romanji: [\"mi\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ム\",\n            code: \"\\u30E0\",\n            romanji: [\"mu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"メ\",\n            code: \"\\u30E1\",\n            romanji: [\"me\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"モ\",\n            code: \"\\u30E2\",\n            romanji: [\"mo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //M Diagraphs\n        {\n            name: \"ミャ\",\n            code: \"\\u30DF\\u30E3\",\n            romanji: [\"mya\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ミュ\",\n            code: \"\\u30DF\\u30E5\",\n            romanji: [\"myu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ミョ\",\n            code: \"\\u30DF\\u30E7\",\n            romanji: [\"myo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //Y Column (Big)\n        {\n            name: \"ヤ\",\n            code: \"\\u30E4\",\n            romanji: [\"ya\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"ユ\",\n            code: \"\\u30E6\",\n            romanji: [\"yu\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"ヨ\",\n            code: \"\\u30E8\",\n            romanji: [\"yo\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n\n        //R Column (Big)\n        {\n            name: \"ラ\",\n            code: \"\\u30E9\",\n            romanji: [\"ra\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"リ\",\n            code: \"\\u30EA\",\n            romanji: [\"ri\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"ル\",\n            code: \"\\u30EB\",\n            romanji: [\"ru\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"レ\",\n            code: \"\\u30EC\",\n            romanji: [\"re\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"ロ\",\n            code: \"\\u30ED\",\n            romanji: [\"ro\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //R Diagraphs\n        {\n            name: \"リャ\",\n            code: \"\\u30EA\\u30E3\",\n            romanji: [\"rya\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"リュ\",\n            code: \"\\u30EA\\u30E5\",\n            romanji: [\"ryu\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"リョ\",\n            code: \"\\u30EA\\u30E7\",\n            romanji: [\"ryo\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //W Column (Big)\n        {\n            name: \"ワ\",\n            code: \"\\u30EF\",\n            romanji: [\"wa\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n        {\n            name: \"ヲ\",\n            code: \"\\u30F2\",\n            romanji: [\"wo\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n\n        //N\n        {\n            name: \"ン\",\n            code: \"\\u30F3\",\n            romanji: [\"n\"],\n            column: KanaColumn.OTHER,\n            diacritical: false\n        }\n    ];\n}\n\nexport default katakana;","enum KanaType {\n    HIRAGANA = \"Hiragana\", KATAKANA = \"Katakana\"\n}\n\nexport default KanaType;","import { Kana } from \"../../types/Kana\";\nimport { Filter } from \"../Filter\";\n\nexport default class QuantityFilter implements Filter<Kana> {\n\n    private readonly quantity: number;\n\n    constructor(quantity: number) {\n        this.quantity = quantity;\n    }\n\n    apply(kana: Kana[]): Kana[] {\n        return kana.splice(0, this.quantity);\n    }\n}","import { Kana } from \"../types/Kana\";\nimport hiragana from \"../data/Hiragana\";\nimport katakana from \"../data/Katakana\";\nimport KanaType from \"../types/KanaType\";\nimport { KanaData } from \"../data/DataTypes\";\nimport { KanaSettings } from \"../types/GameSettings\";\nimport DiagraphFilter from \"../filters/kana/DiagraphFilter\";\nimport FilterChain from \"../filters/FilterChain\";\nimport QuantityFilter from \"../filters/kana/QuantityFilter\";\nimport KanaTypeFilter from \"../filters/kana/KanaTypeFilter\";\n\nexport class KanaRepository {\n\n    public read(config?: KanaSettings): Kana[] {\n        const chain = new FilterChain<Kana>();\n\n        if (!config?.hiragana) chain.addFilter(new KanaTypeFilter(KanaType.HIRAGANA));\n        if (!config?.katakana) chain.addFilter(new KanaTypeFilter(KanaType.KATAKANA));\n        if (!config?.diagraphs) chain.addFilter(new DiagraphFilter());\n        if (config?.quantity) chain.addFilter(new QuantityFilter(config.quantity));\n\n        return chain.execute(this.readAllKana());\n    }\n\n    private readAllKana(): Kana[] {\n        const hiragana = this.readHiragana();\n        const katakana = this.readKatakana();\n        return hiragana.concat(katakana);\n    }\n\n    private readHiragana(): Kana[] {\n        return this.convert(hiragana(), KanaType.HIRAGANA);\n    }\n\n    private readKatakana(): Kana[] {\n        return this.convert(katakana(), KanaType.KATAKANA);\n    }\n\n    private convert(data: KanaData[], type: KanaType): Kana[] {\n        return data.map(data => new Kana(data.code, data.romanji, type, data.column, data.diacritical));\n    }\n}","import { Component } from \"react\";\nimport GameModeMenu from \"../layout/GameModeMenu\";\nimport KanaMemoryTest from \"../game/KanaMemoryTest\";\nimport { GameMode } from \"../../types/GameMode\";\nimport { GameSettings } from \"../../types/GameSettings\";\nimport GameResult from \"../../types/GameResult\";\nimport ResultScreen from \"../results/ResultScreen\";\nimport { Kana } from \"../../types/Kana\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport { KanaRepository } from \"../../repository/KanaRepository\";\n\ninterface GamePageState {\n    loading: boolean;\n    kana?: Kana[];\n    gameSettings?: GameSettings;\n    inResultsScreen: boolean;\n    result?: GameResult;\n    gameIdentifier: string;\n}\n\nclass GamePage extends Component<{ }, GamePageState> {\n\n    constructor(props: {} | Readonly<{}>) {\n        super(props);\n        this.state = {\n            loading: false,\n            kana: undefined,\n            gameSettings: undefined,\n            inResultsScreen: false,\n            result: undefined,\n            gameIdentifier: Math.random().toString()\n        }\n    }\n\n    render() {\n        const { loading, gameSettings, kana, inResultsScreen, result } = this.state;\n        return (\n            <>\n                <LoadingSpinner active={loading}/>\n\n                {!gameSettings && !inResultsScreen &&\n                    <GameModeMenu onSelectedMode={this.startGame}/>\n                }\n\n                {gameSettings && kana && !inResultsScreen &&\n                    <KanaMemoryTest\n                        kana={kana}\n                        settings={gameSettings}\n                        onClose={this.onGameClose}\n                        onFinish={this.onGameFinish}\n                    />\n                }\n\n                {inResultsScreen && result &&\n                    <ResultScreen result={result} onClose={this.onResultMenuClose}/>\n                }\n            </>\n        );\n    }\n\n    private startGame = (mode: GameMode, settings: GameSettings) => {\n        this.setState({ gameSettings: settings }, this.loadKana);\n    }\n\n    private onGameClose = () => {\n        this.setState({ gameSettings: undefined });\n    }\n\n    private onResultMenuClose = () => this.setState({ inResultsScreen: false, result: undefined });\n\n    private onGameFinish = (result: GameResult) => this.setState({\n        inResultsScreen: true,\n        result,\n        gameSettings: undefined,\n        gameIdentifier: Math.random().toString()\n    });\n\n    private loadKana() {\n        this.setState({ loading: true });\n        const kana = new KanaRepository().read(this.state.gameSettings?.kana);\n        this.setState({ loading: false, kana });\n    }\n}\n\nexport default GamePage;","import { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../styles/sass/components/layout/KanaTypeIndicator.module.scss\";\n\nexport interface KanaTypeIndicatorProps {\n    title: string;\n    className?: string;\n}\n\nconst KanaTypeIndicator = (props: KanaTypeIndicatorProps) => {\n    return (\n        <FontAwesomeIcon\n            icon={faCircle}\n            size=\"xs\"\n            className={props.className + \" \" + styles.icon}\n            title={props.title}\n        />\n    );\n}\n\nexport default KanaTypeIndicator;","import { Component } from \"react\";\nimport { Kana } from \"../../types/Kana\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/layout/KanaTile.module.scss\";\nimport KanaType from \"../../types/KanaType\";\nimport KanaTypeIndicator from \"./KanaTypeIndicator\";\nimport KanaDisplay from \"../game/KanaDisplay\";\n\nexport interface KanaTileProps {\n    kana: Kana;\n}\n\nclass KanaTile extends Component<KanaTileProps> {\n    render() {\n        const { kana } = this.props;\n\n        return (\n            <Container className={styles.wrapper}>\n                <Row className={styles.typeWrapper}>\n                    <Col xs={12}>\n                        <KanaTypeIndicator\n                            className={kana.type === KanaType.HIRAGANA ? styles.hiragana : styles.katakana}\n                            title={kana.type}\n                        />\n                        {kana.isDiagraph() && <KanaTypeIndicator className={styles.diagraph} title=\"Diagraph\" />}\n                        {kana.isDiacritical && <KanaTypeIndicator className={styles.diacritical} title=\"Diacritical\" />}\n                    </Col>\n                </Row>\n\n                <KanaDisplay kana={kana} style={{ character: { color: \"#000\", size: \"xs\" }, container: styles.kanaWrapper  }} />\n\n                <Row>\n                    <Col>\n                        <p className={styles.romanji}>{kana.getFullRomanjiString()}</p>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default KanaTile;","import React, { Component } from \"react\";\nimport { Kana } from \"../../types/Kana\";\nimport { CSSGrid, easings, layout, makeResponsive } from \"react-stonecutter\";\nimport styles from \"../../styles/sass/components/layout/KanaGrid.module.scss\";\nimport KanaTile from \"./KanaTile\";\n\nexport interface KanaGridProps {\n    kana: Kana[];\n}\n\nclass KanaGrid extends Component<KanaGridProps> {\n    render() {\n        const { kana } = this.props;\n        const Grid = makeResponsive(CSSGrid, { maxWidth: 1920, defaultColumns: 4});\n        return (\n            <div className={styles.grid}>\n                {kana.length > 0 ? <Grid\n                    gutterWidth={10}\n                    gutterHeight={0}\n                    layout={layout.simple}\n                    columnWidth={90}\n                    easing={easings.cubicOut}\n                    duration={100}\n                    columns={4}\n                >\n                    {kana.map(k => (\n                        <div key={k.code}>\n                            <KanaTile kana={k}/>\n                        </div>\n                    ))}\n                </Grid> : <p>No results.</p>}\n            </div>\n        );\n    }\n}\n\nexport default KanaGrid;","import { Form, InputGroup } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/SearchField.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { Component } from \"react\";\n\ninterface SearchFieldProps {\n    value?: string;\n    append?: string;\n    onChange: (value: string) => void;\n}\n\nclass SearchField extends Component<SearchFieldProps> {\n    render() {\n        const { value, append } = this.props;\n        return (\n            <InputGroup className={styles.inputGroup}>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FontAwesomeIcon icon={faSearch}/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                    type=\"text\"\n                    value={value}\n                    className={styles.input}\n                    onChange={(e) => this.props.onChange(e.target.value)}\n                    placeholder=\"Enter the romaji\"\n                />\n                <InputGroup.Append>\n                    <InputGroup.Text>{append}</InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n        );\n    }\n}\n\nexport default SearchField;","import { Filter } from \"../Filter\";\nimport { Kana } from \"../../types/Kana\";\n\nexport default class DiacriticalFilter implements Filter<Kana> {\n\n    private readonly include: boolean;\n\n    constructor(include: boolean = false) {\n        this.include = include;\n    }\n\n    apply(values: Kana[]): Kana[] {\n        return values.filter(kana => this.include ? kana.isDiacritical : !kana.isDiacritical);\n    }\n}","import { Filter } from \"../Filter\";\nimport { Kana } from \"../../types/Kana\";\n\nexport default class RomajiFilter implements Filter<Kana> {\n\n    private readonly search: string;\n\n    constructor(search: string) {\n        this.search = search;\n    }\n\n    apply(values: Kana[]): Kana[] {\n        if (this.search) {\n            return values.filter(kana => kana.romanji.some(romaji => romaji.includes(this.search)));\n        }\n        return values;\n    }\n}","import React, { Component } from \"react\";\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\nimport { KanaRepository } from \"../../repository/KanaRepository\";\nimport { Kana } from \"../../types/Kana\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport styles from \"../../styles/sass/components/pages/SearchPage.module.scss\";\nimport KanaType from \"../../types/KanaType\";\nimport KanaGrid from \"../layout/KanaGrid\";\nimport SearchField from \"../ui/SearchField\";\nimport FilterChain from \"../../filters/FilterChain\";\nimport KanaTypeFilter from \"../../filters/kana/KanaTypeFilter\";\nimport DiagraphFilter from \"../../filters/kana/DiagraphFilter\";\nimport DiacriticalFilter from \"../../filters/kana/DiacriticalFilter\";\nimport RomajiFilter from \"../../filters/kana/RomajiFilter\";\n\ninterface SearchPageState {\n    loading: boolean;\n    kana: Kana[];\n    search: string;\n    showHiragana: boolean;\n    showKatakana: boolean;\n    showDiagraphs: boolean;\n    showDiacriticals: boolean;\n}\n\nclass SearchPage extends Component<{ }, SearchPageState> {\n\n    private kana: Kana[] = [];\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            loading: false,\n            kana: [],\n            search: \"\",\n            showHiragana: true,\n            showKatakana: true,\n            showDiagraphs: true,\n            showDiacriticals: true\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true });\n        const kana = new KanaRepository().read({ hiragana: true, katakana: true, diagraphs: true });\n        this.kana = kana;\n        this.setState({ loading: false, kana });\n    }\n\n    componentDidUpdate(prevProps: Readonly<{}>, prevState: Readonly<SearchPageState>) {\n        const { search, kana } = this.state;\n        if (prevState.kana.length === kana.length) {\n            this.setState({ kana: this.filter(search) });\n        }\n    }\n\n    render() {\n        const { loading, search, kana, showHiragana, showKatakana, showDiagraphs, showDiacriticals } = this.state;\n\n        return (\n            <div className={styles.wrapper}>\n                <LoadingSpinner active={loading}/>\n                <Container className={styles.searchWrapper}>\n                    <SearchField onChange={this.onSearch} value={search} append={kana.length + \" Results\"} />\n                </Container>\n\n                <Container>\n                    <Row>\n                        <Col className={styles.switchWrapper} md={3} sm={4} xs={6}>\n                            <Form.Check\n                                type=\"switch\"\n                                id=\"hiragana\"\n                                className={styles.hiraganaSwitch}\n                                checked={showHiragana}\n                                onChange={() => this.setState({ showHiragana: !showHiragana })}\n                                data-testid=\"hiragana-switch\"\n                            />\n                            <Form.Label className={styles.label}>Hiragana</Form.Label>\n                        </Col>\n\n                        <Col className={styles.switchWrapper} md={3} sm={4} xs={6}>\n                            <Form.Check\n                                type=\"switch\"\n                                id=\"katakana\"\n                                className={styles.katakanaSwitch}\n                                checked={showKatakana}\n                                onChange={() => this.setState({ showKatakana: !showKatakana })}\n                                data-testid=\"katakana-switch\"\n                            />\n                            <Form.Label className={styles.label}>Katakana</Form.Label>\n                        </Col>\n\n                        <Col className={styles.switchWrapper} md={3} sm={4} xs={6}>\n                            <Form.Check\n                                type=\"switch\"\n                                id=\"diagraphs\"\n                                className={styles.diagraphSwitch}\n                                checked={showDiagraphs}\n                                onChange={() => this.setState({ showDiagraphs: !showDiagraphs })}\n                                data-testid=\"diagraphs-switch\"\n                            />\n                            <Form.Label className={styles.label}>Diagraphs</Form.Label>\n                        </Col>\n\n                        <Col className={styles.switchWrapper} md={3} sm={12} xs={6}>\n                            <Form.Check\n                                type=\"switch\"\n                                id=\"diacriticals\"\n                                className={styles.diacriticalSwitch}\n                                checked={showDiacriticals}\n                                onChange={() => this.setState({ showDiacriticals: !showDiacriticals })}\n                                data-testid=\"diacriticals-switch\"\n                            />\n                            <Form.Label className={styles.label}>Diacriticals</Form.Label>\n                        </Col>\n                    </Row>\n                </Container>\n\n                <KanaGrid kana={kana}/>\n            </div>\n        )\n    }\n\n    private onSearch = (newSearch: string) => {\n        this.setState({ search: newSearch.toLowerCase() });\n    }\n\n    private filter = (search: string): Kana[] => {\n        const chain = new FilterChain<Kana>();\n        const { showHiragana, showKatakana, showDiagraphs, showDiacriticals } = this.state;\n\n        chain.addFilter(new RomajiFilter(search))\n        if (!showHiragana) chain.addFilter(new KanaTypeFilter(KanaType.HIRAGANA));\n        if (!showKatakana) chain.addFilter(new KanaTypeFilter(KanaType.KATAKANA));\n        if (!showDiagraphs) chain.addFilter(new DiagraphFilter());\n        if (!showDiacriticals) chain.addFilter(new DiacriticalFilter());\n\n        return chain.execute(this.kana);\n    }\n}\n\nexport default SearchPage;","import React, { ReactElement } from \"react\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport PopOver from \"./PopOver\";\nimport styles from \"../../styles/sass/components/ui/Inspectable.module.scss\";\nimport { Placement } from \"react-bootstrap/Overlay\";\n\nexport type InspectableProps = {\n    title: string;\n    text: string;\n    placement?: Placement;\n    className?: string;\n    color?: 'white' | 'black';\n}\n\nconst Inspectable: React.FunctionComponent<InspectableProps> = ({ text, title, children, className, placement, color }) => {\n    return (\n        <OverlayTrigger\n            trigger={[\"hover\", \"focus\", \"click\"]}\n            rootClose={true}\n            placement={placement ?? \"left\"}\n            overlay={<PopOver text={text} title={title}/>}\n        >\n            {\n                React.cloneElement(children as ReactElement, {\n                    className: color === 'white' ? styles.white : styles.black + \" \" + className\n                })\n            }\n        </OverlayTrigger>\n    );\n}\n\n\nexport default Inspectable;","import { Component } from \"react\";\nimport { Kana } from \"../../types/Kana\";\nimport { Container } from \"react-bootstrap\";\nimport { RandomNumberGenerator } from \"../../utility/RandomNumberGenerator\";\nimport styles from \"../../styles/sass/components/ui/KanaCarousel.module.scss\";\n\nexport interface KanaCarouselProps {\n    kana: Kana[];\n}\n\ninterface KanaCarouselState {\n    remaining: Kana[];\n    shown: Kana[];\n    current: Kana;\n}\n\nclass KanaCarousel extends Component<KanaCarouselProps, KanaCarouselState> {\n\n    constructor(props: KanaCarouselProps | Readonly<KanaCarouselProps>) {\n        super(props);\n\n        const [next, remaining] = RandomNumberGenerator.getRandomObject(this.props.kana);\n\n        this.state = {\n            remaining: remaining,\n            shown: [next],\n            current: next,\n        }\n    }\n\n    //TODO: Replace with KanaDisplay. Expose animation class and add it to the DynamicCharacter arrays\n    render() {\n        const { current } = this.state;\n        return (\n            <Container className={styles.wrapper}>\n                <div data-testid=\"animation\" onAnimationIteration={this.handleAnimation} className={styles.animate}>\n                    <p className={styles.kana}>{current.code}</p>\n                    <p className={styles.romanji}>{current.getFullRomanjiString()}</p>\n                </div>\n            </Container>\n        );\n    }\n\n    private handleAnimation = () => {\n        const { current, remaining, shown } = this.state;\n        const { kana } = this.props;\n\n        const pool = remaining.length > 0 ? remaining : kana;\n        const [next, nextRemaining] = RandomNumberGenerator.getRandomObject(pool);\n        const shownPool = remaining.length > 0 ? shown.concat(current) : [next];\n        this.setState({ current: next, remaining: nextRemaining, shown: shownPool });\n    }\n}\n\nexport default KanaCarousel","import { Component } from \"react\";\nimport { Kana } from \"../../types/Kana\";\nimport styles from \"../../styles/sass/components/layout/ParallaxBackground.module.scss\";\nimport Arrays from \"../../utility/Arrays\";\n\ninterface ParallaxBackgroundProps {\n    kana: Kana[];\n}\n\ninterface ParallaxBackgroundState {\n    kana: Kana[];\n    height: number;\n    width: number;\n    xMouse: number;\n    yMouse: number;\n    position: [x: number, y: number, z: number];\n}\n\nclass ParallaxBackground extends Component<ParallaxBackgroundProps, ParallaxBackgroundState> {\n\n    constructor(props: ParallaxBackgroundProps | Readonly<ParallaxBackgroundProps>) {\n        super(props);\n\n        this.state = {\n            kana: [],\n            width: window.innerWidth,\n            height: window.innerHeight,\n            xMouse: window.innerWidth / 2,\n            yMouse: window.innerHeight / 2,\n            position: [0, 0, 0]\n        }\n    }\n\n    componentDidMount() {\n        this.getBackgroundKana();\n        window.addEventListener('resize', this.updateWindowDimensions);\n        //window.addEventListener('mousemove', this.updateMousePosition);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n        //window.removeEventListener('mousemove', this.updateMousePosition);\n    }\n\n    render() {\n        const { kana, position } = this.state;\n        return (\n            <ul className={styles.background}>\n                {kana.map(kana => {\n                    return (\n                        <li key={Math.random().toString()} data-testid=\"background-kana\">\n                            {kana.code}\n                        </li>\n                    )\n                })}\n            </ul>\n        );\n    }\n\n    private updateWindowDimensions = () => {\n        this.getBackgroundKana();\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    private updateMousePosition = (e: MouseEvent) => {\n        this.setState({ xMouse: e.pageX, yMouse: e.pageY }, this.calculateParallax);\n    }\n\n    private getBackgroundKana = () => {\n        let kana: Kana[] = [];\n\n        const html = document.querySelector('html');\n        const pool = [...this.props.kana];\n\n        if (pool.length > 0 && html) {\n            //Calculate the width & height of the viewport in em.\n            const fontSize = getComputedStyle(html).fontSize;\n            const width = window.innerWidth / parseFloat(fontSize);\n            const height = window.innerHeight / parseFloat(fontSize);\n\n            //Calculate how many kana fit on a single row, the number of rows and the total required.\n            const kanaPerRow = Math.ceil(width / 5);\n            const rows = Math.ceil(height / 5) + 1;\n            const totalKanaRequired = kanaPerRow * rows;\n\n            if (totalKanaRequired > pool.length) {\n                //There are 214 kana. If more is needed, find out how many more and push them.\n                const pools = Math.floor(totalKanaRequired / pool.length);\n                for (let i = 0; i < pools; i++) {\n                    kana.push(...pool);\n                }\n\n                //If the number of pools is fractional, push one more row in.\n                const remaining = totalKanaRequired % pool.length;\n                if (remaining !== 0) {\n                    kana.push(...pool.splice(0, kanaPerRow));\n                }\n            } else {\n                kana.push(...pool.splice(0, totalKanaRequired));\n            }\n        }\n\n        this.setState({ kana: Arrays.shuffle(kana) });\n    }\n\n    private calculateParallax() {\n        const { xMouse, yMouse, width, height } = this.state;\n        const halfWidth = width / 2;\n        const halfHeight = height / 2;\n        const xDepth = 0\n        const yDepth = 0\n        const zDepth = 0\n        this.setState({ position: [xDepth, yDepth, zDepth] });\n    }\n}\n\nexport default ParallaxBackground;","import { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/HelpButton.module.scss\";\n\ninterface HelpButtonProps {\n    className?: string;\n}\n\nclass HelpButton extends Component<HelpButtonProps> {\n    render() {\n        const { className } = this.props;\n        return (\n          <Button variant=\"outline-warning\" className={className + \" \" + styles.button} title=\"Help\" href=\"/help\">\n              ?\n          </Button>\n        );\n    }\n}\n\nexport default HelpButton;\n","import { Component } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/pages/LandingPage.module.scss\";\nimport Inspectable from \"../ui/Inspectable\";\nimport KanaCarousel from \"../ui/KanaCarousel\";\nimport { faPlay, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Kana } from \"../../types/Kana\";\nimport { KanaRepository } from \"../../repository/KanaRepository\";\nimport { Environment } from \"../../utility/Environment\";\nimport ParallaxBackground from \"../layout/ParallaxBackground\";\nimport HelpButton from \"../ui/HelpButton\";\nimport { Link } from \"react-router-dom\"\n\nclass LandingPage extends Component {\n\n    private readonly kana: Kana[];\n\n    constructor(props: {} | Readonly<{}>) {\n        super(props);\n\n        this.kana = new KanaRepository().read({ hiragana: true, katakana: true });\n    }\n\n    render() {\n        return (\n            <Container fluid className={styles.wrapper} data-testid=\"landing-page\">\n                <ParallaxBackground kana={this.kana} />\n\n                <div className={styles.content}>\n                    <div className={styles.header}>\n                        <Link to=\"/help\">\n                            <HelpButton className={styles.help} />\n                        </Link>\n                    </div>\n\n                    <h1 className={styles.heading}>\n                        {'Learn '}\n                        <Inspectable\n                            title=\"Nihongo (日本語)\"\n                            text={Environment.variable(\"JAPANESE_KANJI_DESC\")}\n                            className={styles.japanese}\n                            placement=\"top\"\n                        >\n                            <span data-testid=\"japanese-inspectable\">Japanese</span>\n                        </Inspectable>\n                        {' Kana'}\n                    </h1>\n\n                    <div className={styles.descriptionWrapper}>\n                        <h4 className={styles.description}>\n                            {'A simple memory training app for learning the Japanese '}\n                            <Inspectable\n                                title={\"Hiragana (ひらがな)\"}\n                                text={Environment.variable(\"HIRAGANA_DESC\")}\n                                placement=\"bottom\" color=\"white\"\n                            >\n                                <span  data-testid=\"hiragana-inspectable\">Hiragana</span>\n                            </Inspectable>\n                            {' and '}\n                            <Inspectable\n                                title={\"Katakana (カタカナ)\"}\n                                text={Environment.variable(\"KATAKANA_DESC\")}\n                                placement=\"bottom\"\n                                color=\"white\"\n                            >\n                                <span data-testid=\"katakana-inspectable\">Katakana</span>\n                            </Inspectable>\n                            {' syllabaries.'}\n                        </h4>\n                    </div>\n\n                    <KanaCarousel kana={this.kana}/>\n\n                    <Link to=\"/play\">\n                        <Button className={styles.play} variant=\"outline-success\">\n                            <FontAwesomeIcon icon={faPlay} /> Play\n                        </Button>\n                    </Link>\n\n                    <Link to=\"/search\">\n                        <Button className={styles.search} variant=\"outline-info\">\n                            <FontAwesomeIcon icon={faSearch} /> Search\n                        </Button>\n                    </Link>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default LandingPage;","import { Button, Container } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/pages/NotFoundPage.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NotFoundPage = () => {\n    return(\n        <Container fluid className={styles.wrapper}>\n            <div className={styles.content}>\n                <h1 className={styles.heading}>Nani!?</h1>\n                <h3 className={styles.description}>There doesn't appear to be anything here.</h3>\n\n                <Button className={styles.home} variant=\"outline-success\" href=\"/\">\n                    <FontAwesomeIcon icon={faHome} /> Home\n                </Button>\n            </div>\n        </Container>\n    );\n}\n\nexport default NotFoundPage;","import { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/pages/HelpPage.module.scss\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass HelpPage extends Component {\n    render() {\n        return (\n            <Container fluid className={styles.wrapper}>\n                <Container className={styles.content}>\n                    <Row>\n                        <Col>\n                            <h1 className={styles.heading}>\n                                <FontAwesomeIcon icon={faQuestionCircle} /> Frequently Asked Questions\n                            </h1>\n\n                            <h3 className={styles.question}>What is <strong>'romaji'</strong> ?</h3>\n                            <p className={styles.answer}>\n                                Romanji or ローマ字 (rōmaji) is the romanisation of the Japanese written language.\n                            </p>\n                            <a href=\"https://www.japanesepod101.com/japanese-romaji/\" target=\"_blank\" className={styles.source}>\n                                Source\n                            </a>\n                        </Col>\n                    </Row>\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default HelpPage;","import { Component } from \"react\";\nimport styles from \"../../styles/sass/components/layout/Main.module.scss\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport GamePage from \"../pages/GamePage\";\nimport SearchPage from \"../pages/SearchPage\";\nimport LandingPage from \"../pages/LandingPage\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport HelpPage from \"../pages/HelpPage\";\n\nclass Main extends Component {\n    render() {\n        return (\n            <div className={styles.wrapper}>\n                <HashRouter basename={process.env.REACT_APP_BASE_PATH}>\n                    <Switch>\n                        <Route exact path=\"/\" component={LandingPage} />\n                        <Route exact path=\"/play\" component={GamePage}/>\n                        <Route exact path=\"/search\" component={SearchPage}/>\n                        <Route exact path=\"/help\" component={HelpPage} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n\n}\n\nexport default Main;","import './styles/sass/LearnJapanese.module.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react\";\nimport Main from \"./components/layout/Main\";\n\nclass LearnJapanese extends Component {\n    render() {\n        return (\n            <Main />\n        );\n    }\n}\n\nexport default LearnJapanese;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/sass/index.scss';\nimport LearnJapanese from './LearnJapanese';\n\nReactDOM.render(\n    <React.StrictMode>\n        <LearnJapanese/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanaDisplay_wrapper__2_l_u\",\"blur\":\"KanaDisplay_blur__2xgpD\",\"diagraphBlur\":\"KanaDisplay_diagraphBlur__2LRZX\",\"kana\":\"KanaDisplay_kana__1vzXc\",\"diagraphLeft\":\"KanaDisplay_diagraphLeft__1bIAC\",\"diagraphRight\":\"KanaDisplay_diagraphRight__2rKng\",\"redKana\":\"KanaDisplay_redKana__2ZwPD\",\"flashRed\":\"KanaDisplay_flashRed__1K84k\",\"redDiagraph\":\"KanaDisplay_redDiagraph__2ECmX\",\"index\":\"KanaDisplay_index__2DNoQ\",\"clickable\":\"KanaDisplay_clickable__1U-xO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchPage_wrapper__3WfDo\",\"searchWrapper\":\"SearchPage_searchWrapper__ldt2W\",\"label\":\"SearchPage_label__pw8Q_\",\"switchWrapper\":\"SearchPage_switchWrapper__3WDNw\",\"hiraganaSwitch\":\"SearchPage_hiraganaSwitch__2ufYA\",\"katakanaSwitch\":\"SearchPage_katakanaSwitch__h-ela\",\"diagraphSwitch\":\"SearchPage_diagraphSwitch__tHO4N\",\"diacriticalSwitch\":\"SearchPage_diacriticalSwitch__26buD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GameModeMenu_wrapper__1tgZR\",\"leftColumn\":\"GameModeMenu_leftColumn__y-c3S\",\"rightColumn\":\"GameModeMenu_rightColumn__2V-Mj\",\"playButton\":\"GameModeMenu_playButton__3S_k6\",\"settingsButton\":\"GameModeMenu_settingsButton__3hJeL\",\"desc\":\"GameModeMenu_desc__32tG5\",\"descWrapper\":\"GameModeMenu_descWrapper__44rED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"LandingPage_heading__39RGL\",\"description\":\"LandingPage_description__1HinN\",\"descriptionWrapper\":\"LandingPage_descriptionWrapper__M6Rl7\",\"play\":\"LandingPage_play__UCE_k\",\"search\":\"LandingPage_search__2A3TM\",\"japanese\":\"LandingPage_japanese__a0c_8\",\"inspectable\":\"LandingPage_inspectable__27Uqq\",\"wrapper\":\"LandingPage_wrapper__15bfP\",\"header\":\"LandingPage_header__eCDdF\",\"content\":\"LandingPage_content__2mJ-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"KanaMemoryTest_submit__3dnbq\",\"inputCol\":\"KanaMemoryTest_inputCol__bTxv8\",\"wrapper\":\"KanaMemoryTest_wrapper__2Dtod\",\"timer\":\"KanaMemoryTest_timer__NpMwL\",\"tipCol\":\"KanaMemoryTest_tipCol__2gcry\",\"lifeDisplayContainer\":\"KanaMemoryTest_lifeDisplayContainer__1Ph7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kana\":\"AnswerMistake_kana__3kGK2\",\"timesWrong\":\"AnswerMistake_timesWrong__1PNl1\",\"romanji\":\"AnswerMistake_romanji__2QvuW\",\"wrapper\":\"AnswerMistake_wrapper__3QaYJ\",\"kanaWrapper\":\"AnswerMistake_kanaWrapper__lhBj_\",\"infoWrapper\":\"AnswerMistake_infoWrapper__HEWY-\",\"col\":\"AnswerMistake_col__QbWIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hiragana\":\"KanaTile_hiragana__ECiBL\",\"katakana\":\"KanaTile_katakana__3xTDR\",\"diagraph\":\"KanaTile_diagraph__1478d\",\"diacritical\":\"KanaTile_diacritical__2aQhQ\",\"kana\":\"KanaTile_kana__m6fQI\",\"wrapper\":\"KanaTile_wrapper__ipAmP\",\"kanaWrapper\":\"KanaTile_kanaWrapper__3JJ4M\",\"romanji\":\"KanaTile_romanji__33aH4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HelpPage_wrapper__1jt-X\",\"content\":\"HelpPage_content__3Yiv-\",\"heading\":\"HelpPage_heading__LXfL2\",\"question\":\"HelpPage_question__2Fzay\",\"answer\":\"HelpPage_answer__3cn1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotFoundPage_wrapper__2AxlM\",\"content\":\"NotFoundPage_content__1Fig4\",\"home\":\"NotFoundPage_home__2B8Gk\",\"heading\":\"NotFoundPage_heading__2QBj1\",\"description\":\"NotFoundPage_description__3uRHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"KanaChoiceQuestion_tile__34ht0\",\"selected\":\"KanaChoiceQuestion_selected__3dyrc\",\"question\":\"KanaChoiceQuestion_question__2n8_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notSelected\":\"GameModeButton_notSelected__pzjYM\",\"selected\":\"GameModeButton_selected__1nQBY\",\"icon\":\"GameModeButton_icon__1Ce4e\",\"name\":\"GameModeButton_name__3oQft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notSelected\":\"DisplayTypeButton_notSelected__QWLTW\",\"selected\":\"DisplayTypeButton_selected__r8o7k\",\"icon\":\"DisplayTypeButton_icon__2zdZi\",\"name\":\"DisplayTypeButton_name__2VV8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kana\":\"KanaCarousel_kana__1Ap-l\",\"romanji\":\"KanaCarousel_romanji__22z-S\",\"animate\":\"KanaCarousel_animate__3AJlw\",\"fade\":\"KanaCarousel_fade__fTI2L\",\"wrapper\":\"KanaCarousel_wrapper__2Gn3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Feedback_wrapper__2dD4d\",\"accordion\":\"Feedback_accordion__tKq1t\",\"toggle\":\"Feedback_toggle__1lKHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ResultScreen_title__1qwJm\",\"score\":\"ResultScreen_score__ukQW3\",\"wrapper\":\"ResultScreen_wrapper__1kgDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"LifeDisplay_icon__3uPee\",\"quantity\":\"LifeDisplay_quantity__xbYRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabled\":\"HintButton_disabled__35ETP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputGroup\":\"SearchField_inputGroup__3d6yX\",\"input\":\"SearchField_input__o83-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"Inspectable_white__WhPk2\",\"black\":\"Inspectable_black__2NUzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Main_switch__1Pflp\",\"wrapper\":\"Main_wrapper__dIwvZ\",\"wrapperFullScreen\":\"Main_wrapperFullScreen__3wGg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pause\":\"Timer_pause__1aRl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"QuitButton_icon__3rq8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"RomanjiInput_input__sgPD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"SessionProgressBar_progress__rzhc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"KanaGrid_grid__p4weY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"KanaTypeIndicator_icon__13uaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ParallaxBackground_background__2WOuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HelpButton_button__3r_hX\"};"],"sourceRoot":""}