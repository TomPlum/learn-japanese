{"version":3,"sources":["styles/sass/components/ui/ConfirmModal.module.scss","styles/sass/components/pages/NotFoundPage.module.scss","styles/sass/components/learn/LearnTopicButton.module.scss","styles/sass/components/settings/game/HintSettingsForm.module.scss","styles/sass/components/layout/SettingsMenu.module.scss","styles/sass/components/ui/buttons/LearningFeedbackButton.module.scss","styles/sass/components/game/HintButton.module.scss","styles/sass/components/ui/RevealableText.module.scss","styles/sass/components/ui/display/AnswerChoiceDisplay.module.scss","styles/sass/components/game/questions/ChoiceQuestion.module.scss","styles/sass/components/learn/sentence/SentenceStructureFlashCardBack.module.scss","styles/sass/components/results/LearningResultScreen.module.scss","styles/sass/components/game/LifeDisplay.module.scss","styles/sass/components/ui/display/DynamicDisplay.module.scss","styles/sass/components/ui/display/QuestionDisplay.module.scss","styles/sass/components/results/Feedback.module.scss","styles/sass/components/ui/buttons/FontSelectorButton.module.scss","styles/sass/components/learn/FlashCardBack.module.scss","styles/sass/components/learn/kanji/KanjiDisplay.module.scss","styles/sass/components/ui/Copyable.module.scss","styles/sass/components/ui/buttons/KyoikuGradeButton.module.scss","styles/sass/components/layout/TopicListOption.module.scss","styles/sass/components/ui/buttons/DisplayTypeButton.module.scss","styles/sass/components/settings/game/LifeSettingsForm.module.scss","styles/sass/components/game/Timer.module.scss","styles/sass/components/ui/PopOver.module.scss","styles/sass/components/ui/display/ScoreDisplay.module.scss","styles/sass/components/ui/fields/GameInputField.module.scss","styles/sass/components/user/UserButton.module.scss","styles/sass/components/ui/buttons/HelpButton.module.scss","styles/sass/components/learn/kanji/KanjiFlashCardFront.module.scss","styles/sass/components/learn/basics/BasicsFlashCardFront.module.scss","styles/sass/components/ui/display/RomajiDisplay.module.scss","styles/sass/components/ui/fields/QuantityField.module.scss","styles/sass/components/layout/KanjiSettingsMenu.module.scss","styles/sass/components/learn/Search.module.scss","styles/sass/components/ui/buttons/KanaQuantityButton.module.scss","styles/sass/components/ui/KanaCarousel.module.scss","styles/sass/components/settings/game/GameSettingsMenu.module.scss","styles/sass/components/ui/SessionProgressBar.module.scss","styles/sass/components/ui/buttons/SkipButton.module.scss","styles/sass/components/game/questions/TextQuestion.module.scss","styles/sass/components/game/QuestionBanner.module.scss","styles/sass/components/ui/ScrollableContainer.module.scss","styles/sass/components/learn/kana/KanaFlashCardFront.module.scss","styles/sass/components/learn/kana/KanaFlashCardBack.module.scss","styles/sass/components/ui/Inspectable.module.scss","styles/sass/components/learn/kanji/KanjiReadingDisplay.module.scss","styles/sass/components/learn/kanji/KanjiMeaningDisplay.module.scss","styles/sass/components/learn/sentence/SentenceStructureFlashCardFront.module.scss","styles/sass/components/layout/GameTypeMenuDropdownOption.module.scss","styles/sass/components/ui/fields/SearchField.module.scss","styles/sass/components/learn/SearchTag.module.scss","styles/sass/components/ui/select/LearnableFieldSelector.module.scss","styles/sass/components/layout/KanaGrid.module.scss","styles/sass/components/ui/buttons/QuitButton.module.scss","styles/sass/components/ui/buttons/SubmitButton.module.scss","styles/sass/components/settings/game/QuestionSettingsForm.module.scss","styles/sass/components/learn/FlashCardFront.module.scss","styles/sass/components/ui/buttons/FlashCardResetButton.module.scss","styles/sass/components/learn/numbers/NumbersFlashCardFront.module.scss","styles/sass/components/learn/Learn.module.scss","styles/sass/components/ui/ToggleSwitch.module.scss","styles/sass/components/ui/MenuDescription.module.scss","styles/sass/components/ui/buttons/StartButton.module.scss","styles/sass/components/learn/LearnableInfo.module.scss","styles/sass/components/results/GameResultScreen.module.scss","styles/sass/components/layout/ControlsMenu.module.scss","styles/sass/components/pages/MainMenuPage.module.scss","styles/sass/components/layout/KanaTypeIndicator.module.scss","styles/sass/components/layout/ParallaxBackground.module.scss","styles/sass/components/layout/Main.module.scss","styles/sass/components/pages/LandingPage.module.scss","styles/sass/LearnJapanese.module.scss","styles/sass/components/game/MemoryGame.module.scss","styles/sass/components/settings/data/SentenceStructureForm.module.scss","styles/sass/components/settings/data/DataSettingsMenu.module.scss","styles/sass/components/learn/kanji/KanjiFlashCardBack.module.scss","styles/sass/components/ui/display/KanaDisplay.module.scss","styles/sass/components/game/questions/MatchQuestion.module.scss","styles/sass/components/settings/game/TimeSettingsForm.module.scss","types/game/GameFinishReason.ts","components/game/Timer.tsx","components/game/LifeDisplay.tsx","components/ui/buttons/QuitButton.tsx","types/game/QuestionType.ts","components/game/CountDown.tsx","utility/Viewports.ts","components/ui/SessionProgressBar.tsx","components/ui/buttons/SubmitButton.tsx","components/ui/PopOver.tsx","components/ui/RevealableText.tsx","components/game/HintButton.tsx","components/ui/buttons/SkipButton.tsx","components/ui/ConfirmModal.tsx","utility/Environment.ts","components/ui/display/ScoreDisplay.tsx","filters/learnable/ExclusionFilter.ts","utility/Numbers.ts","utility/Arrays.ts","types/kana/KanaColumn.ts","types/game/GameQuestion.ts","components/ui/LoadingSpinner.tsx","hooks.ts","components/ui/display/DynamicDisplay.tsx","components/ui/display/QuestionDisplay.tsx","components/ui/fields/GameInputField.tsx","components/ui/fields/AnswerInputField.tsx","components/game/questions/TextQuestion.tsx","components/ui/display/AnswerChoiceDisplay.tsx","components/game/QuestionBanner.tsx","components/game/questions/ChoiceQuestion.tsx","utility/Maps.ts","components/game/questions/MatchQuestion.tsx","sound/finish.wav","sound/correct.wav","sound/wrong.wav","components/ui/VolumeController.tsx","components/game/MemoryGame.tsx","data/Hiragana.ts","data/Katakana.ts","utility/RomajiGenerator.ts","components/results/AnswerMistake.tsx","components/results/Feedback.tsx","components/results/GameResultScreen.tsx","components/layout/HashLink.tsx","components/ui/ScrollableContainer.tsx","components/ui/ConditionalWrapper.tsx","components/ui/NavigationButton.tsx","types/Theme.ts","slices/FontSlice.ts","components/ui/buttons/FontSelectorButton.tsx","types/AppMode.ts","components/ui/buttons/ThemeButton.tsx","components/ui/buttons/AppModeButton.tsx","slices/UserSlice.ts","components/user/UserButton.tsx","components/ui/buttons/HelpButton.tsx","components/layout/ControlsMenu.tsx","types/session/SessionMode.ts","types/session/LearnMode.ts","types/session/settings/LearnSettings.ts","types/session/settings/data/DataSettings.ts","types/session/settings/data/NumbersSettings.ts","types/learn/mode/LearnNumbersModes.ts","types/kanji/KyoikuGrade.ts","types/session/settings/data/KanjiSettings.ts","types/learn/mode/LearnKanjiModes.ts","types/session/settings/data/BasicsSettings.ts","types/learn/mode/LearnBasicsModes.ts","types/session/settings/data/CalendarSettings.ts","types/learn/mode/LearnCalendarModes.ts","components/game/DynamicCharacter.tsx","components/ui/display/KanaDisplay.tsx","components/learn/FlashCardFront.tsx","components/learn/kana/KanaFlashCardFront.tsx","components/ui/buttons/FlashCardResetButton.tsx","components/learn/FlashCardBack.tsx","components/learn/DefinitionList.tsx","components/learn/kana/KanaFlashCardBack.tsx","components/learn/kanji/KanjiFlashCardFront.tsx","types/kanji/ReadingType.ts","components/learn/kanji/KanjiDisplay.tsx","utility/ComponentTree.ts","components/ui/Inspectable.tsx","components/ui/SpinnerController.tsx","components/ui/Copyable.tsx","components/learn/kanji/KanjiReadingDisplay.tsx","components/learn/kanji/KanjiExampleDisplay.tsx","components/learn/kanji/KanjiMeaningDisplay.tsx","components/learn/kanji/KanjiFlashCardBack.tsx","types/learn/LearnableField.ts","types/learn/Learnable.ts","types/colour/Colour.ts","components/learn/basics/BasicsFlashCardFront.tsx","components/learn/CommonFlashCardBack.tsx","components/learn/basics/BasicsFlashCardBack.tsx","types/session/settings/data/SentenceStructureSettings.ts","types/learn/mode/LearnSentenceStructureModes.ts","components/learn/numbers/NumbersFlashCardFront.tsx","components/learn/numbers/NumbersFlashCardBack.tsx","components/learn/sentence/SentenceStructureFlashCardFront.tsx","components/ui/display/RomajiDisplay.tsx","types/kanji/KanjiReading.ts","types/kanji/Example.ts","types/kanji/Kanji.ts","data/Kanji.ts","repository/KanjiRepository.ts","components/ui/display/InformationalKanji.tsx","components/ui/display/KanjiWordDisplay.tsx","components/learn/sentence/SentenceStructureFlashCardBack.tsx","types/session/settings/game/LifeSettings.ts","types/session/settings/game/HintSettings.ts","types/session/settings/game/TimeSettings.ts","filters/FilterChain.ts","types/session/settings/game/QuestionSettings.ts","types/session/settings/game/GameSettings.ts","types/session/PlayMode.ts","types/game/mode/PlayKanjiModes.ts","types/session/settings/data/KanaSettings.ts","filters/kana/DiagraphFilter.ts","filters/kana/KanaTypeFilter.ts","types/game/mode/PlayKanaModes.ts","types/learn/mode/LearnKanaModes.ts","types/game/mode/PlaySentenceStructureModes.ts","components/ui/ToggleSwitch.tsx","components/settings/data/DataSettingsMenu.tsx","components/ui/fields/QuantityField.tsx","components/settings/data/KanaSettingsForm.tsx","components/ui/buttons/KyoikuGradeButton.tsx","types/TemplateString.ts","components/settings/data/KanjiSettingsForm.tsx","components/settings/data/SentenceStructureForm.tsx","types/game/mode/PlayBasicsModes.ts","types/game/mode/PlayCalendarModes.ts","types/game/mode/PlayNumbersModes.ts","types/Topic.ts","types/kana/KanaType.ts","components/layout/TopicListOption.tsx","components/layout/TopicDropdownOption.tsx","components/layout/TopicSelectionMenu.tsx","components/ui/MenuDescription.tsx","components/learn/LearnTopicButton.tsx","components/ui/buttons/StartButton.tsx","components/ui/fields/SearchField.tsx","components/learn/LearnableInfo.tsx","components/learn/SearchTag.tsx","components/learn/Search.tsx","types/kana/Kana.ts","filters/kana/QuantityFilter.ts","filters/kana/DiacriticalFilter.ts","filters/kana/RegularKanaFilter.ts","repository/KanaRepository.ts","types/sentence/Definition.ts","repository/CalendarRepository.ts","data/Calendar.ts","types/numbers/CounterGroup.ts","repository/BasicsRepository.ts","data/Colours.ts","types/learn/CommonData.ts","types/sentence/AdjectiveType.ts","types/sentence/VerbType.ts","repository/NumbersRepository.ts","data/Numbers.ts","components/ui/buttons/LearningFeedbackButton.tsx","repository/SentenceStructureRepository.ts","data/SentenceStructure.ts","repository/LearningDataRepository.ts","types/session/settings/SessionSettings.ts","components/ui/buttons/DisplayTypeButton.tsx","components/ui/buttons/KanaQuantityButton.tsx","components/ui/select/LearnableFieldSelector.tsx","components/settings/game/QuestionSettingsForm.tsx","components/settings/game/HintSettingsForm.tsx","components/settings/game/LifeSettingsForm.tsx","components/settings/game/TimeSettingsForm.tsx","components/settings/game/GameSettingsMenu.tsx","components/learn/ModeSelectionMenu.tsx","components/layout/SettingsMenu.tsx","types/session/SessionID.ts","components/results/LearningResultScreen.tsx","components/error/MainErrorBoundary.tsx","components/learn/FlashCard.tsx","components/learn/Learn.tsx","components/user/LoginForm.tsx","components/user/RegistrationForm.tsx","components/user/UserForm.tsx","store.ts","components/pages/MainMenuPage.tsx","components/layout/KanaTypeIndicator.tsx","components/layout/KanaTile.tsx","components/layout/KanaGrid.tsx","filters/kana/RomajiFilter.ts","components/pages/SearchPage.tsx","components/ui/KanaCarousel.tsx","components/layout/ParallaxBackground.tsx","components/pages/LandingPage.tsx","components/pages/NotFoundPage.tsx","components/pages/HelpPage.tsx","components/layout/Main.tsx","components/error/ErrorBoundary.tsx","LearnJapanese.tsx","index.tsx","styles/sass/components/ui/NavigationButton.module.scss","styles/sass/components/learn/kanji/KanjiExampleDisplay.module.scss","styles/sass/components/pages/SearchPage.module.scss","styles/sass/components/user/UserForm.module.scss","styles/sass/components/ui/SpinnerController.module.scss","styles/sass/components/settings/data/KanaSettingsForm.module.scss","styles/sass/components/learn/CommonFlashCardBack.module.scss","styles/sass/components/results/AnswerMistake.module.scss","styles/sass/components/learn/DefinitionList.module.scss","styles/sass/components/layout/TopicSelectionMenu.module.scss","styles/sass/components/learn/ModeSelectionMenu.module.scss","styles/sass/components/layout/KanaTile.module.scss","styles/sass/components/pages/HelpPage.module.scss"],"names":["module","exports","GameFinishReason","Timer","props","stop","setState","paused","isStopped","clearInterval","state","interval","restart","start","Date","now","current","undefined","getCurrentTime","formatTimeElapsed","setInterval","tick","pause","onChangePausedState","play","onPaused","pad","value","slice","this","className","pausable","styles","wrapper","join","size","fixedWidth","icon","title","faPlay","faPause","onClick","time","delta","date","Math","round","hours","getUTCHours","getUTCMinutes","getUTCSeconds","Component","LifeDisplay","hearts","enabled","faHeartBroken","faHeart","quantity","infinite","faInfinity","QuitButton","faTimes","QuestionType","CountDown","reset","remaining","decrement","onFinish","Viewport","SessionProgressBar","inProgress","streak","barClass","bar","ProgressBar","animated","default","variant","SubmitButton","handleKeySelection","e","disabled","key","preventDefault","stopPropagation","document","addEventListener","removeEventListener","isRestart","Button","type","button","faRedoAlt","PopOver","text","rest","Popover","id","popover","Title","as","Content","Viewports","width","PHONE","TABLET","DESKTOP","RevealableText","handleClick","revealed","onReveal","defaultClass","plain","unblur","blur","reveal","HintButton","getTitle","getRemaining","getContent","data","getHint","updateViewport","viewport","fromWidth","window","innerWidth","onHintUse","onUse","isLastHint","overlay","hint","buttonClasses","solidBulb","regularBulb","OverlayTrigger","trigger","placement","rootClose","style","SkipButton","faForward","data-testid","withSize","ConfirmModal","handleYes","show","onConfirm","handleNo","onDismiss","body","Modal","contentClassName","modal","centered","onHide","backdrop","Header","closeButton","header","Body","Footer","footer","yes","no","Environment","variable","name","replaceAll","normalize","replace","toUpperCase","process","ScoreDisplay","onStreakAnimationEnd","showingStreak","hasStreakMilestone","prevProps","onAnimationEnd","ExclusionFilter","exclusion","filter","item","equals","Numbers","randomInt","min","max","floor","random","Arrays","arr1","arr2","length","element","indexOf","array","reduce","a","b","JSON","stringify","sort","shuffled","i","j","index","splice","elements","copy","getRandomArrayIndex","remove","push","it","resultArray","chunkIndex","self","getRandomObject","pool","objects","randomIndex","randomObject","getRandomObjects","randomObjects","KanaColumn","GameQuestion","isCorrect","LoadingSpinner","active","Spinner","role","animation","spinner","useUserDispatch","useDispatch","useUserSelector","useSelector","useFontSelector","DynamicDisplay","React","forwardRef","ref","useState","loading","setLoading","setActive","selectedFont","font","selected","useImperativeHandle","notify","mode","forceSingleModeWidth","onReady","concat","container","color","character","fontFamily","QuestionDisplay","display","useRef","notifyIncorrect","question","GameInputField","placeholder","helpPopover","onChange","faInfoCircle","Form","Control","autoFocus","plaintext","input","onFocus","AnswerInputField","handleOnChange","field","target","validationRegex","test","description","TextQuestion","handleInputChange","isValid","answer","answers","includes","toLowerCase","createRef","hidden","answerField","Group","controlId","Row","Col","xs","AnswerChoiceDisplay","isNotifyingIncorrect","onMouseUp","onMouseDown","onMouseOver","onMouseOut","onTouchStart","onTouchEnd","containerClass","valueClass","clickable","indexVisibility","visibility","QuestionBanner","getQuestionValues","questionField","questionValues","getFieldValues","map","getOverlay","values","displayValues","extraValues","Alert","questionValue","Fragment","aka","ChoiceQuestion","displays","Map","indices","get","select","keys","toString","tile","Number","wrong","expected","Error","options","shuffle","forEach","option","set","lg","Maps","first","second","MatchQuestion","areEqual","hoveredAnswer","handleAnswerAttempt","selectedAnswer","selectedAnswers","getQuestionValueClassName","has","matched","getAnswerValueClassName","handleQuestionSelection","resetSelected","resetHoveredAnswer","handleCursorMove","xCursor","pageX","yCursor","pageY","handleTouchMove","touch","touches","handleAnswerChange","entries","entry","delete","getConnectorTarget","cursor","getConnectorRenderCondition","questionIsSelected","questionHasMatchedAnswer","getConnectorStyle","getConnectorColour","Container","left","top","row","md","delay","from","connector","toAnchor","fromAnchor","borderWidth","borderStyle","borderColor","to","VolumeController","invert","muted","volume","onVolumeChange","showVolume","hideVolume","changeVolume","getVolumeIcon","faVolumeMute","faVolumeUp","faVolumeDown","onMouseLeave","onMouseEnter","tooltipPlacement","defaultShow","MemoryGame","timer","countdown","getQuestion","settings","currentQuestion","currentQuestionID","q","getUniqueID","TEXT","handleAnswerValidity","CHOICE","questions","chain","answerFilter","withFilter","wrongAnswerOptions","getRandomElements","execute","cards","MATCH","questionData","answerQuestion","correctAnswers","wrongAnswers","remainingQuestions","lives","getAudio","success","catch","console","log","add","finish","hasExhaustedQuestions","getGameResult","EXHAUSTED_QUESTIONS","advanceNextQuestion","hasValidAnswer","getNextQuestion","nextQuestion","isQuitting","hasUsedHintThisQuestion","Set","hints","valid","handleSkip","failedToAnswer","countDownTimeElapsed","nextQuestions","nextRemainingQuestions","onQuit","gameResult","QUIT","onClickQuit","onDismissQuitModal","getScore","hasSkipped","score","baseScore","getBaseScore","source","audio","Audio","autoplay","reason","livesRemaining","hintsRemaining","duration","firstQuestion","NO_LIVES_REMAINING","noGutters","quitWrapper","quit","progressWrapper","progress","lifeDisplayContainer","timed","secondsPerQuestion","questionWrapper","questionWrapperColumn","footerLeftCol","skip","footerRightCol","ButtonGroup","buttonGroup","unlimited","submit","hiragana","code","romaji","column","VOWEL","diacritical","K","S","T","N","H","M","Y","R","W","OTHER","katakana","RomajiGenerator","longSounds","sokuons","kana","kanaWithDiagraphsReplaced","hiraganaDiagraphs","katakanaDiagraphs","sokuonsReplaced","char","find","AnswerMistake","times","kanaWrapper","getKana","infoWrapper","col","timesWrong","generate","Feedback","getMistakeCounts","acc","onClose","Card","mistake","GameResultScreen","result","correct","getTitleIcon","faGlassCheers","colour","NO_TIME_REMAINING","faHourglassEnd","hide","showMistakesModal","titleIcon","summary","attribute","faAward","award","faHeartbeat","heart","faLightbulb","faClock","mistakes","faEraser","HashLink","path","children","href","Nav","Link","ScrollableContainer","maxHeight","height","hideScrollBar","classes","hideScroll","ConditionalWrapper","condition","NavigationButton","setShow","search","setSearch","expandSearch","setExpandSearch","targetRef","link","disableDropdown","iconClass","textClass","Overlay","onExited","searchable","content","Children","child","Item","itemWrapper","itemIcon","Theme","fontSlice","createSlice","initialState","reducers","setFont","action","payload","actions","FontSelectorButton","setSelected","fontDispatcher","handleSelect","fonts","displayName","faFont","menuClass","menu","menuStyles","linkText","isSelected","inactive","faCheck","faCircle","AppMode","ThemeButton","handleOnClick","theme","DARK","LIGHT","faMoon","AppModeButton","LEARN","PLAY","prevState","faGraduationCap","faGamepad","user","userSlice","setUser","clearUser","UserButton","userDispatch","nickname","username","faUserTie","faUser","faUserCircle","profile","faChartBar","stats","faDoorOpen","logout","HelpButton","faPaintBrush","kanji","faBook","genki","faQuestion","faq","ControlsMenu","onChangeAppMode","onLaunchLoginModal","startingMode","Navbar","fixed","navbar","innerWrapper","fluid","nav","navLink","faHome","SessionMode","dataSettings","modeSettings","_displayName","_colour","_icon","_dataSettings","_modeSettings","LearnMode","LearnSettings","DataSettings","topic","_topic","_quantity","NumbersSettings","numbers","counters","age","exceptions","units","sequence","Topic","NUMBERS","_numbers","_counters","_age","_exceptions","_units","_sequence","NumbersSettingsBuilder","include","LearnNumbersModes","defaultLearnSettings","faSortNumericDown","withNumbers","build","faStopwatch","withCounters","faBaby","withAge","withExceptions","faRuler","withUnits","faSort","withSequence","KyoikuGrade","_value","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","TEN","ELEVEN","TWELVE","UNKNOWN","ALL","fromInteger","KanjiSettings","grades","joyo","tags","KANJI","_grades","_joyo","_tags","KanjiSettingsBuilder","LearnKanjiModes","faSchool","withGrades","faChalkboardTeacher","withJoyoKanji","faYenSign","withTags","faFillDrip","BasicsSettings","colours","animals","directions","weather","family","BASICS","_colours","_animals","_directions","_weather","_family","_body","BasicsSettingsBuilder","LearnBasicsModes","faPalette","withColours","faCat","withAnimals","faCompass","withDirections","faCloudSunRain","withWeather","faChild","withFamily","faHandPaper","withBody","CalendarSettings","days","months","season","nouns","phrases","CALENDAR","_days","_months","_seasons","_nouns","_phrases","CalendarSettingsBuilder","_season","LearnCalendarModes","faCalendarDay","withDays","faCalendarAlt","withMonths","withTemporalNouns","faSnowflake","withSeasons","faAlignLeft","withPhrases","faVial","DynamicCharacter","getClasses","getSize","getMargin","isDiagraphLeft","isDiagraphRight","fontSize","marginLeft","marginRight","KanaDisplay","handleContainerClick","kanaClass","redKana","leftDiagraphClass","diagraphBlur","diagraphLeft","rightDiagraphClass","diagraphRight","extraCharacterClass","indexColour","isDiagraph","FlashCardFront","borderColour","border","KanaFlashCardFront","FlashCardResetButton","faReply","FlashCardBack","onReset","DefinitionList","words","inline","stacked","meaning","or","KanaFlashCardBack","getMeanings","KanjiFlashCardFront","ReadingType","grade","getValue","KanjiDisplay","showSource","lineHeight","rel","Node","depth","_depth","ComponentTree","root","visited","doDepthFirstTraversal","fromRoot","response","getAllChildren","reverse","leaf","cloneElement","nextChild","node","next","hasChildren","nestedChild","Array","isArray","pop","Inspectable","white","black","addPropsToLeafNode","SpinnerController","handleNext","handleLast","disabledTitle","hasMultipleValues","arrowWrapper","arrow","faChevronUp","selectedWrapper","selectedDisabled","faChevronDown","Copyable","copyToClipBoard","getDeepestLeafNode","navigator","clipboard","writeText","then","restartCopyTimer","hasWritten","hasFailed","clearTimeout","successTimeout","setTimeout","paragraph","Tooltip","tooltip","KanjiReadingDisplay","getReadingFormatted","showRomaji","formatted","ON","KUN","getText","readings","commonStyles","reading","label","KanjiExampleDisplay","examples","controllerWrapper","textWrapper","example","english","KanjiMeaningDisplay","meanings","showing","extra","faEllipsisH","KanjiFlashCardBack","getReadings","back","sm","meaningWrapper","LearnableField","_name","_description","_validationRegex","MEANING","KANA","JAPANESE","ROMAJI","ONYOMI_READING","KUNYOMI_READING","RANDOM","Learnable","getRomaji","getKanjiVariation","getOnyomiReadings","getKunyomiReadings","ReferenceError","uuid","other","Colour","_kanji","_kana","_romaji","BasicsFlashCardFront","iconWrapper","CommonFlashCardBack","rightCol","rightDataWrapper","exampleEnglish","exampleKana","BasicsFlashCardBack","SentenceStructureSettings","adverbs","particles","expressions","verbs","adjectives","GRAMMAR","_adverbs","_particles","_expressions","_verbs","_adjectives","SentenceStructureSettingsBuilder","LearnSentenceStructureModes","faExclamation","withAdverbs","withParticles","faComment","withExpressions","faRunning","withVerbs","faCube","withNouns","faFire","withAdjectives","NumbersFlashCardFront","NumbersFlashCardBack","getExample","SentenceStructureFlashCardFront","RomajiDisplay","parenthesis","KanjiReading","_type","Example","_english","Kanji","_character","_readings","_meanings","_grade","_source","_examples","on","kun","kyoiku","getKanji","axios","KanjiRepository","convert","availableKanji","randomKanji","match","InformationalKanji","setKanji","useEffect","getByValue","KanjiWordDisplay","SentenceStructureFlashCardBack","kanjiVariation","LifeSettings","_enabled","LifeSettingsBuilder","HintSettings","_unlimited","HintSettingsBuilder","TimeSettings","_timed","_countdown","_secondsPerQuestion","TimeSettingsBuilder","seconds","FilterChain","filters","reduced","apply","QuestionSettings","_questionField","_answerField","_cards","_answerFilter","_score","QuestionSettingsBuilder","_wrongOptionsFilterChain","enable","GameSettings","_hints","_lives","_time","_question","GameSettingsBuilder","PlayMode","gameSettings","PlayKanjiModes","defaultKanjiSettings","withQuantity","withTimeSettings","isTimed","withHintSettings","isEnabled","withQuestionSettings","withFields","withType","withCardQuantity","withScoreTracking","faStar","faBezierCurve","faRandom","KanaSettings","diagraphs","diacriticals","regular","onlyDiagraphs","_hiragana","_katakana","_diagraphs","_diacriticals","_regular","_onlyDiagraphs","KanaSettingsBuilder","DiagraphFilter","includeDiacriticals","KanaTypeFilter","PlayKanaModes","withEverything","withLifeSettings","faHourglassStart","isCountDown","withSecondsPerQuestion","faKickstarterK","withWrongOptionsFilterChain","withMaxQuantity","LearnKanaModes","withHiragana","withKatakana","withDiacriticals","withDiagraphs","withRegularKana","withOnlyDiagraphs","PlaySentenceStructureModes","defaultDataSettings","faToriiGate","faGrinBeam","ToggleSwitch","Check","switch","checked","DataSettingsMenu","bg","card","scrollable","noGuttersLeft","block","faArrowLeft","buttonText","noGuttersRight","faUndo","QuantityField","isCustomValid","isValidNumber","InputGroup","hasValidation","Prepend","Text","faBalanceScale","required","isInvalid","KanaSettingsForm","defaultState","confirm","validate","KyoikuGradeButton","faChevronRight","TemplateString","args","String","KanjiSettingsForm","onSelectGrade","getDescription","template","format","gradeNumbers","sum","desc","iconColour","faLeaf","faSun","faMountain","SentenceStructureForm","quantityWrapper","PlayBasicsModes","faDog","PlayCalendarModes","faGlobeAmericas","PlayNumbersModes","faCalculator","modes","playModes","_modes","_playModes","_menu","front","faAppleAlt","faSpellCheck","KanaType","TopicListOption","isHeading","ListGroupItem","eventKey","heading","TopicDropdownOption","Dropdown","TopicSelectionMenu","getMenuHeading","appMode","handleChange","onSelect","dropdown","Toggle","dropdownToggle","Menu","dropdownMenu","ListGroup","learn","MenuDescription","LearnTopicButton","notSelected","isFontAwesomeIcon","textIcon","StartButton","SearchField","append","inputGroup","faSearch","Append","LearnableInfo","SearchTag","Search","getResults","selectedTags","getTags","some","tag","matchesMeaning","matchesKana","matchesKanji","onSelectTag","results","Kana","isDiacritical","_code","_column","_isDiacritical","QuantityFilter","DiacriticalFilter","includeDiagraphs","RegularKanaFilter","isRegular","KanaRepository","config","addFilter","HIRAGANA","KATAKANA","Promise","all","getAllKana","readHiragana","readKatakana","Definition","kanjiVariant","CalendarRepository","CounterGroup","BasicsRepository","resolve","CommonData","AdjectiveType","VerbType","NumbersRepository","convertKanji","number","group","ABSOLUTELY_MUST_KNOW","MUST_KNOW","counter","LearningFeedback","SentenceStructureRepository","kanjiForm","I","genkiLesson","NA","BU","GU","SU","NU","RU_U","TSU","U","MU","RU","IRREGULAR","LearningDataRepository","read","SessionSettings","learnSettings","_gameSettings","_learnSettings","DisplayTypeButton","KanaQuantityButton","LearnableFieldSelector","fromNameString","exclude","QuestionSettingsForm","handleQuantitySelect","formWrapper","section","leadingDescription","descriptionWrapper","faThLarge","faHandPointer","cardsIcon","faSquare","transform","faGripVertical","check","HintSettingsForm","areUnlimited","onChangeHintQuantity","LifeSettingsForm","valueOf","TimeSettingsForm","onChangeTimed","onChangeCountDown","onChangeCountDownSeconds","GameSettingsMenu","onConfirmation","questionSettings","hintSettings","lifeSettings","timeSettings","defaults","Tab","defaultActiveKey","fill","faQuestionCircle","questionIcon","navIcon","hintsIcon","livesIcon","timeIcon","Pane","pane","titleText","ModeSelectionMenu","onStart","customGameSettings","customDataSettings","forGame","forLearning","startSearch","searchData","searching","prefix","getMenuModes","getTopic","getModes","isConfiguringGame","isConfiguringData","renderMenu","chunked","pair","columnClass","leftColumn","rightColumn","faDatabase","spin","faCircleNotch","faCog","faCogs","distinct","flatMap","SettingsMenu","modeMenu","onSelectMode","onSelectTopic","scrollIntoView","topicSelectionMenuWrapper","topicMenu","gameMenuWrapper","SessionID","UUID","LearningResultScreen","rememberedQuantity","remembered","forgottenQuantity","forgotten","onPractice","PieChart","Pie","dataKey","animationBegin","innerRadius","Cell","MainErrorBoundary","getHeader","errors","hasError","error","info","Toast","faExclamationCircle","message","LearningFeedbackButton","getIcon","REMEMBERED","faThumbsUp","FORGOT","faThumbsDown","isRemembered","activeClass","activeRemembered","activeForgotten","FlashCard","flip","flipped","newFlipCount","flips","onFlip","Front","Back","isFlipped","Learn","onNext","hasRemembered","hasForgotten","nextRemaining","hasPeeked","newRemembered","newForgotten","onMemorised","onForgot","hasCardsRemaining","forgottenIcon","rememberedIcon","cardWrapper","buttonWrapper","buttonColumnLeft","rememberedButton","buttonColumnRight","forgottenButton","LoginForm","setUsername","password","setPassword","usernameValid","setUsernameValid","passwordValid","setPasswordValid","usernameField","dispatchUser","formValid","focus","handleKeyDown","login","onSuccess","Label","faSpinner","RegistrationForm","isFormValid","validEmail","validUsername","validNickname","validPassword","validSecondPassword","handleEmailChange","email","handleUsernameChange","handleNicknameChange","handlePasswordChange","isPasswordValid","handleSecondPasswordChange","secondPassword","emailFocused","onBlur","UserForm","faUserPlus","footerText","store","configureStore","reducer","userReducer","fontReducer","MainMenuPage","onStartModeSelection","gameConfig","learnConfig","dataConfig","onGameResultMenuClose","inResultsScreen","onLearningResultMenuClose","learningResult","onGameFinish","sessionKey","onLearningFinish","onPracticeStart","handleChangeAppMode","inLoginModal","navigationMode","params","isInMenu","location","KanaTypeIndicator","KanaTile","typeWrapper","diagraph","getFullRomajiString","KanaGrid","columnWidth","component","gutterWidth","gutterHeight","monitorImagesLoaded","appear","transitions","fade","appeared","enter","entered","leaved","appearDelay","easing","grid","noResults","RomajiFilter","SearchPage","setKana","showHiragana","setShowHiragana","showKatakana","setShowKatakana","showDiagraphs","setShowDiagraphs","showDiacriticals","setShowDiacriticals","controlsWrapper","searchWrapper","switchWrapper","hiraganaSwitch","katakanaSwitch","diagraphSwitch","diacriticalSwitch","KanaCarousel","handleAnimation","shown","shownPool","onAnimationIteration","animate","ParallaxBackground","updateWindowDimensions","getBackgroundKana","innerHeight","updateMousePosition","xMouse","yMouse","calculateParallax","html","querySelector","getComputedStyle","parseFloat","kanaPerRow","ceil","totalKanaRequired","pools","position","background","LandingPage","japanese","carouselDisplay","buttonContainer","buttonIcon","NotFoundPage","home","HelpPage","faLink","sourceIcon","Main","basename","exact","ErrorBoundary","LearnJapanese","pathname","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c0da0c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ConfirmModal_modal__1rw3u\",\"title\":\"ConfirmModal_title__20cT1\",\"header\":\"ConfirmModal_header__VTuWB\",\"body\":\"ConfirmModal_body__2QSz3\",\"footer\":\"ConfirmModal_footer__M67-T\",\"yes\":\"ConfirmModal_yes__1nc33\",\"no\":\"ConfirmModal_no__2yIsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotFoundPage_wrapper__2AxlM\",\"content\":\"NotFoundPage_content__1Fig4\",\"home\":\"NotFoundPage_home__2B8Gk\",\"buttonText\":\"NotFoundPage_buttonText__2koXl\",\"buttonIcon\":\"NotFoundPage_buttonIcon__1JXAr\",\"heading\":\"NotFoundPage_heading__2QBj1\",\"description\":\"NotFoundPage_description__3uRHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"LearnTopicButton_button__38R5D\",\"notSelected\":\"LearnTopicButton_notSelected__5wurb\",\"selected\":\"LearnTopicButton_selected__3DcIc\",\"icon\":\"LearnTopicButton_icon__3LvBK\",\"name\":\"LearnTopicButton_name__9oOc0\",\"textIcon\":\"LearnTopicButton_textIcon__33GcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"HintSettingsForm_formWrapper__11buE\",\"section\":\"HintSettingsForm_section__vh4Ih\",\"description\":\"HintSettingsForm_description__3_WCQ\",\"leadingDescription\":\"HintSettingsForm_leadingDescription__1d3Or\",\"descriptionWrapper\":\"HintSettingsForm_descriptionWrapper__34DOR\",\"heading\":\"HintSettingsForm_heading__2EG4D\",\"check\":\"HintSettingsForm_check__3VK4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SettingsMenu_wrapper__uaLbE\",\"row\":\"SettingsMenu_row__FXkwM\",\"topicMenu\":\"SettingsMenu_topicMenu__3nRxr\",\"fadeIn\":\"SettingsMenu_fadeIn__39CFu\",\"gameMenuWrapper\":\"SettingsMenu_gameMenuWrapper__1L0Qw\",\"topicSelectionMenuWrapper\":\"SettingsMenu_topicSelectionMenuWrapper__37ii2\",\"innerWrapper\":\"SettingsMenu_innerWrapper__3LfTF\",\"flashRed\":\"SettingsMenu_flashRed__Tz4t2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"LearningFeedbackButton_text__za8Vo\",\"icon\":\"LearningFeedbackButton_icon__vnTmS\",\"inactive\":\"LearningFeedbackButton_inactive__2StkS\",\"activeRemembered\":\"LearningFeedbackButton_activeRemembered__25rki\",\"activeForgotten\":\"LearningFeedbackButton_activeForgotten__2fKfq\",\"button\":\"LearningFeedbackButton_button__1So8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabled\":\"HintButton_disabled__35ETP\",\"button\":\"HintButton_button__SlpFw\",\"text\":\"HintButton_text__1kI0m\",\"remaining\":\"HintButton_remaining__1BgMP\",\"hint\":\"HintButton_hint__miEb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RevealableText_wrapper__1-hbc\",\"plain\":\"RevealableText_plain__2qIhB\",\"unblur\":\"RevealableText_unblur__33BQ3\",\"reveal\":\"RevealableText_reveal__37Urx\",\"blur\":\"RevealableText_blur__D8MI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnswerChoiceDisplay_wrapper__2V9Pm\",\"blur\":\"AnswerChoiceDisplay_blur__30gtq\",\"value\":\"AnswerChoiceDisplay_value__2SwCs\",\"red\":\"AnswerChoiceDisplay_red__3rdtp\",\"flashRed\":\"AnswerChoiceDisplay_flashRed__zyTgt\",\"index\":\"AnswerChoiceDisplay_index__2YuGy\",\"clickable\":\"AnswerChoiceDisplay_clickable__3TxWc\",\"fadeIn\":\"AnswerChoiceDisplay_fadeIn__1smtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"ChoiceQuestion_tile__VAi5u\",\"selected\":\"ChoiceQuestion_selected__3mrnS\",\"wrapper\":\"ChoiceQuestion_wrapper__3soFx\",\"display\":\"ChoiceQuestion_display__1eJB_\",\"question\":\"ChoiceQuestion_question__1-YBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kana\":\"SentenceStructureFlashCardBack_kana__20j5s\",\"kanjiVariation\":\"SentenceStructureFlashCardBack_kanjiVariation__L0Q0l\",\"romaji\":\"SentenceStructureFlashCardBack_romaji__3K7xc\",\"innerWrapper\":\"SentenceStructureFlashCardBack_innerWrapper__1VeTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LearningResultScreen_wrapper__1m9Qf\",\"heading\":\"LearningResultScreen_heading__2kTJ9\",\"quit\":\"LearningResultScreen_quit__10ZEG\",\"mistakes\":\"LearningResultScreen_mistakes__2K1zo\",\"header\":\"LearningResultScreen_header__2QVa7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LifeDisplay_wrapper__3rPZc\",\"icon\":\"LifeDisplay_icon__3uPee\",\"quantity\":\"LifeDisplay_quantity__xbYRR\",\"infinite\":\"LifeDisplay_infinite__3zlDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DynamicDisplay_active__iGpW3\",\"flashRed\":\"DynamicDisplay_flashRed__2rqQi\",\"wrapper\":\"DynamicDisplay_wrapper__1lLjV\",\"text\":\"DynamicDisplay_text__5hGoT\",\"value\":\"DynamicDisplay_value__U1dvI\",\"fadeIn\":\"DynamicDisplay_fadeIn__1gLhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"QuestionDisplay_wrapper__jTN6r\",\"question\":\"QuestionDisplay_question__grXxE\",\"blur\":\"QuestionDisplay_blur__1OzK8\",\"display\":\"QuestionDisplay_display__25ztq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Feedback_wrapper__2dD4d\",\"header\":\"Feedback_header__2rRvZ\",\"modal\":\"Feedback_modal__m0Me6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"check\":\"FontSelectorButton_check__36PMJ\",\"font\":\"FontSelectorButton_font__lrRFr\",\"selected\":\"FontSelectorButton_selected__C6oig\",\"inactive\":\"FontSelectorButton_inactive__2d18j\",\"menu\":\"FontSelectorButton_menu__1oNXR\",\"fade\":\"FontSelectorButton_fade__1afcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FlashCardBack_wrapper__28q8r\",\"header\":\"FlashCardBack_header__HRCsE\",\"body\":\"FlashCardBack_body__2Bys3\",\"title\":\"FlashCardBack_title__Ep2_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanjiDisplay_wrapper__2Qses\",\"value\":\"KanjiDisplay_value__Gm5L4\",\"source\":\"KanjiDisplay_source__2e-c-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Copyable_tooltip__B3puJ\",\"active\":\"Copyable_active__1Mpvb\",\"paragraph\":\"Copyable_paragraph__3Kta-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"KyoikuGradeButton_text__2tWLr\",\"icon\":\"KyoikuGradeButton_icon__2gj_1\",\"kyoiku-grade-1\":\"KyoikuGradeButton_kyoiku-grade-1__3vC7s\",\"kyoiku-grade-1-selected\":\"KyoikuGradeButton_kyoiku-grade-1-selected__1xzZ4\",\"kyoiku-grade-2\":\"KyoikuGradeButton_kyoiku-grade-2__3xt86\",\"kyoiku-grade-2-selected\":\"KyoikuGradeButton_kyoiku-grade-2-selected__2oFC6\",\"kyoiku-grade-3\":\"KyoikuGradeButton_kyoiku-grade-3__3kYFP\",\"kyoiku-grade-3-selected\":\"KyoikuGradeButton_kyoiku-grade-3-selected__3qGcz\",\"kyoiku-grade-4\":\"KyoikuGradeButton_kyoiku-grade-4__3ytd5\",\"kyoiku-grade-4-selected\":\"KyoikuGradeButton_kyoiku-grade-4-selected__sfGLO\",\"kyoiku-grade-5\":\"KyoikuGradeButton_kyoiku-grade-5__31NEP\",\"kyoiku-grade-5-selected\":\"KyoikuGradeButton_kyoiku-grade-5-selected__2WJvv\",\"kyoiku-grade-6\":\"KyoikuGradeButton_kyoiku-grade-6__27Cd9\",\"kyoiku-grade-6-selected\":\"KyoikuGradeButton_kyoiku-grade-6-selected__2Wvwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TopicListOption_text__3UiCa\",\"icon\":\"TopicListOption_icon__3Gn7X\",\"item\":\"TopicListOption_item__1FPAW\",\"heading\":\"TopicListOption_heading__DWC3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notSelected\":\"DisplayTypeButton_notSelected__31aB4\",\"selected\":\"DisplayTypeButton_selected__U0j9H\",\"icon\":\"DisplayTypeButton_icon__34lHe\",\"name\":\"DisplayTypeButton_name__3OgbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"LifeSettingsForm_formWrapper__3zNee\",\"section\":\"LifeSettingsForm_section__1uMG2\",\"description\":\"LifeSettingsForm_description__13vXR\",\"leadingDescription\":\"LifeSettingsForm_leadingDescription__33XRK\",\"descriptionWrapper\":\"LifeSettingsForm_descriptionWrapper__18k0I\",\"heading\":\"LifeSettingsForm_heading__1_YRO\",\"check\":\"LifeSettingsForm_check__2u3ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Timer_wrapper__1cKwk\",\"time\":\"Timer_time__2BBxv\",\"icon\":\"Timer_icon__Hl0lB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PopOver_title__3KVj5\",\"text\":\"PopOver_text__rKmaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"ScoreDisplay_value__2x_g0\",\"streak\":\"ScoreDisplay_streak__1fbIa\",\"wrapper\":\"ScoreDisplay_wrapper__5yCEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GameInputField_wrapper__3-Fy2\",\"input\":\"GameInputField_input__sgQDr\",\"icon\":\"GameInputField_icon__QBdrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserButton_profile__2k3aR\",\"stats\":\"UserButton_stats__COm6d\",\"logout\":\"UserButton_logout__2vCcG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kanji\":\"HelpButton_kanji__1vqzW\",\"genki\":\"HelpButton_genki__qft7d\",\"faq\":\"HelpButton_faq__13bsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanjiFlashCardFront_wrapper__HREl0\",\"display\":\"KanjiFlashCardFront_display__1WD7D\",\"wrapper-grade-1\":\"KanjiFlashCardFront_wrapper-grade-1__3odZA\",\"wrapper-grade-2\":\"KanjiFlashCardFront_wrapper-grade-2__gecZP\",\"wrapper-grade-3\":\"KanjiFlashCardFront_wrapper-grade-3__38koA\",\"wrapper-grade-4\":\"KanjiFlashCardFront_wrapper-grade-4__3t9XI\",\"wrapper-grade-5\":\"KanjiFlashCardFront_wrapper-grade-5__1oaBz\",\"wrapper-grade-6\":\"KanjiFlashCardFront_wrapper-grade-6__1qmey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconWrapper\":\"BasicsFlashCardFront_iconWrapper__1K9TQ\",\"icon\":\"BasicsFlashCardFront_icon__1xvbq\",\"name\":\"BasicsFlashCardFront_name__1pdCk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"romaji\":\"RomajiDisplay_romaji__18tU4\",\"parenthesis\":\"RomajiDisplay_parenthesis__ukrk_\",\"wrapper\":\"RomajiDisplay_wrapper__1PGNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"QuantityField_description__oXzwI\",\"input\":\"QuantityField_input__1dkpe\",\"icon\":\"QuantityField_icon__SYQ8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanjiSettingsMenu_wrapper__aAZn1\",\"heading\":\"KanjiSettingsMenu_heading__2kABA\",\"leftColumn\":\"KanjiSettingsMenu_leftColumn__3dtIl\",\"rightColumn\":\"KanjiSettingsMenu_rightColumn__2gp8-\",\"playButton\":\"KanjiSettingsMenu_playButton__3Z-Xh\",\"settingsButton\":\"KanjiSettingsMenu_settingsButton__2mnB2\",\"desc\":\"KanjiSettingsMenu_desc__1cZyK\",\"randomise\":\"KanjiSettingsMenu_randomise__2OK96\",\"AnimatedGradient\":\"KanjiSettingsMenu_AnimatedGradient__1WmBS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__q4KF6\",\"results\":\"Search_results__E6MEU\",\"search\":\"Search_search__1Z9xu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notSelected\":\"KanaQuantityButton_notSelected__1Thnt\",\"selected\":\"KanaQuantityButton_selected__2Duub\",\"name\":\"KanaQuantityButton_name__1DE9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kana\":\"KanaCarousel_kana__1Ap-l\",\"romaji\":\"KanaCarousel_romaji__zAmBO\",\"animate\":\"KanaCarousel_animate__3AJlw\",\"fade\":\"KanaCarousel_fade__fTI2L\",\"wrapper\":\"KanaCarousel_wrapper__2Gn3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GameSettingsMenu_wrapper__19yb8\",\"header\":\"GameSettingsMenu_header__PCp-z\",\"footer\":\"GameSettingsMenu_footer__2bb6v\",\"title\":\"GameSettingsMenu_title__3paYN\",\"titleText\":\"GameSettingsMenu_titleText__2xmUX\",\"label\":\"GameSettingsMenu_label__30zT6\",\"button\":\"GameSettingsMenu_button__1PIvs\",\"buttonText\":\"GameSettingsMenu_buttonText__1q2Kx\",\"pane\":\"GameSettingsMenu_pane__jAV2z\",\"rule\":\"GameSettingsMenu_rule__3eK20\",\"navIcon\":\"GameSettingsMenu_navIcon__1k7lj\",\"questionIcon\":\"GameSettingsMenu_questionIcon__2fhYr\",\"livesIcon\":\"GameSettingsMenu_livesIcon__3DVwg\",\"hintsIcon\":\"GameSettingsMenu_hintsIcon__2Nn6n\",\"timeIcon\":\"GameSettingsMenu_timeIcon__26Eji\",\"noGuttersLeft\":\"GameSettingsMenu_noGuttersLeft__1jbaC\",\"noGuttersRight\":\"GameSettingsMenu_noGuttersRight__27kz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"SessionProgressBar_bar__2RARV\",\"default\":\"SessionProgressBar_default__2FVzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SkipButton_button__3cht-\",\"disabled\":\"SkipButton_disabled__3iMYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextQuestion_input__10ENG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aka\":\"QuestionBanner_aka__3xeve\",\"wrapper\":\"QuestionBanner_wrapper__2xfW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ScrollableContainer_container__1SrZN\",\"hideScroll\":\"ScrollableContainer_hideScroll__2RQ27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanaFlashCardFront_wrapper__2I9ml\",\"kana\":\"KanaFlashCardFront_kana__2MIfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanaFlashCardBack_wrapper__32VsJ\",\"romaji\":\"KanaFlashCardBack_romaji__3bSyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"Inspectable_white__WhPk2\",\"black\":\"Inspectable_black__2NUzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanjiReadingDisplay_wrapper__1QKnW\",\"reading\":\"KanjiReadingDisplay_reading__2JshH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"KanjiMeaningDisplay_icon__n-nLx\",\"meanings\":\"KanjiMeaningDisplay_meanings__Vwz3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"innerWrapper\":\"SentenceStructureFlashCardFront_innerWrapper__20_Rw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"GameTypeMenuDropdownOption_text__2E5Gs\",\"icon\":\"GameTypeMenuDropdownOption_icon__2LBHx\",\"item\":\"GameTypeMenuDropdownOption_item__3leaJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputGroup\":\"SearchField_inputGroup__357tN\",\"input\":\"SearchField_input__1XilS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchTag_wrapper__2iZ3v\",\"active\":\"SearchTag_active__3C3rU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"LearnableFieldSelector_menu__35Rd9\",\"icon\":\"LearnableFieldSelector_icon__EImCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"KanaGrid_grid__p4weY\",\"noResults\":\"KanaGrid_noResults__8L5gb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"QuitButton_icon__1ovW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__4US16\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"QuestionSettingsForm_formWrapper__2Uyyo\",\"section\":\"QuestionSettingsForm_section__2Umet\",\"description\":\"QuestionSettingsForm_description__3y1hw\",\"leadingDescription\":\"QuestionSettingsForm_leadingDescription__1lRJz\",\"descriptionWrapper\":\"QuestionSettingsForm_descriptionWrapper__2shoS\",\"heading\":\"QuestionSettingsForm_heading__YSW2t\",\"check\":\"QuestionSettingsForm_check__2h4IY\",\"cardsIcon\":\"QuestionSettingsForm_cardsIcon__2EmSr\",\"noGuttersLeft\":\"QuestionSettingsForm_noGuttersLeft__18LFq\",\"noGuttersRight\":\"QuestionSettingsForm_noGuttersRight__29s4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FlashCardFront_wrapper__2UKYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FlashCardResetButton_button__34U0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"NumbersFlashCardFront_value__2Du1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonColumnRight\":\"Learn_buttonColumnRight__3d6Do\",\"buttonColumnLeft\":\"Learn_buttonColumnLeft__3FDfh\",\"innerWrapper\":\"Learn_innerWrapper__3bMAe\",\"next\":\"Learn_next__1r0LB\",\"showRomaji\":\"Learn_showRomaji__2Z5Nn\",\"rememberedButton\":\"Learn_rememberedButton__3S8uE\",\"forgottenButton\":\"Learn_forgottenButton__WNWzX\",\"col\":\"Learn_col__2wGBi\",\"buttonWrapper\":\"Learn_buttonWrapper__33_KA\",\"progress\":\"Learn_progress__khGDC\",\"wrapper\":\"Learn_wrapper__1ha7L\",\"cardWrapper\":\"Learn_cardWrapper__2VUAh\",\"header\":\"Learn_header__1j35m\",\"remaining\":\"Learn_remaining__qiYJi\",\"quit\":\"Learn_quit__SVkpo\",\"counter\":\"Learn_counter__2KRlm\",\"remembered\":\"Learn_remembered__1OJmG\",\"forgotten\":\"Learn_forgotten__15pc5\",\"rememberedIcon\":\"Learn_rememberedIcon__1WfiC\",\"forgottenIcon\":\"Learn_forgottenIcon__nv0GA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"ToggleSwitch_switch__1Pl_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"MenuDescription_desc__Fm2O1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"StartButton_button__1JVd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LearnableInfo_wrapper__2R6Ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"GameResultScreen_header__3NH1H\",\"title\":\"GameResultScreen_title__2cqmc\",\"score\":\"GameResultScreen_score__27P_c\",\"wrapper\":\"GameResultScreen_wrapper__gaK0r\",\"finish\":\"GameResultScreen_finish__2R-_U\",\"mistakes\":\"GameResultScreen_mistakes__37uGl\",\"titleIcon\":\"GameResultScreen_titleIcon__2FZbY\",\"icon\":\"GameResultScreen_icon__2O1Uh\",\"award\":\"GameResultScreen_award__31NI4\",\"heart\":\"GameResultScreen_heart__1sdzi\",\"duration\":\"GameResultScreen_duration__1pZB1\",\"hint\":\"GameResultScreen_hint__2tLnI\",\"name\":\"GameResultScreen_name__wZ_ml\",\"attribute\":\"GameResultScreen_attribute__LcSUW\",\"body\":\"GameResultScreen_body__3d8se\",\"summary\":\"GameResultScreen_summary__1ztR3\",\"footer\":\"GameResultScreen_footer__3c0Va\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ControlsMenu_icon__3Lw3z\",\"linkText\":\"ControlsMenu_linkText__3xCCQ\",\"navbar\":\"ControlsMenu_navbar__31lgO\",\"nav\":\"ControlsMenu_nav__28GUw\",\"navLink\":\"ControlsMenu_navLink__114QC\",\"row\":\"ControlsMenu_row__13R8c\",\"innerWrapper\":\"ControlsMenu_innerWrapper__9jf_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainMenuPage_wrapper__pVX88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"KanaTypeIndicator_icon__13uaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ParallaxBackground_background__2WOuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Main_switch__1Pflp\",\"wrapper\":\"Main_wrapper__dIwvZ\",\"wrapperFullScreen\":\"Main_wrapperFullScreen__3wGg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"LandingPage_heading__39RGL\",\"description\":\"LandingPage_description__1HinN\",\"descriptionWrapper\":\"LandingPage_descriptionWrapper__M6Rl7\",\"button\":\"LandingPage_button__4vN6b\",\"buttonIcon\":\"LandingPage_buttonIcon__1baTC\",\"buttonText\":\"LandingPage_buttonText__13Cuc\",\"buttonWrapper\":\"LandingPage_buttonWrapper__1qt68\",\"carouselDisplay\":\"LandingPage_carouselDisplay__3D78X\",\"japanese\":\"LandingPage_japanese__a0c_8\",\"inspectable\":\"LandingPage_inspectable__27Uqq\",\"wrapper\":\"LandingPage_wrapper__15bfP\",\"header\":\"LandingPage_header__eCDdF\",\"content\":\"LandingPage_content__2mJ-m\",\"buttonContainer\":\"LandingPage_buttonContainer__3-6Uo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LearnJapanese_wrapper__3CGpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"MemoryGame_question__3_os4\",\"fadeIn\":\"MemoryGame_fadeIn__KA47o\",\"header\":\"MemoryGame_header__38USI\",\"questionWrapper\":\"MemoryGame_questionWrapper__2p7rz\",\"questionWrapperColumn\":\"MemoryGame_questionWrapperColumn__-k0-i\",\"footerLeftCol\":\"MemoryGame_footerLeftCol__1aQMU\",\"footerRightCol\":\"MemoryGame_footerRightCol__3ZcGB\",\"buttonGroup\":\"MemoryGame_buttonGroup__a2vRE\",\"footer\":\"MemoryGame_footer__1Rmlj\",\"progress\":\"MemoryGame_progress__10CFB\",\"quit\":\"MemoryGame_quit__3mjBW\",\"lives\":\"MemoryGame_lives__39IiV\",\"wrapper\":\"MemoryGame_wrapper__3wcAm\",\"submit\":\"MemoryGame_submit__HBPfZ\",\"hint\":\"MemoryGame_hint__1O91i\",\"skip\":\"MemoryGame_skip__1lVxy\",\"volume\":\"MemoryGame_volume__Ovqb1\",\"timer\":\"MemoryGame_timer__2nFMU\",\"score\":\"MemoryGame_score__14FGP\",\"romajiDisplay\":\"MemoryGame_romajiDisplay__20Bpo\",\"lifeDisplayContainer\":\"MemoryGame_lifeDisplayContainer__1qOYs\",\"quitWrapper\":\"MemoryGame_quitWrapper__1ZCH6\",\"flashRed\":\"MemoryGame_flashRed__1jNMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"SentenceStructureForm_description__NvvwP\",\"disabled\":\"SentenceStructureForm_disabled__1PnIX\",\"switch\":\"SentenceStructureForm_switch__1ZsQd\",\"quantity\":\"SentenceStructureForm_quantity__31lAA\",\"quantityWrapper\":\"SentenceStructureForm_quantityWrapper__17S9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"DataSettingsMenu_card__1BF-h\",\"scrollable\":\"DataSettingsMenu_scrollable__pK_jZ\",\"icon\":\"DataSettingsMenu_icon__rpc-i\",\"button\":\"DataSettingsMenu_button__3f-kv\",\"footer\":\"DataSettingsMenu_footer__32TAL\",\"title\":\"DataSettingsMenu_title__OrQTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanjiFlashCardBack_wrapper__5hNly\",\"grade\":\"KanjiFlashCardBack_grade__14QhR\",\"display\":\"KanjiFlashCardBack_display__3f-MT\",\"text\":\"KanjiFlashCardBack_text__1cHEY\",\"wrapper-grade-1\":\"KanjiFlashCardBack_wrapper-grade-1__3APo8\",\"wrapper-grade-2\":\"KanjiFlashCardBack_wrapper-grade-2__HFfrH\",\"wrapper-grade-3\":\"KanjiFlashCardBack_wrapper-grade-3__3xqYK\",\"wrapper-grade-4\":\"KanjiFlashCardBack_wrapper-grade-4__a4FYt\",\"wrapper-grade-5\":\"KanjiFlashCardBack_wrapper-grade-5__3tfui\",\"wrapper-grade-6\":\"KanjiFlashCardBack_wrapper-grade-6__2hd1-\",\"label\":\"KanjiFlashCardBack_label__1Y6jw\",\"header\":\"KanjiFlashCardBack_header__2-Ecd\",\"body\":\"KanjiFlashCardBack_body__1i24g\",\"footer\":\"KanjiFlashCardBack_footer__lnPq4\",\"back\":\"KanjiFlashCardBack_back__3H3WB\",\"meaningWrapper\":\"KanjiFlashCardBack_meaningWrapper__1jNCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KanaDisplay_wrapper__1ua0j\",\"blur\":\"KanaDisplay_blur__3lWsw\",\"diagraphBlur\":\"KanaDisplay_diagraphBlur__2QmJc\",\"kana\":\"KanaDisplay_kana__3UzDe\",\"diagraphLeft\":\"KanaDisplay_diagraphLeft__Ep7oQ\",\"diagraphRight\":\"KanaDisplay_diagraphRight__36Bd_\",\"redKana\":\"KanaDisplay_redKana__1M70q\",\"flashRed\":\"KanaDisplay_flashRed__3xY4w\",\"redDiagraph\":\"KanaDisplay_redDiagraph__kXTbD\",\"index\":\"KanaDisplay_index__1OX5i\",\"clickable\":\"KanaDisplay_clickable__3xH6c\",\"fadeIn\":\"KanaDisplay_fadeIn__UiCgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MatchQuestion_wrapper__ZREWA\",\"question\":\"MatchQuestion_question__3LsgJ\",\"answer\":\"MatchQuestion_answer__2l-nR\",\"selected\":\"MatchQuestion_selected__1X-ZR\",\"matched\":\"MatchQuestion_matched__1ELKp\",\"row\":\"MatchQuestion_row__3WGTc\",\"cursor\":\"MatchQuestion_cursor__29OQC\",\"connector\":\"MatchQuestion_connector__321WF\",\"display\":\"MatchQuestion_display__2-pyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TimeSettingsForm_formWrapper__3_mAe\",\"section\":\"TimeSettingsForm_section__3hkto\",\"description\":\"TimeSettingsForm_description__1yvmT\",\"leadingDescription\":\"TimeSettingsForm_leadingDescription__2vuL6\",\"descriptionWrapper\":\"TimeSettingsForm_descriptionWrapper__2aCmi\",\"heading\":\"TimeSettingsForm_heading__1EHN1\",\"check\":\"TimeSettingsForm_check__1ZRjh\",\"active\":\"TimeSettingsForm_active__aTP4B\",\"inactive\":\"TimeSettingsForm_inactive__1Cmvo\"};","export enum GameFinishReason {\n    NO_LIVES_REMAINING = \"Oh no! You ran out of lives!\",\n    NO_TIME_REMAINING = \"Oh no! You ran out of time!\",\n    EXHAUSTED_QUESTIONS = \"Congratulations, you won!\",\n    QUIT = \"Oh no! You quit!\"\n}\n","import React, { Component } from \"react\";\nimport { faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../styles/sass/components/game/Timer.module.scss\";\n\nexport interface TimerProps {\n    end?: number;\n    className?: string;\n    pausable?: boolean;\n    onPaused?: () => void;\n}\n\ninterface TimerState {\n    start: number;\n    current: number;\n    interval: any;\n    paused: boolean;\n    isStopped: boolean;\n}\n\nclass Timer extends Component<TimerProps, TimerState> {\n    constructor(props: TimerProps | Readonly<TimerProps>) {\n        super(props);\n        this.state = {\n            start: Date.now(),\n            current: Date.now(),\n            interval: undefined,\n            paused: false,\n            isStopped: false\n        }\n    }\n\n    componentDidMount() {\n        this.start();\n    }\n\n    componentWillUnmount() {\n        this.stop();\n    }\n\n    render() {\n        const { paused, isStopped } = this.state;\n        const { className, pausable } = this.props;\n\n        return (\n            <div className={[className, styles.wrapper].join(\" \")}>\n                {pausable && !isStopped && (\n                    <FontAwesomeIcon\n                        size=\"sm\"\n                        fixedWidth\n                        className={styles.icon}\n                        title={paused ? \"Play\" : \"Pause\"}\n                        icon={paused ? faPlay : faPause}\n                        onClick={paused ? this.play : this.pause}\n                    />\n                )}\n\n                <span className={styles.time}>\n                    {this.formatTimeElapsed()}\n                </span>\n            </div>\n        );\n    }\n\n    stop = () => {\n        this.setState({ paused: true, isStopped: true });\n        clearInterval(this.state.interval);\n    }\n\n    restart = () => {\n        this.setState({\n            start: Date.now(),\n            current: Date.now(),\n            interval: undefined,\n            paused: false,\n            isStopped: false\n        }, () => this.start());\n    }\n\n    getCurrentTime = () => this.formatTimeElapsed();\n\n    start = () => {\n        this.setState({ interval: setInterval(() => this.tick(), 1000), paused: false, isStopped: false });\n    }\n\n    pause = () => {\n        this.onChangePausedState();\n        this.setState({ paused: true });\n        clearInterval(this.state.interval);\n    }\n\n    private play = () => {\n        this.onChangePausedState();\n        this.setState({ interval: setInterval(() => this.tick(), 1000), paused: false });\n    }\n\n    private tick = () => this.setState({ current: this.state.current + 1000 });\n\n    private onChangePausedState = () => {\n        if (this.props.onPaused) this.props.onPaused();\n    }\n\n    private formatTimeElapsed(): string {\n        const { start, current } = this.state;\n        const delta = current - start;\n        const date = new Date(1000 * Math.round(delta / 1000));\n        const hours = date.getUTCHours();\n        return (hours ? hours + \":\" : \"\") + this.pad(date.getUTCMinutes()) + \":\" + this.pad(date.getUTCSeconds());\n    }\n\n    private pad = (value: number) => (\"0\" + value).slice(-2);\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport { faHeart, faHeartBroken, faInfinity } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../styles/sass/components/game/LifeDisplay.module.scss\";\n\nexport interface LifeDisplayProps {\n    enabled: boolean;\n    hearts: number;\n    className?: string;\n}\n\nclass LifeDisplay extends Component<LifeDisplayProps> {\n    render() {\n        const { hearts, enabled, className } = this.props;\n        return (\n            <div className={[className, styles.wrapper].join(\" \")}>\n                <FontAwesomeIcon\n                    icon={enabled && hearts === 1 ? faHeartBroken : faHeart}\n                    title=\"Lives\"\n                    className={styles.icon}\n                />\n\n                <span className={styles.quantity}>\n                    {!enabled ?\n                        <FontAwesomeIcon className={styles.infinite} icon={faInfinity} title=\"Infinite\"/>\n                        : hearts\n                    }\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default LifeDisplay;","import React, { Component } from \"react\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../../styles/sass/components/ui/buttons/QuitButton.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface QuitButtonProps {\n    onClick: () => void;\n    className?: string;\n}\n\nclass QuitButton extends Component<QuitButtonProps> {\n    render() {\n        return (\n            <FontAwesomeIcon\n                icon={faTimes}\n                className={[styles.icon, this.props.className].join(\" \")}\n                onClick={this.props.onClick}\n                title=\"Quit\"\n            />\n        );\n    }\n}\n\nexport default QuitButton;","export enum QuestionType {\n    TEXT = \"Text\",\n    CHOICE = \"Multiple Choice\",\n    AUDIO = \"Audio\",\n    MATCH = \"Match\",\n    RANDOM = \"Random\"\n}\n","import { Component } from \"react\";\n\nexport interface CountDownProps {\n    value: number;\n    className?: string;\n    onFinish: () => void;\n}\n\ninterface CountDownState {\n    remaining: number;\n    interval: any;\n}\n\nclass CountDown extends Component<CountDownProps, CountDownState> {\n    constructor(props: CountDownProps | Readonly<CountDownProps>) {\n        super(props);\n        this.state = {\n            remaining: this.props.value,\n            interval: undefined\n        }\n    }\n\n    componentDidMount() {\n        this.start();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.interval);\n    }\n\n    render() {\n        return (\n            <span className={this.props.className} title=\"Time Remaining\">\n                {this.state.remaining}\n            </span>\n        );\n    }\n\n    reset = () => {\n        clearInterval(this.state.interval);\n        this.setState({ remaining: this.props.value, interval: undefined }, () => this.start());\n    }\n\n    stop = () => {\n        clearInterval(this.state.interval);\n        this.setState({ interval: undefined });\n    }\n\n    private decrement = () => {\n        const { remaining } = this.state;\n        if (remaining === 0) {\n            this.props.onFinish();\n            this.reset();\n        } else {\n            this.setState({ remaining: remaining - 1 });\n        }\n    }\n\n    private start = () => this.setState({ interval: setInterval(() => this.decrement(), 1000 )});\n\n}\n\nexport default CountDown;","export enum Viewport {\n    PHONE,\n    TABLET,\n    DESKTOP\n}\n\nexport default class Viewports {\n    public static fromWidth(width: number | null): Viewport {\n        if (!width) return Viewport.PHONE;\n\n        if (width < 768) {\n            return Viewport.PHONE;\n        } else if (width < 1024) {\n            return Viewport.TABLET;\n        } else {\n            return Viewport.DESKTOP;\n        }\n    }\n\n    public static fromFlashCardWidth(width: number | null): Viewport {\n        if (width === 450) {\n            return Viewport.PHONE;\n        } else if (width === 550) {\n            return Viewport.TABLET;\n        } else if (width === 650) {\n            return Viewport.DESKTOP;\n        } else {\n            return Viewport.PHONE;\n        }\n    }\n}","import React, { Component } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/SessionProgressBar.module.scss\";\n\ninterface SessionProgressBarProps {\n    inProgress: boolean;\n    quantity: number;\n    remaining: number;\n    className?: string;\n    streak?: number;\n}\n\nclass SessionProgressBar extends Component<SessionProgressBarProps> {\n    render() {\n        const { inProgress, quantity, remaining, className, streak } = this.props\n        const barClass = className ? className : styles.bar;\n        return (\n            <ProgressBar\n                animated={inProgress}\n                className={[barClass, styles.default].join(\" \")}\n                now={((quantity - remaining) / quantity) * 100}\n                title={(quantity - remaining) + \"/\" + quantity}\n                variant={remaining === 0 ? \"success\" : (streak ?? 0) >= 5 ? \"warning\" : undefined}\n            />\n        );\n    }\n}\n\nexport default SessionProgressBar;","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../../styles/sass/components/ui/buttons/SubmitButton.module.scss\";\n\ninterface SubmitButtonProps {\n    disabled?: boolean;\n    onClick: () => void;\n    isRestart?: boolean;\n    className?: string;\n}\n\nclass SubmitButton extends Component<SubmitButtonProps> {\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeySelection);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeySelection);\n    }\n\n    render() {\n        const { disabled, isRestart, onClick, className } = this.props;\n        return (\n            <Button\n                onClick={onClick}\n                disabled={disabled}\n                type=\"button\"\n                variant={!isRestart ? \"success\" : \"info\"}\n                className={[styles.button, className].join(\" \")}\n            >\n                {!isRestart ? \"Check\" : <><FontAwesomeIcon icon={faRedoAlt}/> Restart</>}\n            </Button>\n        );\n    }\n\n    private handleKeySelection = (e: KeyboardEvent) => {\n        const { disabled, onClick } = this.props;\n        if (!disabled && e.key === 'Enter') {\n            onClick();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n}\n\nexport default SubmitButton;\n","import { Component } from \"react\";\nimport { Popover } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/PopOver.module.scss\";\n\nexport interface PopOverProps {\n    title: string;\n    text: Element | JSX.Element | string;\n    className?: string;\n}\n\nclass PopOver extends Component<PopOverProps> {\n    render() {\n        const { title, text, className, ...rest } = this.props;\n\n        return (\n            <Popover id=\"popover\" className={[styles.popover, className].join(\" \")} {...rest}>\n                <Popover.Title as=\"h3\" className={styles.title}>{title}</Popover.Title>\n                <Popover.Content className={styles.text}>{text}</Popover.Content>\n            </Popover>\n        );\n    }\n}\n\nexport default PopOver;\n","import { Component } from \"react\";\nimport styles from \"../../styles/sass/components/ui/RevealableText.module.scss\";\n\nexport interface RevealableTextProps {\n    value: string;\n    disabled: boolean;\n    className?: string;\n    onReveal?: () => void;\n}\n\ninterface RevealableTextState {\n    revealed: boolean;\n}\n\nclass RevealableText extends Component<RevealableTextProps, RevealableTextState> {\n\n    constructor(props: Readonly<RevealableTextProps> | RevealableTextProps) {\n        super(props);\n        this.state = {\n            revealed: false\n        }\n    }\n\n    render() {\n        const { value, disabled, className } = this.props;\n        const { revealed } = this.state;\n\n        const defaultClass = disabled ? styles.plain : revealed ? styles.unblur : styles.blur;\n\n        return (\n            <div className={styles.wrapper}>\n                {!revealed && !disabled && (\n                    <p className={styles.reveal} onClick={this.handleClick}>\n                        Click to Reveal\n                    </p>\n                )}\n\n                <p className={[defaultClass, className].join(\" \")}>\n                    {value}\n                </p>\n            </div>\n        );\n    }\n\n    private handleClick = () => {\n        this.setState(({ revealed: true }));\n        this.props.onReveal?.();\n    }\n}\n\nexport default RevealableText;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLightbulb as solidBulb } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLightbulb as regularBulb } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button, OverlayTrigger } from \"react-bootstrap\";\nimport PopOver from \"../ui/PopOver\";\nimport Viewports, { Viewport } from \"../../utility/Viewports\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport styles from \"../../styles/sass/components/game/HintButton.module.scss\";\nimport RevealableText from \"../ui/RevealableText\";\n\nexport interface HintButtonProps {\n    data: Learnable;\n    quantity: number;\n    remaining: number;\n    infinite: boolean;\n    disabled?: boolean;\n    className?: string;\n    onUse?: () => void;\n}\n\ninterface HintButtonState {\n    viewport: Viewport;\n    isLastHint: boolean;\n    revealed: boolean;\n}\n\nclass HintButton extends Component<HintButtonProps, HintButtonState> {\n\n    constructor(props: HintButtonProps | Readonly<HintButtonProps>) {\n        super(props);\n        this.state = {\n            viewport: Viewport.PHONE,\n            isLastHint: false,\n            revealed: false\n        }\n    }\n\n    componentDidMount() {\n        this.updateViewport();\n        window.addEventListener(\"resize\", this.updateViewport);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateViewport);\n    }\n\n    render() {\n        const { disabled, className, remaining } = this.props;\n        const { viewport, revealed } = this.state;\n\n        const overlay = (\n            <PopOver\n                title={this.getTitle()}\n                text={\n                    <RevealableText\n                        value={this.getContent()}\n                        disabled={revealed || remaining <= 0}\n                        className={styles.hint}\n                        onReveal={this.onHintUse}\n                    />\n                }\n            />\n        );\n\n        const defaultClassName = remaining > 0 ? styles.button : styles.disabled;\n        const buttonClasses = [defaultClassName, className].join(\" \");\n        const icon = remaining > 0 ? solidBulb : regularBulb\n\n        return (\n            <OverlayTrigger trigger=\"click\" placement=\"top\" rootClose={true} overlay={overlay}>\n                <Button\n                    title={!disabled ? \"Get a Hint\" : \"Hints are disabled.\"}\n                    variant=\"warning\"\n                    className={buttonClasses}\n                    style={{ width: viewport === Viewport.PHONE ? \"50px\" : \"auto\"}}\n                >\n                    <FontAwesomeIcon icon={icon} className={styles.icon}/>\n                    {viewport !== Viewport.PHONE && <span className={styles.text}>HINT</span>}\n                </Button>\n            </OverlayTrigger>\n        );\n    }\n\n    private getTitle = () => {\n        const { revealed } = this.state;\n        const { quantity, remaining, infinite, disabled } = this.props;\n\n        if (disabled) {\n            return \"Hints are disabled\"\n        }\n\n        if (remaining === 1 && revealed) {\n            return \"This is your last hint!\"\n        }\n\n        if (remaining > 0) {\n            if (infinite) {\n                return \"Need a hint?\"\n            }\n\n            return \"Need a hint? (\" + this.getRemaining() + \"/\" + quantity + \" remaining)\";\n        }\n        return \"Sorry! You're out of hints.\";\n    }\n\n    private getContent = () => {\n        const { data, quantity, remaining, disabled } = this.props;\n\n        if (disabled) {\n            return \"You'll have to choose a preset with hints enabled or customise the game settings.\";\n        }\n\n        if (remaining <= 0) {\n            return \"You've already used your \" + quantity + \" hints.\";\n        }\n\n        return data.getHint();\n    }\n\n    private getRemaining = () => {\n        const { remaining } = this.props;\n        const { revealed } = this.state;\n\n        if (revealed) {\n            return remaining - 1;\n        }\n\n        return remaining;\n    }\n\n    private updateViewport = () => {\n        this.setState({ viewport: Viewports.fromWidth(window.innerWidth) });\n    }\n\n    private onHintUse = () => {\n        const { revealed } = this.state;\n        const { onUse } = this.props;\n\n        if (!revealed) {\n            this.setState({ revealed: true });\n            onUse?.();\n        }\n    }\n}\n\nexport default HintButton;\n","import { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { faForward } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SizeMeProps, withSize } from \"react-sizeme\";\nimport styles from \"../../../styles/sass/components/ui/buttons/SkipButton.module.scss\";\n\nexport interface SkipButtonProps extends SizeMeProps {\n    disabled?: boolean;\n    className?: string;\n    onClick: () => void;\n}\n\nclass SkipButton extends Component<SkipButtonProps> {\n    render() {\n        const { disabled, className, onClick, size } = this.props;\n        const defaultClass = disabled ? styles.disabled : styles.button;\n        return (\n            <Button className={[defaultClass, className].join(\" \")} onClick={onClick} disabled={disabled} variant=\"danger\">\n                {(size?.width ?? -1) > 105 && <FontAwesomeIcon icon={faForward} data-testid=\"icon\"/>}\n                {' Skip'}\n            </Button>\n        );\n    }\n}\n\nexport default withSize()(SkipButton);\n","import { Component } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/ConfirmModal.module.scss\";\n\nexport interface ConfirmModalProps {\n    title: string;\n    body?: string;\n    onConfirm: () => void;\n    onDismiss?: () => void;\n}\n\ninterface ConfirmModalState {\n    show: boolean;\n}\n\nclass ConfirmModal extends Component<ConfirmModalProps, ConfirmModalState> {\n    constructor(props: Readonly<ConfirmModalProps> | ConfirmModalProps) {\n        super(props);\n        this.state = {\n            show: true\n        }\n    }\n\n    render() {\n        const { title, body, onDismiss } = this.props;\n        const { show } = this.state;\n        return (\n            <Modal contentClassName={styles.modal} show={show} centered onHide={onDismiss} size=\"sm\" backdrop=\"static\">\n                <Modal.Header closeButton className={styles.header}>\n                    <span className={styles.title}>{title}</span>\n                </Modal.Header>\n\n                <Modal.Body className={styles.body}>\n                    {body}\n                </Modal.Body>\n\n                <Modal.Footer className={styles.footer}>\n                    <Button variant=\"success\" onClick={this.handleYes} className={styles.yes}>\n                        Yes\n                    </Button>\n                    <Button variant=\"danger\" onClick={this.handleNo} className={styles.no}>\n                        No\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    private handleYes = () => {\n        this.setState({ show: false });\n        this.props.onConfirm();\n    }\n\n    private handleNo = () => {\n        this.setState({ show: false });\n        this.props?.onDismiss?.();\n    }\n}\n\nexport default ConfirmModal;","export class Environment {\n    static variable = (name: string): string => {\n        //Replace spaces with underscores.\n        const underscores = name.replaceAll(\" \", \"_\");\n\n        //Remove single quotes\n        const special = underscores.replaceAll(\"'\", \"\");\n\n        //Replace diacritical marks with their regular counterparts.\n        const diacritics = special.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n\n        //Convert to uppercase.\n        const casing = diacritics.toUpperCase();\n\n        //Prepend 'REACT_APP'.\n        const variable = \"REACT_APP_\" + casing;\n\n        //console.log(\"Reading \" + variable + \" from \" + process.env.NODE_ENV);\n        return process.env[variable] as string;\n    }\n}","import React, { Component } from \"react\";\nimport styles from \"../../../styles/sass/components/ui/display/ScoreDisplay.module.scss\";\n\nexport interface ScoreDisplayProps {\n    value: number;\n    streak: number;\n    className?: string;\n}\n\ninterface ScoreDisplayState {\n    showingStreak: boolean;\n}\n\nclass ScoreDisplay extends Component<ScoreDisplayProps, ScoreDisplayState> {\n\n    constructor(props: Readonly<ScoreDisplayProps> | ScoreDisplayProps) {\n        super(props);\n\n        this.state = {\n            showingStreak: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ showingStreak: this.hasStreakMilestone() });\n    }\n\n    componentDidUpdate(prevProps: Readonly<ScoreDisplayProps>) {\n        if (prevProps.streak !==  this.props.streak) {\n            this.setState({ showingStreak: this.hasStreakMilestone() });\n        }\n    }\n\n    render() {\n        const { value, className, streak } = this.props;\n        const { showingStreak } = this.state;\n\n        return (\n            <div className={[styles.wrapper, className].join(\" \")}>\n                <span className={styles.value} title=\"Score\">{value}</span>\n                {this.hasStreakMilestone() && showingStreak &&\n                    <span className={styles.streak} onAnimationEnd={this.onStreakAnimationEnd}>\n                        {streak + \" streak!\"}\n                    </span>\n                }\n            </div>\n        );\n    }\n\n    private onStreakAnimationEnd = () => this.setState({ showingStreak: false });\n\n    private hasStreakMilestone = (): boolean => {\n        const { streak } = this.props;\n        return streak !== 0 && streak % 5 === 0;\n    }\n}\n\nexport default ScoreDisplay;\n","import { Filter } from \"../Filter\";\nimport { Learnable } from \"../../types/learn/Learnable\";\n\nexport default class ExclusionFilter implements Filter<Learnable> {\n\n    private readonly exclusion: Learnable;\n\n    constructor(exclusion: Learnable) {\n        this.exclusion = exclusion;\n    }\n\n    apply(data: Learnable[]): Learnable[] {\n        return data.filter(item => !item.equals(this.exclusion));\n    }\n}","export class Numbers {\n    static randomInt = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1) + min);\n}","import { Numbers } from \"./Numbers\";\n\nexport default class Arrays {\n    /**\n     * Calculates the difference between two arrays.\n     * @return An array of all element deltas.\n     */\n    static subtracting<T>(arr1: T[], arr2: T[]): T[] {\n        if (arr1.length > arr2.length) {\n            return arr1.filter(element => arr2.indexOf(element) < 0);\n        } else {\n            return arr2.filter(element => arr1.indexOf(element) < 0);\n        }\n    }\n\n    static sum(array: number[]): number {\n        return array.reduce((a, b) => a + b, 0);\n    }\n    /**\n     * Creates a new array by spreading all the elements into another.\n     * @return a copy of the given array.\n     */\n    public static copy<T>(array: T[]): T[] {\n        return [...array];\n    }\n\n    /**\n     * Checks if the two arrays are equals.\n     * Only works with array of primitive types.\n     * @return true if both arrays contain the same elements, else false.\n     */\n    public static areEqual(a: any[], b: any[]): boolean {\n        return JSON.stringify(a.sort()) === JSON.stringify(b.sort());\n    }\n\n    /**\n     * Shuffles the order of the elements in the given array.\n     * @return A copy of the array with shuffled elements.\n     */\n    public static shuffle<T>(array: T[]): T[] {\n        const shuffled = [...array];\n        for (let i = shuffled.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        return shuffled;\n    }\n\n    /**\n     * Returns the largest value in the given array.\n     * @param array An array of numbers.\n     * @return The largest value.\n     */\n    public static max<T extends number>(array: T[]): T {\n        return array.reduce((a: T, b: T) => a > b ? a : b);\n    }\n\n    /**\n     * Removes an element from an array.\n     * @param array The array to remove from.\n     * @param value The value of the element to remove.\n     * @return The mutated array.\n     */\n    static remove<T>(array: T[], value: T): T[] {\n        const index = array.indexOf(value);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return array;\n    }\n\n    /**\n     * Generates n random elements from an array.\n     * @param array The array to pick from.\n     * @param quantity The number of elements to return.\n     * @return An array of all randomly selected elements.\n     */\n    static getRandomElements<T>(array: T[], quantity: number = 1): T[] {\n        let elements = [];\n        let copy = this.copy(array);\n        for (let i = 0; i < quantity; i++) {\n            const index = Arrays.getRandomArrayIndex(copy);\n            const element = copy[index];\n            copy = this.remove(copy, element)\n            elements.push(element);\n        }\n        return elements.filter(it => !!it);\n    }\n\n    /**\n     * Generates a 2-Dimensional array of arrays of the specified length;\n     * @param array The array to split.\n     * @param quantity The size of the arrays.\n     */\n    static chunked<T>(array: T[], quantity: number): T[][] {\n        return array.reduce((resultArray: T[][], item: T, index: number) => {\n            const chunkIndex = Math.floor(index/quantity)\n\n            if(!resultArray[chunkIndex]) {\n                resultArray[chunkIndex] = [] // start a new chunk\n            }\n\n            resultArray[chunkIndex].push(item)\n\n            return resultArray\n        }, []);\n    }\n\n    /**\n     * Filters out duplicate elements.\n     * @param array The array of elements to reduce.\n     * @return array The filtered array containing only unique elements.\n     */\n    static distinct<T>(array: T[]): T[] {\n        return array.filter((value, index, self) => self.indexOf(value) === index);\n    }\n\n    /**\n     * Generates a random index from the given array.\n     * @param array The array to choose an index from.\n     * @return index The integer value of the chosen index.\n     */\n    static getRandomArrayIndex<T>(array: T[]): number {\n        return Numbers.randomInt(0, array.length - 1);\n    }\n\n    /**\n     * Picks a random object from the given array.\n     * @param pool The array of objects to choose from.\n     * @returns tuple A tuple containing the randomly chosen object and the trimmed pool.\n     */\n    static getRandomObject = <T>(pool: T[]): [T, T[]] => {\n        const objects = [...pool];\n        const randomIndex = Arrays.getRandomArrayIndex(objects);\n        const randomObject = objects[randomIndex];\n        objects.splice(randomIndex, 1);\n        return [randomObject, objects];\n    };\n\n    /**\n     * Picks n random object from the given array.\n     * @param pool The array of objects to choose from.\n     * @param quantity The number of objects to randomly choose.\n     * @returns tuple A tuple containing the randomly chosen objects and the remaining pool.\n     */\n    static getRandomObjects = <T>(pool: T[], quantity: number): [T[], T[]] => {\n        const objects = [...pool];\n        let randomObjects = [];\n        for (let i = 0; i < quantity; i++) {\n            const randomIndex = Arrays.getRandomArrayIndex(objects);\n            const randomObject = objects[randomIndex];\n            objects.splice(randomIndex, 1);\n            randomObjects.push(randomObject);\n        }\n        return [randomObjects, objects];\n    };\n}\n","export enum KanaColumn {\n    VOWEL = \"vowel\",\n    K = \"k\",\n    S = \"s\",\n    T = \"t\",\n    N = \"n\",\n    H = \"h\",\n    M = \"m\",\n    Y = \"y\",\n    R = \"r\",\n    W = \"w\",\n    OTHER = \"?\"\n}","import { Component } from \"react\";\nimport { GameQuestionProps } from \"../../components/game/MemoryGame\";\n\nexport default abstract class GameQuestion<P extends GameQuestionProps, S> extends Component<P, S> {\n    abstract isCorrect: () => boolean;\n}","import React, { Component } from 'react';\nimport { Spinner } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/layout/LoadingSpinner.module.scss\";\nimport { Variant } from \"react-bootstrap/types\";\n\nclass LoadingSpinner extends Component<{ active: boolean, className?: string, variant?: Variant }> {\n    render() {\n        const { active, variant, className } = this.props;\n        if (active) {\n            return (\n                <div className={className}>\n                    <Spinner\n                        role=\"status\"\n                        title=\"Loading\"\n                        animation=\"border\"\n                        className={styles.spinner}\n                        variant={variant ?? \"primary\"}\n                    />\n                </div>\n            );\n        }\n        return null;\n    }\n}\n\nexport default LoadingSpinner\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { AppDispatch, RootState } from './store'\n\nexport const useUserDispatch = () => useDispatch<AppDispatch>();\nexport const useUserSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport const useFontDispatch = () => useDispatch<AppDispatch>();\nexport const useFontSelector: TypedUseSelectorHook<RootState> = useSelector\n","import LoadingSpinner from \"../LoadingSpinner\";\nimport React, { useImperativeHandle, useState } from \"react\";\nimport { KanaDisplayStyle } from \"./KanaDisplay\";\nimport { Textfit } from \"@tomplum/react-textfit\";\nimport styles from \"../../../styles/sass/components/ui/display/DynamicDisplay.module.scss\";\nimport { useFontSelector } from \"../../../hooks\";\n\nconst DynamicDisplay = React.forwardRef((props: { value: string, className?: string, style?: KanaDisplayStyle }, ref) => {\n    const [loading, setLoading] = useState(true);\n    const [active, setActive] = useState(false);\n    const selectedFont = useFontSelector(state => state.font.selected);\n\n    useImperativeHandle(ref, () => ({\n        notify: () => setActive(true)\n    }));\n\n    const style = props.style;\n\n    return (\n        <div className={styles.wrapper}>\n            <LoadingSpinner active={loading}/>\n\n            <Textfit\n                min={20}\n                max={600}\n                mode=\"single\"\n                forceSingleModeWidth={false}\n                onReady={() => setLoading(false)}\n                className={[styles.text].concat(style?.container ?? []).join(\" \")}\n            >\n                <span\n                    onAnimationEnd={() => setActive(false)}\n                    style={{ color: style?.character?.color, fontFamily: selectedFont }}\n                    className={[props.className, styles.value, style?.character?.className, active ? styles.active : \"\"].join(\" \")}\n                >\n                    {props.value}\n                </span>\n            </Textfit>\n        </div>\n    );\n});\n\nexport default DynamicDisplay;\n","import React, { useImperativeHandle, useRef } from \"react\";\nimport DynamicDisplay from \"./DynamicDisplay\";\nimport styles from \"../../../styles/sass/components/ui/display/QuestionDisplay.module.scss\";\n\nexport interface QuestionDisplayProps {\n    question: string;\n    blur?: boolean;\n}\n\nconst QuestionDisplay = React.forwardRef((props: { question: string, blur?: boolean }, ref) => {\n\n    //TODO: typeof DynamicDisplay doesn't work for some reason\n    const display = useRef<any>();\n\n    useImperativeHandle(ref, () => ({\n        notifyIncorrect: () => display.current?.notify()\n    }));\n\n    return (\n       <DynamicDisplay\n           ref={display}\n           value={props.question}\n           style={{ container: [styles.display], character: { className: props.blur ? styles.blur : styles.value } }}\n           className={styles.question}\n       />\n    );\n});\n\nexport default QuestionDisplay;\n","import React, { ChangeEvent, Component } from \"react\";\nimport { Form, OverlayTrigger } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { OverlayChildren } from \"react-bootstrap/Overlay\";\nimport styles from \"../../../styles/sass/components/ui/fields/GameInputField.module.scss\";\n\nexport interface GameInputFieldProps {\n    disabled?: boolean;\n    value?: string;\n    placeholder?: string;\n    className?: string;\n    helpPopover: OverlayChildren;\n    onChange?: (e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\n}\n\nclass GameInputField extends Component<GameInputFieldProps> {\n\n    render() {\n        const { disabled, value, placeholder, className, helpPopover, onChange } = this.props;\n\n        return (\n            <div className={styles.wrapper}>\n                <OverlayTrigger trigger={[\"hover\", \"click\"]} overlay={helpPopover} placement=\"top\">\n                    <FontAwesomeIcon icon={faInfoCircle} className={styles.icon} data-testid=\"game-input-help\"/>\n                </OverlayTrigger>\n\n                <Form.Control\n                    autoFocus\n                    plaintext\n                    value={value}\n                    disabled={disabled}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    className={[styles.input, className].join(\" \")}\n                    onFocus={(e: React.FocusEvent<HTMLInputElement>) => e.preventDefault()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default GameInputField;","import React, { ChangeEvent, Component } from \"react\";\nimport GameInputField from \"./GameInputField\";\nimport LearnableField from \"../../../types/learn/LearnableField\";\nimport PopOver from \"../PopOver\";\n\nexport interface AnswerInputFieldProps {\n    value: string;\n    disabled?: boolean;\n    className?: string;\n    placeholder?: string;\n    field: LearnableField;\n    onChange?: (value: string) => void;\n}\n\nclass AnswerInputField extends Component<AnswerInputFieldProps> {\n\n    render() {\n        const { value, disabled, placeholder, className, field } = this.props;\n\n        return (\n            <GameInputField\n                value={value}\n                disabled={disabled}\n                className={className}\n                placeholder={placeholder}\n                onChange={this.handleOnChange}\n                helpPopover={<PopOver title={field.name} text={field.description}/>}\n            />\n        );\n    }\n\n    private handleOnChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n        const { onChange, field } = this.props;\n        const value = e.target.value;\n        if (field.validationRegex.test(value) || !value) {\n            onChange?.(value);\n        }\n        return false;\n    }\n}\n\nexport default AnswerInputField;","import React from \"react\";\nimport { Col, Form, Row } from \"react-bootstrap\";\nimport { GameQuestionProps } from \"../MemoryGame\";\nimport GameQuestion from \"../../../types/game/GameQuestion\";\nimport QuestionDisplay from \"../../ui/display/QuestionDisplay\";\nimport AnswerInputField from \"../../ui/fields/AnswerInputField\";\nimport LearnableField from \"../../../types/learn/LearnableField\";\nimport styles from \"../../../styles/sass/components/game/questions/TextQuestion.module.scss\";\n\nexport interface TextQuestionProps extends GameQuestionProps {\n    question: string;\n    answerField: LearnableField;\n    answers: string[];\n    className?: string;\n}\n\ninterface TextQuestionState {\n    answer: string;\n}\n\nclass TextQuestion extends GameQuestion<TextQuestionProps, TextQuestionState> {\n\n    //TODO: typeof QuestionDisplay doesn't work for some reason\n    private readonly display: React.RefObject<any>;\n\n    constructor(props: Readonly<TextQuestionProps> | TextQuestionProps) {\n        super(props);\n\n        this.display = React.createRef();\n\n        this.state = {\n            answer: \"\",\n        }\n    }\n\n    render() {\n        const { question, hidden, className, answerField } = this.props;\n        const { answer } = this.state;\n\n        return (\n            <div className={[className, styles.wrapper].join(\" \")}>\n                <QuestionDisplay\n                    blur={hidden}\n                    key={question}\n                    ref={this.display}\n                    question={question}\n                />\n\n                <Form>\n                    <Form.Group controlId=\"answer\">\n                        <Row>\n                            <Col xs={12}>\n                                <AnswerInputField\n                                    value={answer}\n                                    field={answerField}\n                                    disabled={!question || hidden}\n                                    onChange={this.handleInputChange}\n                                    placeholder={hidden ? \"Paused\" : answerField.name}\n                                    className={styles.input}\n                                />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n\n    private handleInputChange = (value: string) => {\n        this.props.isValid(!!value);\n        this.setState({ answer: value });\n    }\n\n    isCorrect = () => {\n        const { answer } = this.state;\n        const { answers } = this.props;\n\n        this.setState({ answer: \"\" });\n\n        if (answers.includes(answer.toLowerCase())) {\n            return true;\n        } else {\n            this.display.current?.notifyIncorrect();\n            return false;\n        }\n    }\n}\n\nexport default TextQuestion;\n","import React, { Component } from \"react\";\nimport { KanaDisplayStyle } from \"./KanaDisplay\";\nimport DynamicDisplay from \"./DynamicDisplay\";\nimport styles from \"../../../styles/sass/components/ui/display/AnswerChoiceDisplay.module.scss\";\n\nexport interface AnswerChoiceDisplayProps {\n    value: string;\n    blur?: boolean;\n    index?: number;\n    style?: KanaDisplayStyle;\n    onClick?: (value: string) => void;\n    onMouseDown?: (value: string) => void;\n    onMouseUp?: (value: string) => void;\n    onMouseOver?: (value: string) => void;\n    onMouseOut?: (value: string) => void;\n    onTouchStart?: (value: string) => void;\n    onTouchEnd?: (value: string) => void;\n}\n\nclass AnswerChoiceDisplay extends Component<AnswerChoiceDisplayProps> {\n\n    private display = React.createRef<any>();\n\n    constructor(props: Readonly<AnswerChoiceDisplayProps> | AnswerChoiceDisplayProps) {\n        super(props);\n        this.state = {\n            isNotifyingIncorrect: false\n        }\n    }\n\n    render() {\n        const { value, blur, index, style, onClick, onMouseUp, onMouseDown, onMouseOver, onMouseOut,\n            onTouchStart, onTouchEnd\n        } = this.props;\n\n        const containerClass = style?.container ? style.container : [styles.wrapper];\n        const valueClass = blur ? styles.blur : styles.value;\n        const clickable = onClick ? styles.clickable : \"\";\n\n        const indexVisibility = index && !blur ? 'visible' : 'hidden';\n\n        return (\n            <div\n                onClick={() => onClick?.(value)}\n                onMouseUp={() => onMouseUp?.(value) }\n                onMouseDown={() => onMouseDown?.(value)}\n                onMouseOver={() => onMouseOver?.(value)}\n                onMouseOut={() => onMouseOut?.(value)}\n                onTouchStart={() => onTouchStart?.(value)}\n                onTouchEnd={() => onTouchEnd?.(value)}\n                className={containerClass.join(\" \")}\n            >\n                <span className={styles.index} style={{ color: \"#76bfcb\", visibility: indexVisibility }}>\n                    {index}\n                </span>\n\n                <DynamicDisplay\n                    value={value}\n                    style={style}\n                    ref={this.display}\n                    className={[valueClass, clickable].join(\" \")}\n                />\n            </div>\n        );\n    }\n\n    notifyIncorrect = () => {\n        this.display?.current?.notify();\n    }\n}\n\nexport default AnswerChoiceDisplay;\n","import { Alert, OverlayTrigger } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport LearnableField from \"../../types/learn/LearnableField\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport PopOver from \"../ui/PopOver\";\nimport styles from \"../../styles/sass/components/game/QuestionBanner.module.scss\";\n\nexport interface QuestionBannerProps {\n    question: Learnable;\n    questionField: LearnableField;\n    answerField: LearnableField;\n    className?: string;\n}\n\nclass QuestionBanner extends Component<QuestionBannerProps> {\n    render() {\n        const { answerField, className } = this.props;\n\n        const questionValues = this.getQuestionValues();\n        const displayValues = questionValues[0];\n        const extraValues = questionValues[1];\n\n        return (\n            <Alert variant=\"info\" className={[className, styles.wrapper].join(\" \")}>\n                {'What is the '}<strong>{answerField.name.toLowerCase()}</strong>{' for '}\n\n                {displayValues.map((questionValue: string, i: number) => {\n                    return (\n                        <React.Fragment key={`value-${i}`}>\n                            {'\"'}<strong key={i}>{questionValue}</strong>{'\"'}\n                            <span key={`or${i}`}>\n                                {i < displayValues.length - 1 ? \" or \" : \"\"}\n                            </span>\n                        </React.Fragment>\n                    );\n                })}\n                {' ?'}\n\n                {extraValues.length > 0 && (\n                    <OverlayTrigger\n                        trigger={[\"click\", \"hover\"]}\n                        placement=\"bottom\"\n                        rootClose={true}\n                        overlay={this.getOverlay(extraValues)}\n                    >\n                        <FontAwesomeIcon\n                            fixedWidth\n                            data-testid=\"help\"\n                            icon={faInfoCircle}\n                            className={styles.aka}\n                        />\n                    </OverlayTrigger>\n                )}\n            </Alert>\n        );\n    }\n\n    private getQuestionValues = (): [string[], string[]] => {\n        const { question, questionField } = this.props;\n        const questionValues = question.getFieldValues(questionField).map(it => it.toLowerCase());\n        if (questionValues.length > 2) {\n            return [questionValues.slice(0, 2), questionValues.slice(2)];\n        } else if (questionValues.length > 0) {\n            return [questionValues.slice(0, 2), []];\n        } else {\n            return [[\"N/A\"], []];\n        }\n    }\n\n    private getOverlay = (values: string[]) => {\n        const text = values.map(it => it.toLowerCase()).join(\", \");\n        return <PopOver title=\"Also Known As\" text={text} />\n    }\n}\n\nexport default QuestionBanner;\n","import React from \"react\";\nimport Arrays from \"../../../utility/Arrays\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { GameQuestionProps } from \"../MemoryGame\";\nimport GameQuestion from \"../../../types/game/GameQuestion\";\nimport AnswerChoiceDisplay from \"../../ui/display/AnswerChoiceDisplay\";\nimport LearnableField from \"../../../types/learn/LearnableField\";\nimport { Learnable } from \"../../../types/learn/Learnable\";\nimport QuestionBanner from \"../QuestionBanner\";\nimport styles from \"../../../styles/sass/components/game/questions/ChoiceQuestion.module.scss\";\n\nexport interface ChoiceQuestionProps extends GameQuestionProps {\n    question: Learnable;\n    questionField: LearnableField;\n    answerField: LearnableField;\n    wrong: string[];\n}\n\ninterface ChoiceQuestionState {\n    selected?: string;\n    options: string[];\n}\n\nclass ChoiceQuestion extends GameQuestion<ChoiceQuestionProps, ChoiceQuestionState> {\n\n    private displays = new Map<string, React.RefObject<AnswerChoiceDisplay>>();\n    private indices = new Map<number, string>();\n\n    constructor(props: Readonly<ChoiceQuestionProps> | ChoiceQuestionProps) {\n        super(props);\n\n        const { question, answerField, wrong } = this.props;\n\n        const expected = question.getFieldValues(answerField)[0];\n        if (!expected) throw new Error(\"Expected Answer is null\");\n\n        const options = Arrays.shuffle(wrong.concat(expected));\n\n        options.forEach((option, i) => {\n            const ref = React.createRef<AnswerChoiceDisplay>();\n            this.displays.set(option, ref);\n            this.indices.set(i + 1, option);\n        });\n\n        this.state = {\n            selected: undefined,\n            options: options\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeySelection);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeySelection);\n    }\n\n    render() {\n        const { question, hidden, questionField, answerField } = this.props;\n        const { selected, options } = this.state;\n\n        return (\n            <div className={styles.wrapper}>\n                <QuestionBanner\n                    question={question}\n                    questionField={questionField}\n                    answerField={answerField}\n                    className={styles.question}\n                />\n\n                <Row>\n                    {options.map((option, i) => {\n                        return (\n                            <Col lg={options.length === 6 ? 4 : 6} xs={6} key={\"col-\" + i}>\n                                <AnswerChoiceDisplay\n                                    value={option}\n                                    blur={hidden}\n                                    index={i + 1}\n                                    onClick={this.select}\n                                    style={{\n                                        container: [styles.display, selected === option ? styles.selected : styles.tile],\n                                        character: {\n                                            color: selected === option ? \"#268ce5\" : \"#FFF\"\n                                        }\n                                    }}\n                                    ref={this.displays.get(option)}\n                                />\n                            </Col>\n                        )\n                    })}\n                </Row>\n            </div>\n        );\n    }\n\n    isCorrect = () => {\n        const { question, answerField } = this.props;\n        const { selected } = this.state;\n        const expected = question.getFieldValues(answerField)[0];\n\n        if (expected === selected) {\n            return true;\n        } else {\n            this.displays.get(selected!)?.current?.notifyIncorrect();\n            this.setState({ selected: undefined });\n            return false;\n        }\n    }\n\n    private select = (value?: string) => {\n        const { selected } = this.state;\n        if (!selected) {\n            this.props.isValid(true);\n        }\n        this.setState({ selected: value });\n    }\n\n    private handleKeySelection = (e: KeyboardEvent) => {\n        e.preventDefault();\n\n        //Handle Numbers (1 - Tile Quantity)\n        if ([...this.indices.keys()].map(i => i.toString()).includes(e.key)) {\n            const tile = this.indices.get(Number(e.key));\n            this.select(tile);\n        }\n    }\n}\n\nexport default ChoiceQuestion;\n","import Arrays from \"./Arrays\";\n\nexport default class Maps {\n    /**\n     * Checks if the given two maps are equal. They should have;\n     * - The same length.\n     * - The same keys.\n     * - The same values.\n     * @param first The first map to compare.\n     * @param second The second map to compare.\n     * @return true if equal, else false.\n     */\n    public static areEqual(first: Map<string, string>, second: Map<string, string>): boolean {\n        if (first.size !== second.size) {\n            return false;\n        }\n\n        for(let [key, value] of first) {\n            if (value !== second.get(key)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Shuffles the keys and values for the given map.\n     * @param map The map to shuffle.\n     * @return map A copy of the map with the shuffled keys and values.\n     */\n    public static shuffle<K, V>(map: Map<K, V>): Map<K, V> {\n        const keys = Arrays.shuffle([...map.keys()]);\n        const values = Arrays.shuffle([...map.values()]);\n\n        const shuffled = new Map<K, V>();\n        for (let i = 0; i < map.size; i++) {\n            shuffled.set(keys[i], values[i]);\n        }\n\n        return shuffled;\n    }\n}\n","import React from \"react\";\nimport { GameQuestionProps } from \"../MemoryGame\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport AnswerChoiceDisplay from \"../../ui/display/AnswerChoiceDisplay\";\nimport GameQuestion from \"../../../types/game/GameQuestion\";\nimport LineTo from \"react-lineto\";\nimport Maps from \"../../../utility/Maps\";\nimport styles from \"../../../styles/sass/components/game/questions/MatchQuestion.module.scss\";\n\nexport interface MatchQuestionProps extends GameQuestionProps {\n    data: Map<string, string>;\n}\n\ninterface MatchQuestionState {\n    answer: Map<string, string>;\n    selected?: string;\n    hoveredAnswer?: string;\n    xCursor: number;\n    yCursor: number;\n}\n\nclass MatchQuestion extends GameQuestion<MatchQuestionProps, MatchQuestionState> {\n\n    private readonly container = React.createRef<HTMLDivElement>();\n    private readonly displays: Map<string, React.RefObject<AnswerChoiceDisplay>> = new Map();\n    private readonly values = new Map<string, string>();\n\n    constructor(props: Readonly<MatchQuestionProps> | MatchQuestionProps) {\n        super(props);\n\n        const keyValues = [...props.data.keys()].concat([...props.data.values()]);\n        keyValues.forEach((value: string) => {\n            this.displays.set(value, React.createRef<AnswerChoiceDisplay>());\n        });\n\n        this.values = Maps.shuffle(props.data);\n\n        this.state = {\n            answer: new Map(),\n            selected: undefined,\n            hoveredAnswer: undefined,\n            xCursor: 0,\n            yCursor: 0\n        }\n    }\n\n    componentDidMount() {\n        this.container?.current?.addEventListener(\"mousemove\", this.handleCursorMove)\n        this.container?.current?.addEventListener(\"touchmove\", this.handleTouchMove)\n    }\n\n    componentWillUnmount() {\n        this.container?.current?.removeEventListener(\"mousemove\", this.handleCursorMove)\n        this.container?.current?.removeEventListener(\"touchmove\", this.handleTouchMove)\n    }\n\n    render() {\n        const { xCursor, yCursor } = this.state;\n\n        return (\n            <Container className={styles.wrapper} ref={this.container} onMouseUp={this.resetSelected}>\n                <div style={{ left: xCursor, top: yCursor }} className={styles.cursor} />\n\n                {[...this.values.keys()].map((question: string, i: number) => {\n                    const answer = this.values.get(question)!;\n\n                    return (\n                        <Row className={[styles.row, \"justify-content-around\"].join(\" \")} key={`row-${i}`}>\n                            <Col xs={5} md={4}>\n                                <AnswerChoiceDisplay\n                                    value={question}\n                                    ref={this.displays.get(question)}\n                                    onMouseUp={this.resetSelected}\n                                    onTouchEnd={this.resetSelected}\n                                    onMouseDown={this.handleQuestionSelection}\n                                    onTouchStart={this.handleQuestionSelection}\n                                    style={{\n                                        container: [question, styles.display],\n                                        character: { className: this.getQuestionValueClassName(question) }\n                                    }}\n                                />\n                            </Col>\n\n                            <Col xs={2} md={4}>\n\n                            </Col>\n\n                            <Col xs={5} md={4}>\n                                <AnswerChoiceDisplay\n                                    value={answer}\n                                    ref={this.displays.get(answer)}\n                                    onMouseUp={this.handleAnswerAttempt}\n                                    onTouchEnd={this.handleAnswerAttempt}\n                                    onMouseDown={this.handleAnswerChange}\n                                    onTouchStart={this.handleAnswerChange}\n                                    onMouseOver={(value: string) => this.setState({ hoveredAnswer: value })}\n                                    onMouseOut={this.resetHoveredAnswer}\n                                    style={{\n                                        container: [answer, styles.display],\n                                        character: { className: this.getAnswerValueClassName(answer) }\n                                    }}\n                                />\n                            </Col>\n\n                            {this.getConnectorRenderCondition(question) && (\n                                <LineTo\n                                    delay={0}\n                                    from={question}\n                                    className={styles.connector}\n                                    toAnchor=\"left\" fromAnchor=\"right\"\n                                    borderWidth={5}\n                                    borderStyle={this.getConnectorStyle(question)}\n                                    borderColor={this.getConnectorColour(question)}\n                                    to={this.getConnectorTarget(question)}\n                                    data-testid={question + \"-connector\"}\n                                />\n                            )}\n                        </Row>\n                    )\n                })}\n            </Container>\n        );\n    }\n\n    isCorrect = (): boolean => {\n        const { data } = this.props;\n        const { answer } = this.state;\n        const isCorrect = Maps.areEqual(data, answer);\n\n        if (!isCorrect) {\n            this.displays.forEach((ref: React.RefObject<AnswerChoiceDisplay>) => ref.current?.notifyIncorrect());\n            this.setState({ selected: undefined, hoveredAnswer: undefined, answer: new Map() });\n        }\n\n        return isCorrect;\n    }\n\n    private handleAnswerAttempt = (selectedAnswer: string) => {\n        const { data, isValid } = this.props;\n        const { answer, selected } = this.state;\n        const selectedAnswers = [...answer.values()];\n\n        if (selected && !selectedAnswers.includes(selectedAnswer)) {\n            answer.set(selected, selectedAnswer);\n            this.setState({ answer: answer, selected: undefined });\n        }\n\n        isValid(data.size === answer.size)\n    }\n\n    private getQuestionValueClassName = (value: string): string => {\n        const { selected, answer } = this.state;\n        if (answer.has(value)) {\n            return styles.matched;\n        } else if (selected === value) {\n            return styles.selected;\n        } else {\n            return styles.question;\n        }\n    }\n\n    private getAnswerValueClassName = (value: string): string => {\n        const { selected, answer, hoveredAnswer } = this.state;\n        if ([...answer.values()].includes(value)) {\n            return styles.matched;\n        } else if (selected && hoveredAnswer === value) {\n            return styles.selected;\n        } else {\n            return styles.answer;\n        }\n    }\n\n    private handleQuestionSelection = (value: string) => {\n        const { answer } = this.state;\n        if (!answer.has(value)) {\n            this.setState({ selected: value });\n        }\n    }\n\n    private resetSelected = () => {\n        this.setState({ selected: undefined });\n    }\n\n    private resetHoveredAnswer = () => {\n        this.setState({ hoveredAnswer: undefined });\n    }\n\n    private handleCursorMove = (e: MouseEvent) => {\n        this.setState({ xCursor: e.pageX, yCursor: e.pageY });\n    }\n\n    private handleTouchMove = (e: TouchEvent) => {\n        const touch = e.touches[0];\n        this.setState({ xCursor: touch.pageX, yCursor: touch.pageY });\n    }\n\n    private handleAnswerChange = (selectedAnswer: string) => {\n        const { answer } = this.state;\n        const answers = [...answer.values()];\n        if (answers.includes(selectedAnswer)) {\n            //Reverse mapping - gets the question for the selected answer\n            const question = [...answer.entries()].filter(entry => entry[1] === selectedAnswer)[0][0];\n            answer.delete(question);\n            this.setState({ selected: question, answer: answer });\n        }\n    }\n\n    private getConnectorTarget = (question: string): string => {\n        const { answer } = this.state;\n        if (answer.has(question)) {\n            return answer.get(question)!;\n        }\n        return styles.cursor;\n    }\n\n    private getConnectorRenderCondition = (question: string): boolean => {\n        const { selected, answer } = this.state;\n        const questionIsSelected = question === selected;\n        const questionHasMatchedAnswer = answer.has(question);\n        return questionIsSelected || questionHasMatchedAnswer;\n    }\n\n    private getConnectorStyle = (question: string): string => {\n        const { answer } = this.state;\n        return answer.has(question) ? \"solid\" : \"dashed\";\n    }\n\n    private getConnectorColour = (question: string) => {\n        const { answer } = this.state;\n        return answer.has(question) ? \"#7a7a7a\" : \"#4594e9\";\n    }\n}\n\nexport default MatchQuestion;\n","export default __webpack_public_path__ + \"static/media/finish.fe95e484.wav\";","export default __webpack_public_path__ + \"static/media/correct.a921a9f2.wav\";","export default __webpack_public_path__ + \"static/media/wrong.c9e53d6b.wav\";","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { Component } from \"react\";\nimport { faVolumeDown, faVolumeMute, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/VolumeController.module.scss\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\n\nexport interface VolumeControllerProps {\n    className?: string;\n    onVolumeChange?: (value: number) => void;\n}\n\ninterface VolumeControllerState {\n    showVolume: boolean;\n    muted: boolean;\n    volume: number;\n}\n\nclass VolumeController extends Component<VolumeControllerProps, VolumeControllerState> {\n\n    constructor(props: Readonly<VolumeControllerProps> | VolumeControllerProps) {\n        super(props);\n        this.state = {\n            showVolume: false,\n            muted: false,\n            volume: 70\n        }\n    }\n\n    render() {\n        const { className } = this.props;\n        const { showVolume, muted, volume } = this.state;\n\n        const overlay = (\n            <Popover id=\"volume-slider\" className={styles.volume}  onMouseLeave={this.hideVolume}\n                     onMouseEnter={this.showVolume}>\n                <Popover.Content className={styles.text}>\n                    <RangeSlider\n                        min={0}\n                        max={100}\n                        value={volume}\n                        disabled={muted}\n                        tooltipPlacement=\"top\"\n                        data-testid=\"volume-slider\"\n                        onChange={this.changeVolume}\n                    />\n                </Popover.Content>\n            </Popover>\n        );\n\n        return (\n            <div>\n                <OverlayTrigger show={showVolume} defaultShow={false} placement=\"top\" rootClose={true} overlay={overlay}>\n                    <Button\n                        title=\"Volume\"\n                        variant=\"light\"\n                        className={className}\n                        onClick={this.invert}\n                        onMouseLeave={this.hideVolume}\n                        onMouseEnter={this.showVolume}\n                    >\n                        <FontAwesomeIcon fixedWidth icon={this.getVolumeIcon()} />\n                    </Button>\n                </OverlayTrigger>\n            </div>\n        );\n    }\n\n    private invert = () => {\n        const { muted, volume } = this.state;\n        this.props.onVolumeChange?.(muted ? volume / 100 : 0);\n        this.setState({ muted: !muted });\n    }\n\n    private showVolume = () => this.setState({ showVolume: true });\n\n    private hideVolume = () => this.setState({ showVolume: false });\n\n    private changeVolume = (e: React.ChangeEvent, value: number) => {\n        this.setState({ volume: value });\n        this.props.onVolumeChange?.(value / 100);\n    }\n\n    private getVolumeIcon = () => {\n        const { muted, volume } = this.state;\n\n        if (muted || volume === 0) {\n            return faVolumeMute\n        }\n\n        return volume > 50 ? faVolumeUp : faVolumeDown\n    }\n}\n\nexport default VolumeController;\n","import React, { Component } from \"react\";\nimport { ButtonGroup, Col, Container, Row } from \"react-bootstrap\";\nimport Timer from \"./Timer\";\nimport LifeDisplay from \"./LifeDisplay\";\nimport QuitButton from \"../ui/buttons/QuitButton\";\nimport GameResult from \"../../types/game/GameResult\";\nimport { GameFinishReason } from \"../../types/game/GameFinishReason\";\nimport CountDown from \"./CountDown\";\nimport { QuestionType } from \"../../types/game/QuestionType\";\nimport SessionProgressBar from \"../ui/SessionProgressBar\";\nimport SubmitButton from \"../ui/buttons/SubmitButton\";\nimport HintButton from \"./HintButton\";\nimport SkipButton from \"../ui/buttons/SkipButton\";\nimport ConfirmModal from \"../ui/ConfirmModal\";\nimport { Environment } from \"../../utility/Environment\";\nimport ScoreDisplay from \"../ui/display/ScoreDisplay\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport GameSettings from \"../../types/session/settings/game/GameSettings\";\nimport ExclusionFilter from \"../../filters/learnable/ExclusionFilter\";\nimport Arrays from \"../../utility/Arrays\";\nimport TextQuestion from \"./questions/TextQuestion\";\nimport ChoiceQuestion from \"./questions/ChoiceQuestion\";\nimport MatchQuestion from \"./questions/MatchQuestion\";\nimport finish from \"../../sound/finish.wav\";\nimport success from \"../../sound/correct.wav\";\nimport wrong from \"../../sound/wrong.wav\";\nimport VolumeController from \"../ui/VolumeController\";\nimport styles from \"../../styles/sass/components/game/MemoryGame.module.scss\";\n\nexport interface GameQuestionProps {\n    hidden: boolean;\n    isValid: (valid: boolean) => void;\n}\n\nexport interface MemoryGameProps {\n    data: Learnable[];\n    settings: GameSettings;\n    onFinish: (result: GameResult) => void;\n    sessionKey?: string;\n}\n\ninterface MemoryGameState {\n    currentQuestion: Learnable[];\n    remainingQuestions: Learnable[];\n    correctAnswers: Set<Learnable>;\n    wrongAnswers: Learnable[];\n    hasExhaustedQuestions: boolean;\n    paused: boolean;\n    lives: number;\n    failedToAnswer: number;\n    hasValidAnswer: boolean;\n    hints: number;\n    hasUsedHintThisQuestion: boolean;\n    isQuitting: boolean;\n    score: number;\n    streak: number;\n}\n\n/**\n * The core component for driving game logic.\n * Encapsulates logic for game answers, timers, lives, hints and score.\n * The questions are orchestrated in here, but their logic is encapsulated\n */\nclass MemoryGame extends Component<MemoryGameProps, MemoryGameState> {\n    private readonly timer: React.RefObject<Timer>;\n    private readonly countdown: React.RefObject<CountDown>;\n    private readonly question: React.RefObject<any>; //TODO: Can we type as GameQuestion here?\n\n    private volume: number = 0.7;\n\n    constructor(props: MemoryGameProps | Readonly<MemoryGameProps>) {\n        super(props);\n\n        this.timer = React.createRef();\n        this.countdown = React.createRef();\n        this.question = React.createRef();\n\n        const { settings, data } = this.props;\n\n        const [firstQuestion, remainingQuestions] = this.getNextQuestion(data);\n\n        this.state = {\n            currentQuestion: firstQuestion,\n            remainingQuestions: remainingQuestions,\n            correctAnswers: new Set<Learnable>(),\n            wrongAnswers: [],\n            hasExhaustedQuestions: false,\n            paused: false,\n            lives: settings.lives.quantity,\n            failedToAnswer: 0,\n            hasValidAnswer: false,\n            hints: settings.hints.quantity,\n            hasUsedHintThisQuestion: false,\n            isQuitting: false,\n            score: 0,\n            streak: 0,\n        }\n    }\n\n    componentDidUpdate() {\n        const { lives } = this.state\n        const { settings, onFinish } = this.props;\n\n        //Listens for a game failure. If we're out of lives, call onFinish().\n        if (settings.lives.enabled && lives === 0) {\n            onFinish(this.getGameResult(false, GameFinishReason.NO_LIVES_REMAINING));\n        }\n    }\n\n    componentDidMount() {\n        //console.log(\"Starting new game with ID: \" + this.props.sessionKey);\n    }\n\n    componentWillUnmount() {\n        this.reset();\n    }\n\n    render() {\n        const {\n            hasExhaustedQuestions, lives, remainingQuestions, hasValidAnswer, paused, currentQuestion,\n            isQuitting, score, streak, hints\n        } = this.state;\n\n        const { data, settings } = this.props;\n\n        return (\n            <Container className={styles.wrapper} data-testid=\"memory-game\">\n                {isQuitting && (\n                    <ConfirmModal\n                        onConfirm={this.onQuit}\n                        onDismiss={this.onDismissQuitModal}\n                        body={Environment.variable(\"QUIT_BODY\")}\n                        title={Environment.variable(\"QUIT_TITLE\")}\n                    />\n                )}\n\n                <Row noGutters className={styles.header}>\n                    <Col xs={12}>\n                        <Row>\n                            <Col className={styles.quitWrapper}>\n                                <QuitButton onClick={this.onClickQuit} className={styles.quit} />\n                            </Col>\n\n                            <Col className={styles.progressWrapper}>\n                                <SessionProgressBar\n                                    streak={streak}\n                                    quantity={data.length}\n                                    className={styles.progress}\n                                    remaining={remainingQuestions.length}\n                                    inProgress={!hasExhaustedQuestions && !paused}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col xs={4}>\n                        {settings.question.score &&\n                            <ScoreDisplay\n                                value={score}\n                                streak={streak}\n                                className={styles.score}\n                            />\n                        }\n                    </Col>\n\n                    <Col xs={4} className={styles.lifeDisplayContainer}>\n                        <LifeDisplay\n                            hearts={lives}\n                            className={styles.lives}\n                            enabled={settings.lives.enabled}\n                        />\n                    </Col>\n\n                    <Col xs={4}>\n                        {settings.time.timed &&\n                            <Timer\n                                pausable\n                                ref={this.timer}\n                                onPaused={this.onPaused}\n                                className={styles.timer}\n                            />\n                        }\n                        {settings.time.countdown &&\n                            <CountDown\n                                ref={this.countdown}\n                                className={styles.timer}\n                                onFinish={this.countDownTimeElapsed}\n                                value={settings.time?.secondsPerQuestion}\n                            />\n                        }\n                    </Col>\n                </Row>\n\n                <Row noGutters className={styles.questionWrapper}>\n                    <Col xs={12} className={styles.questionWrapperColumn}>\n                        {this.getQuestion()}\n                    </Col>\n                </Row>\n\n                <Row noGutters className={styles.footer}>\n                    <Col md={4} xs={5} className={styles.footerLeftCol}>\n                        <SkipButton\n                            disabled={paused}\n                            className={styles.skip}\n                            onClick={this.handleSkip}\n                        />\n\n                        <VolumeController\n                            className={styles.volume}\n                            onVolumeChange={(value: number) => this.volume = value}\n                        />\n                    </Col>\n\n                   <Col md={8} xs={7} className={styles.footerRightCol}>\n                       <ButtonGroup className={styles.buttonGroup}>\n                           <HintButton\n                               remaining={hints}\n                               className={styles.hint}\n                               data={currentQuestion[0]}\n                               infinite={settings.hints.unlimited}\n                               quantity={settings.hints.quantity}\n                               disabled={paused || !settings.hints.enabled}\n                               key={currentQuestion.map(q => q.getUniqueID()).join(\"-\")}\n                               onUse={() => this.setState({ hasUsedHintThisQuestion: true })}\n                           />\n\n                           <SubmitButton\n                               className={styles.submit}\n                               onClick={this.answerQuestion}\n                               disabled={!hasValidAnswer || paused}\n                           />\n                       </ButtonGroup>\n                   </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    private getQuestion = () => {\n        const { settings, data } = this.props;\n        const { currentQuestion, paused } = this.state;\n\n        const questionField = settings.question.questionField;\n        const answerField = settings.question.answerField;\n\n        const currentQuestionID = currentQuestion.map(q => q.getUniqueID()).join(\"-\");\n\n        //TODO: Extract into a QuestionRegistry component (Maybe Strategy pattern?)\n        switch (settings.question.type) {\n            case QuestionType.TEXT: {\n                const question = currentQuestion[0].getFieldValues(questionField)[0];\n                const answers = currentQuestion[0].getFieldValues(answerField);\n\n                return (\n                    <TextQuestion\n                        hidden={paused}\n                        answers={answers}\n                        ref={this.question}\n                        question={question}\n                        answerField={answerField}\n                        key={currentQuestionID}\n                        isValid={this.handleAnswerValidity}\n                    />\n                );\n            }\n            case QuestionType.CHOICE: {\n                //What the user is going to be asked. Usually just a single string, but some kana have multiple romaji.\n                //Also, what the expected answer is going to be. For a choice question, it's only ever going to be one.\n                const questions = currentQuestion[0];\n\n                //What wrong options will be presented? Takes the answer filter from the settings and excludes the question.\n                //We then filter our Learnable data and retrieve n options. Then we map chosen answer fields for them.\n                const chain = settings.question.answerFilter(currentQuestion).withFilter(new ExclusionFilter(currentQuestion[0]));\n                const wrong = Arrays.getRandomElements(chain.execute(data), settings.question.cards - 1);\n                const wrongAnswerOptions = wrong.map((answer: Learnable) => answer.getFieldValues(answerField)[0]);\n\n                return (\n                    <ChoiceQuestion\n                        hidden={paused}\n                        ref={this.question}\n                        question={questions}\n                        answerField={answerField}\n                        questionField={questionField}\n                        key={currentQuestionID}\n                        isValid={this.handleAnswerValidity}\n                        wrong={wrongAnswerOptions}\n                    />\n                );\n            }\n            case QuestionType.MATCH: {\n                const questionData = new Map(currentQuestion.map(data => {\n                    const question = data.getFieldValues(questionField)[0];\n                    const answer = data.getFieldValues(answerField)[0];\n                    return [question, answer]\n                }));\n\n                return (\n                    <MatchQuestion\n                        hidden={paused}\n                        data={questionData}\n                        ref={this.question}\n                        key={currentQuestionID}\n                        isValid={this.handleAnswerValidity}\n                   />\n                )\n            }\n        }\n    }\n\n    answerQuestion = () => {\n        const { currentQuestion, correctAnswers, wrongAnswers, remainingQuestions, lives } = this.state;\n        const { settings } = this.props;\n\n        if (this.question.current?.isCorrect()) {\n            //Play the success sound effect\n            this.getAudio(success).play().catch(e => console.log(e));\n\n            //Add the current question to the correct answers set.\n            currentQuestion.forEach(question => correctAnswers.add(question));\n            this.setState({ correctAnswers: correctAnswers });\n\n            //If we're out of questions...\n            if (remainingQuestions.length === 0) {\n                //Play the finish sound\n                this.getAudio(finish).play().catch(e => console.log(e));\n\n                //Stop the timer / countdown.\n                this.timer.current?.stop();\n\n                //Set the questions as exhausted and ensure paused is false.\n                this.setState({ hasExhaustedQuestions: true, paused: false });\n\n                //Notify the consuming parent of the game ending and pass data for results screen.\n                this.props.onFinish(this.getGameResult(true, GameFinishReason.EXHAUSTED_QUESTIONS));\n            } else {\n                this.advanceNextQuestion();\n            }\n        } else {\n            //Play the wrong sound effect\n            this.getAudio(wrong).play().catch(e => console.log(e));\n\n            //If the question was answered incorrectly, update the lives and wrong answer pool.\n            this.setState({\n                streak: 0,\n                wrongAnswers: wrongAnswers.concat(currentQuestion),\n                lives: settings.lives.enabled && !settings.time.countdown ? lives - 1 : lives\n            });\n        }\n\n        this.setState({ hasValidAnswer: false });\n    }\n\n    reset = () => {\n        const [nextQuestion, remainingQuestions] = this.getNextQuestion(this.props.data);\n\n        this.setState({\n            paused: false,\n            wrongAnswers: [],\n            isQuitting: false,\n            hasValidAnswer: false,\n            hasExhaustedQuestions: false,\n            currentQuestion: nextQuestion,\n            hasUsedHintThisQuestion: false,\n            correctAnswers: new Set<Learnable>(),\n            remainingQuestions: remainingQuestions,\n            hints: this.props.settings.hints.quantity,\n        });\n\n        this.timer.current?.restart();\n        this.countdown.current?.reset();\n    }\n\n    private advanceNextQuestion(skip: boolean = false) {\n        const { remainingQuestions, hasUsedHintThisQuestion, hints, streak } = this.state;\n\n        //If we're being timed per question, reset the timer.\n        this.countdown.current?.reset();\n\n        //Pick a random remaining question and remove it from the pool.\n        const [nextQuestions, nextRemainingQuestions] = this.getNextQuestion(remainingQuestions)\n\n        //Update the next question to be displayed and the remaining questions with one less.\n        this.setState({\n            streak: skip ? 0 : streak + 1,\n            score: this.getScore(skip),\n            currentQuestion: nextQuestions,\n            hasUsedHintThisQuestion: false,\n            remainingQuestions: nextRemainingQuestions,\n            hints: hasUsedHintThisQuestion ? hints - 1 : hints\n        });\n    }\n\n    private handleAnswerValidity = (valid: boolean) => {\n        this.setState({ hasValidAnswer: valid });\n    }\n\n    private handleSkip = () => {\n        const { settings } = this.props;\n        const { wrongAnswers, lives, currentQuestion, failedToAnswer } = this.state;\n\n        this.setState({\n            failedToAnswer: failedToAnswer + 1,\n            wrongAnswers: wrongAnswers.concat(currentQuestion),\n            lives: settings.lives.enabled && !settings.time.countdown ? lives - 1 : lives\n        });\n\n        this.advanceNextQuestion(true);\n    }\n\n    private countDownTimeElapsed = () => {\n        const { lives, wrongAnswers, currentQuestion, remainingQuestions, failedToAnswer, hasUsedHintThisQuestion, hints } = this.state;\n        //this.kanaDisplay.current?.notifyIncorrect(); TODO: Can we notify the question components of incorrectness when timer runs out?\n        this.countdown.current?.reset();\n\n        //Pick a random remaining question and remove it from the pool.\n        const [nextQuestions, nextRemainingQuestions] = this.getNextQuestion(remainingQuestions);\n\n        this.setState({\n            currentQuestion: nextQuestions,\n            hasUsedHintThisQuestion: false,\n            failedToAnswer: failedToAnswer + 1,\n            remainingQuestions: nextRemainingQuestions,\n            wrongAnswers: wrongAnswers.concat(currentQuestion),\n            hints: hasUsedHintThisQuestion ? hints - 1 : hints,\n            lives: this.props.settings.lives.enabled ? lives - 1 : lives\n        });\n    }\n\n    private onQuit = () => {\n        const { wrongAnswers, currentQuestion } = this.state\n        const { onFinish } = this.props;\n\n        //End the game, make sure to add the current question to the wrong answers.\n        const gameResult = this.getGameResult(false, GameFinishReason.QUIT);\n        gameResult.wrongAnswers = wrongAnswers.concat(currentQuestion);\n        onFinish(gameResult);\n\n        //Reset before un-mounting\n        this.reset();\n    }\n\n    private onClickQuit = () => {\n        this.timer?.current?.pause();\n        this.setState({ isQuitting: true, paused: true });\n    }\n\n    private onDismissQuitModal = () => {\n        this.timer?.current?.start();\n        this.setState({ isQuitting: false, paused: false });\n    }\n\n    private onPaused = () => this.setState({ paused: !this.state.paused });\n\n    private getNextQuestion = (data: Learnable[]): [Learnable[], Learnable[]] => {\n        const quantity = this.props.settings.question.quantity;\n        return Arrays.getRandomObjects(data, quantity);\n    }\n\n    private getScore = (hasSkipped: boolean): number => {\n        const { score, streak, currentQuestion } = this.state;\n\n        const baseScore = currentQuestion[0].getBaseScore();\n\n        if (hasSkipped) {\n            return score - baseScore;\n        }\n\n        const multiplier = streak >= 50 ? 4 : streak >= 25 ? 3 : streak >= 10 ? 2 : streak >= 5 ? 1.5 : 1;\n        return score + baseScore * multiplier;\n    }\n\n    private getAudio = (source: string): HTMLAudioElement => {\n        const audio = new Audio(source);\n        audio.autoplay = false;\n        audio.style.display = \"none\";\n        audio.volume = this.volume;\n        return audio;\n    }\n\n    private getGameResult = (success: boolean, reason: GameFinishReason): GameResult => {\n        const { settings } = this.props;\n        const { lives, hints, correctAnswers, wrongAnswers, score } = this.state;\n\n        return {\n            settings: settings,\n            reason: reason,\n            success: success,\n            score: score,\n            livesRemaining: lives,\n            hintsRemaining: hints,\n            correctAnswers: correctAnswers,\n            wrongAnswers: wrongAnswers,\n            duration: this.timer.current?.getCurrentTime()\n        }\n    }\n}\n\n\nexport default MemoryGame;\n","import { KanaColumn } from \"../types/kana/KanaColumn\";\nimport { KanaData } from \"./DataTypes\";\n\nfunction hiragana(): KanaData[] {\n    return [\n        //Vowels (Big)\n        {\n            name: \"あ\",\n            code: \"\\u3042\",\n            romaji: [\"a\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"い\",\n            code: \"\\u3044\",\n            romaji: [\"i\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"う\",\n            code: \"\\u3046\",\n            romaji: [\"u\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"え\",\n            code: \"\\u3048\",\n            romaji: [\"e\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"お\",\n            code: \"\\u304A\",\n            romaji: [\"o\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n\n        //K Column (Big)\n        {\n            name: \"か\",\n            code: \"\\u304B\",\n            romaji: [\"ka\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"き\",\n            code: \"\\u304D\",\n            romaji: [\"ki\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"く\",\n            code: \"\\u304F\",\n            romaji: [\"ku\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"け\",\n            code: \"\\u3051\",\n            romaji: [\"ke\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"こ\",\n            code: \"\\u3053\",\n            romaji: [\"ko\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacriticals (Dakuten)\n        {\n            name: \"が\",\n            code: \"\\u304C\",\n            romaji: [\"ga\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ぎ\",\n            code: \"\\u304E\",\n            romaji: [\"gi\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ぐ\",\n            code: \"\\u3050\",\n            romaji: [\"gu\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"げ\",\n            code: \"\\u3052\",\n            romaji: [\"ge\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ご\",\n            code: \"\\u3054\",\n            romaji: [\"go\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n\n        //K Diagraphs\n        {\n            name: \"きゃ\",\n            code: \"\\u304D\\u3083\",\n            romaji: [\"kya\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"きゅ\",\n            code: \"\\u304D\\u3085\",\n            romaji: [\"kyu\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"きょ\",\n            code: \"\\u304D\\u3087\",\n            romaji: [\"kyo\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacritical Diagraphs\n        {\n            name: \"ぎゃ\",\n            code: \"\\u304E\\u3083\",\n            romaji: [\"gya\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ぎゅ\",\n            code: \"\\u304E\\u3085\",\n            romaji: [\"gyu\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ぎょ\",\n            code: \"\\u304E\\u3087\",\n            romaji: [\"gyo\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n\n        //S Column (Big)\n        {\n            name: \"さ\",\n            code: \"\\u3055\",\n            romaji: [\"sa\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"し\",\n            code: \"\\u3057\",\n            romaji: [\"shi\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"す\",\n            code: \"\\u3059\",\n            romaji: [\"su\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"せ\",\n            code: \"\\u305B\",\n            romaji: [\"se\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"そ\",\n            code: \"\\u305D\",\n            romaji: [\"so\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacriticals (Dakuten)\n        {\n            name: \"ざ\",\n            code: \"\\u3056\",\n            romaji: [\"za\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"じ\",\n            code: \"\\u3058\",\n            romaji: [\"zi\", \"ji\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ず\",\n            code: \"\\u305A\",\n            romaji: [\"zu\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ぜ\",\n            code: \"\\u305C\",\n            romaji: [\"ze\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ぞ\",\n            code: \"\\u305E\",\n            romaji: [\"zo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //S Diagraphs\n        {\n            name: \"しゃ\",\n            code: \"\\u3057\\u3083\",\n            romaji: [\"sha\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"しゅ\",\n            code: \"\\u3057\\u3085\",\n            romaji: [\"shu\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"しょ\",\n            code: \"\\u3057\\u3087\",\n            romaji: [\"sho\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacritical Diagraphs\n        {\n            name: \"じゃ\",\n            code: \"\\u3058\\u3083\",\n            romaji: [\"ja\", \"zya\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"じゅ\",\n            code: \"\\u3058\\u3085\",\n            romaji: [\"ju\", \"zyu\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"じょ\",\n            code: \"\\u3058\\u3087\",\n            romaji: [\"jo\", \"zyo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //T Column (Big)\n        {\n            name: \"た\",\n            code: \"\\u305F\",\n            romaji: [\"ta\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ち\",\n            code: \"\\u3061\",\n            romaji: [\"chi\", \"ti\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"つ\",\n            code: \"\\u3064\",\n            romaji: [\"tsu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"て\",\n            code: \"\\u3066\",\n            romaji: [\"te\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"と\",\n            code: \"\\u3068\",\n            romaji: [\"to\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacriticals (Dakuten)\n        {\n            name: \"だ\",\n            code: \"\\u3060\",\n            romaji: [\"da\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ぢ\",\n            code: \"\\u3062\",\n            romaji: [\"di\", \"ji\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"づ\",\n            code: \"\\u3065\",\n            romaji: [\"du\", \"zu\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"で\",\n            code: \"\\u3067\",\n            romaji: [\"de\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ど\",\n            code: \"\\u3069\",\n            romaji: [\"do\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //T Diagraphs\n        {\n            name: \"ちゃ\",\n            code: \"\\u3061\\u3083\",\n            romaji: [\"cha\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ちゅ\",\n            code: \"\\u3061\\u3085\",\n            romaji: [\"chu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ちょ\",\n            code: \"\\u3061\\u3087\",\n            romaji: [\"cho\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacritical Diagraphs\n        {\n            name: \"ぢゃ\",\n            code: \"\\u3062\\u3083\",\n            romaji: [\"dya\", \"ja\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ぢゅ\",\n            code: \"\\u3062\\u3085\",\n            romaji: [\"dyu\", \"ju\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ぢょ\",\n            code: \"\\u3062\\u3087\",\n            romaji: [\"dyo\", \"jo\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //N Column (Big)\n        {\n            name: \"な\",\n            code: \"\\u306A\",\n            romaji: [\"na\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"に\",\n            code: \"\\u306B\",\n            romaji: [\"ni\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ぬ\",\n            code: \"\\u306C\",\n            romaji: [\"nu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ね\",\n            code: \"\\u306D\",\n            romaji: [\"ne\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"の\",\n            code: \"\\u306E\",\n            romaji: [\"no\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n        //N Diagraphs\n        {\n            name: \"にゃ\",\n            code: \"\\u306B\\u3083\",\n            romaji: [\"nya\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"にゅ\",\n            code: \"\\u306B\\u3085\",\n            romaji: [\"nyu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"にょ\",\n            code: \"\\u306B\\u3087\",\n            romaji: [\"nyo\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n\n        //H Column (Big)\n        {\n            name: \"は\",\n            code: \"\\u306F\",\n            romaji: [\"ha\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ひ\",\n            code: \"\\u3072\",\n            romaji: [\"hi\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ふ\",\n            code: \"\\u3075\",\n            romaji: [\"hu\", \"fu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"へ\",\n            code: \"\\u3078\",\n            romaji: [\"he\", \"e\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ほ\",\n            code: \"\\u307B\",\n            romaji: [\"ho\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacriticals (Dakuten)\n        {\n            name: \"ば\",\n            code: \"\\u3070\",\n            romaji: [\"ba\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"び\",\n            code: \"\\u3073\",\n            romaji: [\"bi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぶ\",\n            code: \"\\u3076\",\n            romaji: [\"bu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"べ\",\n            code: \"\\u3079\",\n            romaji: [\"be\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぼ\",\n            code: \"\\u307C\",\n            romaji: [\"bo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacriticals (Handakuten)\n        {\n            name: \"ぱ\",\n            code: \"\\u3071\",\n            romaji: [\"pa\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぴ\",\n            code: \"\\u3074\",\n            romaji: [\"pi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぷ\",\n            code: \"\\u3077\",\n            romaji: [\"pu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぺ\",\n            code: \"\\u307A\",\n            romaji: [\"pe\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぽ\",\n            code: \"\\u307D\",\n            romaji: [\"po\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diagraphs\n        {\n            name: \"ひゃ\",\n            code: \"\\u3072\\u3083\",\n            romaji: [\"hya\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ひゅ\",\n            code: \"\\u3072\\u3085\",\n            romaji: [\"hyu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ひょ\",\n            code: \"\\u3072\\u3087\",\n            romaji: [\"hyo\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacritical Diagraphs (Dakuten)\n        {\n            name: \"びゃ\",\n            code: \"\\u3073\\u3083\",\n            romaji: [\"bya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"びゅ\",\n            code: \"\\u3073\\u3085\",\n            romaji: [\"byu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"びょ\",\n            code: \"\\u3073\\u3087\",\n            romaji: [\"byo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacritical Diagraphs (Handakuten)\n        {\n            name: \"ぴゃ\",\n            code: \"\\u3074\\u3083\",\n            romaji: [\"pya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぴゅ\",\n            code: \"\\u3074\\u3085\",\n            romaji: [\"pyu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ぴょ\",\n            code: \"\\u3074\\u3087\",\n            romaji: [\"pyo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //M Column (Big)\n        {\n            name: \"ま\",\n            code: \"\\u307E\",\n            romaji: [\"ma\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"み\",\n            code: \"\\u307F\",\n            romaji: [\"mi\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"む\",\n            code: \"\\u3080\",\n            romaji: [\"mu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"め\",\n            code: \"\\u3081\",\n            romaji: [\"me\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"も\",\n            code: \"\\u3082\",\n            romaji: [\"mo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //M Diagraphs\n        {\n            name: \"みゃ\",\n            code: \"\\u307F\\u3083\",\n            romaji: [\"mya\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"みゅ\",\n            code: \"\\u307F\\u3085\",\n            romaji: [\"myu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"みょ\",\n            code: \"\\u307F\\u3087\",\n            romaji: [\"myo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //Y Column (Big)\n        {\n            name: \"や\",\n            code: \"\\u3084\",\n            romaji: [\"ya\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"ゆ\",\n            code: \"\\u3086\",\n            romaji: [\"yu\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"よ\",\n            code: \"\\u3088\",\n            romaji: [\"yo\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n\n        //R Column (Big)\n        {\n            name: \"ら\",\n            code: \"\\u3089\",\n            romaji: [\"ra\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"り\",\n            code: \"\\u308A\",\n            romaji: [\"ri\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"る\",\n            code: \"\\u308B\",\n            romaji: [\"ru\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"れ\",\n            code: \"\\u308C\",\n            romaji: [\"re\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"ろ\",\n            code: \"\\u308D\",\n            romaji: [\"ro\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //R Diagraphs\n        {\n            name: \"りゃ\",\n            code: \"\\u308A\\u3083\",\n            romaji: [\"rya\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"りゅ\",\n            code: \"\\u308A\\u3085\",\n            romaji: [\"ryu\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"りょ\",\n            code: \"\\u308A\\u3087\",\n            romaji: [\"ryo\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //W Column (Big)\n        {\n            name: \"わ\",\n            code: \"\\u308F\",\n            romaji: [\"wa\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n        {\n            name: \"を\",\n            code: \"\\u3092\",\n            romaji: [\"wo\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n\n        //N\n        {\n            name: \"ん\",\n            code: \"\\u3093\",\n            romaji: [\"n\"],\n            column: KanaColumn.OTHER,\n            diacritical: false\n        }\n    ];\n}\n\nexport default hiragana;","import {KanaColumn} from \"../types/kana/KanaColumn\";\nimport { KanaData } from \"./DataTypes\";\n\nfunction katakana(): KanaData[] {\n    return [\n        //Vowels (Big)\n        {\n            name: \"ア\",\n            code: \"\\u30A2\",\n            romaji: [\"a\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"イ\",\n            code: \"\\u30A4\",\n            romaji: [\"i\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"ウ\",\n            code: \"\\u30A6\",\n            romaji: [\"u\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"エ\",\n            code: \"\\u30A8\",\n            romaji: [\"e\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n        {\n            name: \"オ\",\n            code: \"\\u30AA\",\n            romaji: [\"o\"],\n            column: KanaColumn.VOWEL,\n            diacritical: false\n        },\n\n        //K Column (Big)\n        {\n            name: \"カ\",\n            code: \"\\u30AB\",\n            romaji: [\"ka\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"キ\",\n            code: \"\\u30AD\",\n            romaji: [\"ki\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"ク\",\n            code: \"\\u30AF\",\n            romaji: [\"ku\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"ケ\",\n            code: \"\\u30B1\",\n            romaji: [\"ke\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"コ\",\n            code: \"\\u30B3\",\n            romaji: [\"ko\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacriticals (Dakuten)\n        {\n            name: \"ガ\",\n            code: \"\\u30AC\",\n            romaji: [\"ga\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ギ\",\n            code: \"\\u30AE\",\n            romaji: [\"gi\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"グ\",\n            code: \"\\u30B0\",\n            romaji: [\"gu\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ゲ\",\n            code: \"\\u30B2\",\n            romaji: [\"ge\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ゴ\",\n            code: \"\\u30B4\",\n            romaji: [\"go\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n\n        //K Diagraphs\n        {\n            name: \"キャ\",\n            code: \"\\u30AD\\u30E3\",\n            romaji: [\"kya\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"キュ\",\n            code: \"\\u30AD\\u30E5\",\n            romaji: [\"kyu\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n        {\n            name: \"キョ\",\n            code: \"\\u30AD\\u30E7\",\n            romaji: [\"kyo\"],\n            column: KanaColumn.K,\n            diacritical: false\n        },\n\n        //K Diacritical Diagraphs\n        {\n            name: \"ギャ\",\n            code: \"\\u30AE\\u30E3\",\n            romaji: [\"gya\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ギュ\",\n            code: \"\\u30AE\\u30E5\",\n            romaji: [\"gyu\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n        {\n            name: \"ギョ\",\n            code: \"\\u30AE\\u30E7\",\n            romaji: [\"gyo\"],\n            column: KanaColumn.K,\n            diacritical: true\n        },\n\n        //S Column (Big)\n        {\n            name: \"サ\",\n            code: \"\\u30B5\",\n            romaji: [\"sa\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"シ\",\n            code: \"\\u30B7\",\n            romaji: [\"shi\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"ス\",\n            code: \"\\u30B9\",\n            romaji: [\"su\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"セ\",\n            code: \"\\u30BB\",\n            romaji: [\"se\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"ソ\",\n            code: \"\\u30BD\",\n            romaji: [\"so\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacriticals (Dakuten)\n        {\n            name: \"ザ\",\n            code: \"\\u30B6\",\n            romaji: [\"za\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"シ\",\n            code: \"\\u30B8\",\n            romaji: [\"zi\" ,\"ji\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ズ\",\n            code: \"\\u30BA\",\n            romaji: [\"zu\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ゼ\",\n            code: \"\\u30BC\",\n            romaji: [\"ze\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ゾ\",\n            code: \"\\u30BE\",\n            romaji: [\"zo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //S Diagraphs\n\n        {\n            name: \"シャ\",\n            code: \"\\u30B7\\u30E3\",\n            romaji: [\"sha\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n        {\n            name: \"シュ\",\n            code: \"\\u30B7\\u30E5\",\n            romaji: [\"shu\"],\n            column: KanaColumn.S,\n            diacritical: false\n\n        },\n        {\n            name: \"ショ\",\n            code: \"\\u30B7\\u30E7\",\n            romaji: [\"sho\"],\n            column: KanaColumn.S,\n            diacritical: false\n        },\n\n        //S Diacritical Diagraphs\n        {\n            name: \"ジャ\",\n            code: \"\\u30B8\\u30E3\",\n            romaji: [\"ja\", \"zya\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ジュ\",\n            code: \"\\u30B8\\u30E5\",\n            romaji: [\"ju\", \"zyu\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n        {\n            name: \"ジョ\",\n            code: \"\\u30B8\\u30E7\",\n            romaji: [\"jo\", \"zyo\"],\n            column: KanaColumn.S,\n            diacritical: true\n        },\n\n        //T Column (Big)\n        {\n            name: \"タ\",\n            code: \"\\u30BF\",\n            romaji: [\"ta\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"チ\",\n            code: \"\\u30C1\",\n            romaji: [\"chi\", \"ti\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ツ\",\n            code: \"\\u30C4\",\n            romaji: [\"tsu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"テ\",\n            code: \"\\u30C6\",\n            romaji: [\"te\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"ト\",\n            code: \"\\u30C8\",\n            romaji: [\"to\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacriticals (Dakuten)\n        {\n            name: \"ダ\",\n            code: \"\\u30C0\",\n            romaji: [\"da\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヂ\",\n            code: \"\\u30C2\",\n            romaji: [\"di\", \"ji\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヅ\",\n            code: \"\\u30C5\",\n            romaji: [\"du\", \"zu\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"デ\",\n            code: \"\\u30C7\",\n            romaji: [\"de\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ド\",\n            code: \"\\u30C9\",\n            romaji: [\"do\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //T Diagraphs\n        {\n            name: \"チャ\",\n            code: \"\\u30C1\\u30E3\",\n            romaji: [\"cha\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"チュ\",\n            code: \"\\u30C1\\u30E5\",\n            romaji: [\"chu\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n        {\n            name: \"チョ\",\n            code: \"\\u30C1\\u30E7\",\n            romaji: [\"cho\"],\n            column: KanaColumn.T,\n            diacritical: false\n        },\n\n        //T Diacritical Diagraphs\n        {\n            name: \"ヂャ\",\n            code: \"\\u30C2\\u30E3\",\n            romaji: [\"dya\", \"ja\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヂュ\",\n            code: \"\\u30C2\\u30E5\",\n            romaji: [\"dyu\", \"ju\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n        {\n            name: \"ヂョ\",\n            code: \"\\u30C2\\u30E7\",\n            romaji: [\"dyo\", \"jo\"],\n            column: KanaColumn.T,\n            diacritical: true\n        },\n\n        //N Column (Big)\n        {\n            name: \"ナ\",\n            code: \"\\u30CA\",\n            romaji: [\"na\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ニ\",\n            code: \"\\u30CB\",\n            romaji: [\"ni\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ヌ\",\n            code: \"\\u30CC\",\n            romaji: [\"nu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ネ\",\n            code: \"\\u30CD\",\n            romaji: [\"ne\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ノ\",\n            code: \"\\u30CE\",\n            romaji: [\"no\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n        //N Diagraphs\n        {\n            name: \"ニャ\",\n            code: \"\\u30CB\\u30E3\",\n            romaji: [\"nya\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ニュ\",\n            code: \"\\u30CB\\u30E5\",\n            romaji: [\"nyu\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n        {\n            name: \"ニョ\",\n            code: \"\\u30CB\\u30E7\",\n            romaji: [\"nyo\"],\n            column: KanaColumn.N,\n            diacritical: false\n        },\n\n        //H Column (Big)\n        {\n            name: \"ハ\",\n            code: \"\\u30CF\",\n            romaji: [\"ha\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヒ\",\n            code: \"\\u30D2\",\n            romaji: [\"hi\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"フ\",\n            code: \"\\u30D5\",\n            romaji: [\"hu\", \"fu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヘ\",\n            code: \"\\u30D8\",\n            romaji: [\"he\", \"e\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ホ\",\n            code: \"\\u30DB\",\n            romaji: [\"ho\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacriticals (Dakuten)\n        {\n            name: \"バ\",\n            code: \"\\u30D0\",\n            romaji: [\"ba\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ビ\",\n            code: \"\\u30D3\",\n            romaji: [\"bi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ブ\",\n            code: \"\\u30D6\",\n            romaji: [\"bu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ベ\",\n            code: \"\\u30D9\",\n            romaji: [\"be\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ボ\",\n            code: \"\\u30DC\",\n            romaji: [\"bo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacriticals (Handakuten)\n        {\n            name: \"パ\",\n            code: \"\\u30D1\",\n            romaji: [\"pa\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ピ\",\n            code: \"\\u30D4\",\n            romaji: [\"pi\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"プ\",\n            code: \"\\u30D7\",\n            romaji: [\"pu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ペ\",\n            code: \"\\u30DA\",\n            romaji: [\"pe\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ポ\",\n            code: \"\\u30DD\",\n            romaji: [\"po\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diagraphs\n        {\n            name: \"ヒャ\",\n            code: \"\\u30D2\\u30E3\",\n            romaji: [\"hya\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヒュ\",\n            code: \"\\u30D2\\u30E5\",\n            romaji: [\"hyu\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n        {\n            name: \"ヒョ\",\n            code: \"\\u30D2\\u30E7\",\n            romaji: [\"hyo\"],\n            column: KanaColumn.H,\n            diacritical: false\n        },\n\n        //H Diacritical Diagraphs (Dakuten)\n        {\n            name: \"ビャ\",\n            code: \"\\u30D3\\u30E3\",\n            romaji: [\"bya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ビュ\",\n            code: \"\\u30D3\\u30E5\",\n            romaji: [\"byu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ビョ\",\n            code: \"\\u30D3\\u30E7\",\n            romaji: [\"byo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //H Diacritical Diagraphs (Handakuten)\n        {\n            name: \"ピャ\",\n            code: \"\\u30D4\\u30E3\",\n            romaji: [\"pya\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ピュ\",\n            code: \"\\u30D4\\u30E5\",\n            romaji: [\"pyu\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n        {\n            name: \"ピョ\",\n            code: \"\\u30D4\\u30E7\",\n            romaji: [\"pyo\"],\n            column: KanaColumn.H,\n            diacritical: true\n        },\n\n        //M Column (Big)\n        {\n            name: \"マ\",\n            code: \"\\u30DE\",\n            romaji: [\"ma\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ミ\",\n            code: \"\\u30DF\",\n            romaji: [\"mi\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ム\",\n            code: \"\\u30E0\",\n            romaji: [\"mu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"メ\",\n            code: \"\\u30E1\",\n            romaji: [\"me\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"モ\",\n            code: \"\\u30E2\",\n            romaji: [\"mo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //M Diagraphs\n        {\n            name: \"ミャ\",\n            code: \"\\u30DF\\u30E3\",\n            romaji: [\"mya\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ミュ\",\n            code: \"\\u30DF\\u30E5\",\n            romaji: [\"myu\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n        {\n            name: \"ミョ\",\n            code: \"\\u30DF\\u30E7\",\n            romaji: [\"myo\"],\n            column: KanaColumn.M,\n            diacritical: false\n        },\n\n        //Y Column (Big)\n        {\n            name: \"ヤ\",\n            code: \"\\u30E4\",\n            romaji: [\"ya\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"ユ\",\n            code: \"\\u30E6\",\n            romaji: [\"yu\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n        {\n            name: \"ヨ\",\n            code: \"\\u30E8\",\n            romaji: [\"yo\"],\n            column: KanaColumn.Y,\n            diacritical: false\n        },\n\n        //R Column (Big)\n        {\n            name: \"ラ\",\n            code: \"\\u30E9\",\n            romaji: [\"ra\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"リ\",\n            code: \"\\u30EA\",\n            romaji: [\"ri\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"ル\",\n            code: \"\\u30EB\",\n            romaji: [\"ru\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"レ\",\n            code: \"\\u30EC\",\n            romaji: [\"re\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"ロ\",\n            code: \"\\u30ED\",\n            romaji: [\"ro\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //R Diagraphs\n        {\n            name: \"リャ\",\n            code: \"\\u30EA\\u30E3\",\n            romaji: [\"rya\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"リュ\",\n            code: \"\\u30EA\\u30E5\",\n            romaji: [\"ryu\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n        {\n            name: \"リョ\",\n            code: \"\\u30EA\\u30E7\",\n            romaji: [\"ryo\"],\n            column: KanaColumn.R,\n            diacritical: false\n        },\n\n        //W Column (Big)\n        {\n            name: \"ワ\",\n            code: \"\\u30EF\",\n            romaji: [\"wa\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n        {\n            name: \"ヲ\",\n            code: \"\\u30F2\",\n            romaji: [\"wo\"],\n            column: KanaColumn.W,\n            diacritical: false\n        },\n\n        //N\n        {\n            name: \"ン\",\n            code: \"\\u30F3\",\n            romaji: [\"n\"],\n            column: KanaColumn.OTHER,\n            diacritical: false\n        }\n    ];\n}\n\nexport default katakana;","import hiragana from \"../data/Hiragana\";\nimport katakana from \"../data/Katakana\";\nimport { KanaData } from \"../data/DataTypes\";\n\nexport default class RomajiGenerator {\n    private readonly hiragana: KanaData[] = hiragana();\n    private readonly katakana: KanaData[] = katakana();\n\n    private readonly longSounds = new Map([\n        [\"aa\", \"ā\"], [\"ii\", \"ī\"], [\"uu\", \"ū\"], [\"ee\", \"ē\"], [\"oo\", \"ō\"], [\"ou\", \"ō\"],\n        [\"aー\", \"ā\"], [\"iー\", \"ī\"], [\"uー\", \"ū\"], [\"eー\", \"ē\"], [\"oー\", \"ō\"],\n    ]);\n    private readonly sokuons = [\"っ\", \"ッ\"];\n\n    public generate(kana: string): string {\n        let kanaWithDiagraphsReplaced = kana;\n\n        //Replace Diagraphs\n        const hiraganaDiagraphs = hiragana().filter((it: KanaData) => it.name.length === 2);\n        const katakanaDiagraphs = katakana().filter((it: KanaData) => it.name.length === 2);\n\n        hiraganaDiagraphs.concat(katakanaDiagraphs).forEach((data: KanaData) => {\n           kanaWithDiagraphsReplaced = kanaWithDiagraphsReplaced.replaceAll(data.code, data.romaji[0]);\n        });\n\n        //Replace Sokuons\n        const sokuonsReplaced = [...kanaWithDiagraphsReplaced].map((char: string, i: number) => {\n            if (i < kanaWithDiagraphsReplaced.length - 1 && this.sokuons.includes(char)) {\n                //TODO: What if the sokuon is before a diagraph?;\n                const kana = this.hiragana.concat(this.katakana).find((it: KanaData) => it.code === kanaWithDiagraphsReplaced[i + 1]);\n                return kana?.column ?? char;\n            }\n            return char;\n        });\n\n        //Replace Kana\n        let romaji = [...sokuonsReplaced].map((char: string) => {\n            return this.hiragana.concat(this.katakana).find((it: KanaData) => it.code === char)?.romaji[0] ?? char;\n        }).join(\"\");\n\n        //Replace Long Sounds w/Macron Variants\n        this.longSounds.forEach((value: string, key: string) => romaji = romaji.replaceAll(key, value));\n\n        return romaji;\n    }\n}","import { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/results/AnswerMistake.module.scss\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport RomajiGenerator from \"../../utility/RomajiGenerator\";\n\ninterface AnswerMistakeProps {\n    value: Learnable;\n    times: number;\n}\n\nclass AnswerMistake extends Component<AnswerMistakeProps> {\n    render() {\n        const { value, times } = this.props;\n\n        return (\n            <Container className={styles.wrapper}>\n                <Row className={styles.kanaWrapper}>\n                    <p className={styles.kana}>{value.getKana()[0]}</p>\n                </Row>\n\n                <Row className={styles.infoWrapper}>\n                    <Col xs={6} className={styles.col}>\n                        <span className={styles.timesWrong}>x{times}</span>\n                    </Col>\n                    <Col xs={6} className={styles.col}>\n                        <span className={styles.romaji}>\n                            {new RomajiGenerator().generate(value.getKana()[0])}\n                        </span>\n                    </Col>\n                </Row>\n\n            </Container>\n        );\n    }\n}\n\nexport default AnswerMistake;","import { Component } from \"react\";\nimport { Card, Modal } from \"react-bootstrap\";\nimport AnswerMistake from \"./AnswerMistake\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport styles from \"../../styles/sass/components/results/Feedback.module.scss\";\n\nexport interface FeedbackProps {\n    data: Learnable[];\n    show: boolean;\n    onClose: () => void;\n}\n\nclass Feedback extends Component<FeedbackProps> {\n    render() {\n        const { show, data, onClose } = this.props;\n\n        const size = data.length < 5 ? \"sm\" : \"lg\"\n\n        return (\n            <Modal centered show={show} onHide={onClose} contentClassName={styles.modal} size={size}>\n                <Modal.Header closeButton className={styles.header}>\n                    Mistakes\n                </Modal.Header>\n\n                <Modal.Body className={styles.body}>\n                    <Card.Body className={styles.wrapper}>\n                        {[...this.getMistakeCounts()]\n                            .map(([data, times]) => { return { data: data, times: times }})\n                            .sort((a, b) => b.times - a.times)\n                            .map(mistake => {\n                                return(\n                                    <AnswerMistake\n                                        key={mistake.data.getUniqueID()}\n                                        value={mistake.data}\n                                        times={mistake.times}\n                                    />\n                                )\n                            })\n                        }\n                    </Card.Body>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n\n    private getMistakeCounts = (): Map<Learnable, number> => {\n        return this.props.data.reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map<Learnable, number>());\n    }\n}\n\nexport default Feedback;\n","import { Component } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport GameResult from \"../../types/game/GameResult\";\nimport Feedback from \"./Feedback\";\nimport { faAward, faEraser, faGlassCheers, faHeartbeat, faHeartBroken, faHourglassEnd, faTimes, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock, faLightbulb } from \"@fortawesome/free-regular-svg-icons\";\nimport styles from \"../../styles/sass/components/results/GameResultScreen.module.scss\";\nimport { GameFinishReason } from \"../../types/game/GameFinishReason\";\n\nexport interface GameResultScreenProps {\n    onClose: () => void;\n    result: GameResult;\n}\n\ninterface GameResultScreenState {\n    showMistakesModal: boolean;\n}\n\nclass GameResultScreen extends Component<GameResultScreenProps, GameResultScreenState> {\n\n    constructor(props: GameResultScreenProps) {\n        super(props);\n        this.state = {\n            showMistakesModal: false\n        }\n    }\n\n    render() {\n        const { result, onClose } = this.props;\n        const { showMistakesModal } = this.state;\n\n        return (\n            <Container className={styles.wrapper} data-testid=\"game-results-screen\">\n\n                <Feedback\n                    onClose={this.hide}\n                    show={showMistakesModal}\n                    data={result.wrongAnswers}\n                />\n\n                <Row className={styles.header}>\n                    <Col xs={12}>\n                        <div>\n                            <FontAwesomeIcon\n                                fixedWidth\n                                className={styles.titleIcon}\n                                icon={this.getTitleIcon().icon}\n                                style={{ color: this.getTitleIcon().colour }}\n                            />\n                            <span className={styles.title}>{result.reason}</span>\n                        </div>\n                        {!result.success && <p className={styles.score}>{this.getScore(result)}</p>}\n                    </Col>\n                </Row>\n\n                <div className={styles.body}>\n                    <Row className={styles.summary}>\n                        {result.settings.question.score && (\n                            <Col xs={12}>\n                                <div className={styles.attribute}>\n                                    <FontAwesomeIcon\n                                        fixedWidth\n                                        icon={faAward}\n                                        className={[styles.icon, styles.award].join(\" \")}\n                                    />\n                                    <span className={styles.name}>{result.score} Points Scored</span>\n                                </div>\n                            </Col>\n                        )}\n\n                        {result.settings.lives.enabled && (\n                            <Col xs={12}>\n                                <div className={styles.attribute}>\n                                    <FontAwesomeIcon\n                                        fixedWidth\n                                        icon={faHeartbeat}\n                                        className={[styles.icon, styles.heart].join(\" \")}\n                                    />\n                                    <span className={styles.name}>{result.livesRemaining} Lives Remaining</span>\n                                </div>\n                            </Col>\n                        )}\n\n                        {result.settings.hints.enabled && (\n                            <Col xs={12}>\n                                <div className={styles.attribute}>\n                                    <FontAwesomeIcon\n                                        fixedWidth\n                                        icon={faLightbulb}\n                                        className={[styles.icon, styles.hint].join(\" \")}\n                                    />\n                                    <span className={styles.name}>{result.hintsRemaining} Hints Remaining</span>\n                                </div>\n                            </Col>\n                        )}\n\n                        {result.settings.time.timed && (\n                            <Col xs={12}>\n                                <div className={styles.attribute}>\n                                    <FontAwesomeIcon\n                                        fixedWidth\n                                        icon={faClock}\n                                        className={[styles.icon, styles.duration].join(\" \")}\n                                    />\n                                    <span className={styles.name}>{result.duration} Completion Time</span>\n                                </div>\n                            </Col>\n                        )}\n\n                        {/*{result.settings.time.countdown && (\n                            <Col xs={12}>\n                                <div className={styles.attribute}>\n                                    <FontAwesomeIcon\n                                        fixedWidth\n                                        icon={faStopwatch}\n                                        className={[styles.icon, styles.duration].join(\" \")}\n                                    />\n                                    <span className={styles.name}>N/A Average Answer Time</span>\n                                </div>\n                            </Col>\n                        )}*/}\n                    </Row>\n                </div>\n\n                <Row className={styles.footer}>\n                    {result.wrongAnswers.length > 0 && <Col>\n                        <Button onClick={() => this.setState({ showMistakesModal: true})} className={styles.mistakes}>\n                            <FontAwesomeIcon icon={faEraser} fixedWidth /> View Mistakes\n                        </Button>\n                    </Col>}\n\n                    <Col>\n                        <Button variant=\"success\" onClick={onClose} className={styles.finish}>\n                            Finish\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    private getScore = (result: GameResult): string => {\n        const correct = result.correctAnswers.size;\n        const wrong = new Set(result.wrongAnswers).size\n        return \"You answered \" + correct + \"/\" + (correct + wrong) + \" correctly.\";\n    }\n\n    private getTitleIcon = (): { icon: IconDefinition, colour: string} => {\n        const { result } = this.props;\n        switch (result.reason) {\n            case GameFinishReason.EXHAUSTED_QUESTIONS: {\n                return { icon: faGlassCheers, colour: \"#2e6cde\" };\n            }\n            case GameFinishReason.QUIT: {\n                return { icon: faTimes, colour: \"#d43232\" };\n            }\n            case GameFinishReason.NO_LIVES_REMAINING: {\n                return { icon: faHeartBroken, colour: \"#d43232\" };\n            }\n            case GameFinishReason.NO_TIME_REMAINING: {\n                return { icon: faHourglassEnd, colour: \"#db8632\" };\n            }\n        }\n    }\n\n    private hide = () => {\n        this.setState({ showMistakesModal: false });\n    }\n}\n\nexport default GameResultScreen;\n","import { Nav } from \"react-bootstrap\";\nimport React from \"react\";\n\nexport interface HashLinkProps {\n    style?: {};\n    path?: string;\n    disabled?: boolean;\n    className?: string;\n    onClick?: () => void;\n}\n\nconst HashLink = (props: React.PropsWithChildren<HashLinkProps>) => {\n    const { path, className, disabled, style, children, onClick } = props;\n\n    const href = path ? process.env.REACT_APP_BASE_PATH + path : \"\";\n\n    return (\n        <span onClick={onClick}>\n            <Nav.Link href={href} className={className} disabled={disabled} style={style}>\n                {children}\n            </Nav.Link>\n        </span>\n    );\n}\n\nexport default HashLink;\n","import styles from \"../../styles/sass/components/ui/ScrollableContainer.module.scss\";\nimport { PropsWithChildren } from \"react\";\n\nexport interface ScrollableContainerProps {\n    className?: string;\n    maxHeight?: number;\n    height?: number;\n    hideScrollBar?: boolean;\n}\n\nconst ScrollableContainer = (props: PropsWithChildren<ScrollableContainerProps>) => {\n    const { className, maxHeight, height, hideScrollBar, children } = props;\n\n    const classes = [styles.container, className];\n\n    if (hideScrollBar) {\n        classes.push(styles.hideScroll);\n    }\n\n    return (\n        <div className={classes.join(\" \")} style={{ maxHeight: maxHeight, height: height }}>\n            {children}\n        </div>\n    );\n}\n\nexport default ScrollableContainer;\n","export interface ConditionalWrapperProps {\n    condition: boolean;\n    wrapper: (child: JSX.Element) => JSX.Element;\n    children: JSX.Element;\n}\n\nconst ConditionalWrapper = (props: ConditionalWrapperProps) => {\n    const { condition, wrapper, children } = props;\n    return condition ? wrapper(children) : children;\n}\n\nexport default ConditionalWrapper;\n","import { Form, Nav, Overlay, Popover } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { PropsWithChildren, ReactElement, ReactNode, useRef, useState } from \"react\";\nimport HashLink from \"../layout/HashLink\";\nimport ScrollableContainer from \"./ScrollableContainer\";\nimport ConditionalWrapper from \"./ConditionalWrapper\";\nimport styles from \"../../styles/sass/components/ui/NavigationButton.module.scss\";\n\nexport interface NavigationButtonProps {\n    text: string;\n    icon: IconDefinition;\n    width?: number;\n    className?: string;\n    menuClass?: string;\n    iconClass?: string;\n    textClass?: string;\n    disabled?: boolean;\n    disableDropdown?: boolean;\n    searchable?: boolean;\n    show?: number;\n    onClick?: () => void;\n}\n\nexport interface ItemProps {\n    icon?: IconDefinition;\n    iconClass?: string;\n    className?: string;\n    href?: string;\n    style?: {};\n    onClick?: (value: string) => void;\n}\n\nconst Item = (props: PropsWithChildren<ItemProps>) => {\n\n    const handleClick = () => {\n        props.onClick?.(props.children as string)\n    }\n\n    const className = [props.className, styles.item].join(\" \");\n    const key = props.children?.toString();\n\n    return (\n        <div className={styles.itemWrapper} key={`${key}-wrapper`}>\n            {props.icon && (\n                <FontAwesomeIcon\n                    fixedWidth\n                    icon={props.icon}\n                    key={`${key}-icon`}\n                    className={[styles.itemIcon, props.iconClass].join(\" \")}\n                />\n            )}\n\n            <HashLink path={props.href} onClick={handleClick} className={className} style={props.style} key={key}>\n                {props.children}\n            </HashLink>\n        </div>\n    );\n};\n\nconst NavigationButton = (props: PropsWithChildren<NavigationButtonProps>) => {\n    const [show, setShow] = useState(false);\n    const [search, setSearch] = useState(\"\");\n    const [expandSearch, setExpandSearch] = useState(false);\n    const ref = useRef(null);\n    const targetRef = useRef(null);\n\n    const handleClick = () => {\n        if (!props.disableDropdown) {\n            setShow(!show);\n        } else {\n            props.onClick?.();\n        }\n    };\n\n    const handleHide = () => {\n        setShow(false);\n    };\n\n    const handleExited = () => {\n        setSearch(\"\")\n        setExpandSearch(false);\n    }\n\n    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const search = e.target.value;\n        setSearch(search);\n        if (!search) {\n            setExpandSearch(false);\n        }\n    }\n\n    const className = [props.className, styles.link].join(\" \");\n\n    return (\n        <div ref={ref} className={styles.container}>\n            <Nav.Link className={className} onClick={handleClick} disabled={props.disabled}>\n                <div>\n                    <FontAwesomeIcon\n                        fixedWidth\n                        icon={props.icon}\n                        className={[props.iconClass, show ? styles.active : \"\", styles.icon].join(\" \")}\n                    />\n                </div>\n\n                <span ref={targetRef} className={[props.textClass, show ? styles.active : \"\", styles.text].join(\" \")}>\n                    {props.text}\n                </span>\n            </Nav.Link>\n\n            <Overlay\n                show={show}\n                rootClose={true}\n                placement=\"bottom\"\n                target={targetRef}\n                onHide={handleHide}\n                onExited={handleExited}\n                container={ref.current}\n            >\n                <Popover id={props.text + \"-button\"} className={styles.popover} style={{ width: props.width }}>\n                    {props.searchable && <Form.Control\n                        type=\"text\"\n                        value={search}\n                        placeholder=\"Search\"\n                        onChange={handleSearch}\n                        className={styles.search}\n                        onFocus={() => setExpandSearch(true)}\n                        style={{ height: expandSearch ? 45 : 30 }}\n                    />}\n\n                    <Popover.Content className={styles.content}>\n                        <ConditionalWrapper\n                            condition={!!props.show}\n                            wrapper={(children) => (\n                                <ScrollableContainer height={props.show! * 55} hideScrollBar>\n                                    {children}\n                                </ScrollableContainer>\n                            )}>\n                            <>{\n                                React.Children.map(props.children, (child) => child)?.filter((child: ReactNode) => {\n                                    const value = (child as ReactElement).props.children.toString();\n                                    return search === \"\" || value.toLowerCase().includes(search.toLowerCase());\n                                })\n                            }</>\n                        </ConditionalWrapper>\n                    </Popover.Content>\n                </Popover>\n            </Overlay>\n        </div>\n\n    );\n}\n\nNavigationButton.Item = Item;\nexport default NavigationButton;\n","export enum Theme {\n    DARK = \"Dark Mode\", LIGHT = \"Light Mode\"\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface FontState {\n    selected: string;\n}\n\nconst initialState: FontState = {\n    selected: \"\"\n}\n\nexport const fontSlice = createSlice({\n    name: 'font',\n    initialState,\n    reducers: {\n        setFont: (state, action: PayloadAction<string>) => {\n            state.selected = action.payload;\n        },\n    }\n});\n\nexport const { setFont } = fontSlice.actions\nexport default fontSlice.reducer;\n","import React, { useState } from \"react\";\nimport { faCheck, faFont } from \"@fortawesome/free-solid-svg-icons\";\nimport menuStyles from \"../../../styles/sass/components/layout/ControlsMenu.module.scss\";\nimport NavigationButton from \"../NavigationButton\";\nimport { useFontDispatch, useFontSelector } from \"../../../hooks\";\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport styles from \"../../../styles/sass/components/ui/buttons/FontSelectorButton.module.scss\";\nimport { setFont } from \"../../../slices/FontSlice\";\n\ninterface FontSelectorProps {\n    className?: string;\n}\n\ninterface Font {\n    displayName: string;\n    name: string;\n}\n\nconst FontSelectorButton = (props: FontSelectorProps) => {\n\n    const [selected, setSelected] = useState(\"Default\");\n    const fontDispatcher = useFontDispatch();\n\n    const handleSelect = (value: string) => {\n        setSelected(value);\n        const font = fonts.find(it => it.displayName === value)?.name!;\n        fontDispatcher(setFont(font));\n    }\n\n    const fonts: Font[] = [\n        { displayName: \"Default\", name: \"\" },\n        { displayName: \"Handwriting\", name: \"SanafonMugi Handwriting\" },\n        { displayName: \"Gothic\", name: \"K Gothic\" },\n        { displayName: \"Mincho\", name: \"Appli Mincho\" }, //アプリ明朝 <- Name in Japanese\n        { displayName: \"Test\", name: \"Test\" }\n    ];\n\n    return (\n        <NavigationButton\n            show={4}\n            searchable\n            text=\"Font\"\n            icon={faFont}\n            menuClass={styles.menu}\n            className={props.className}\n            iconClass={menuStyles.icon}\n            textClass={menuStyles.linkText}\n        >\n            {fonts.map((font: Font) => {\n                const isSelected = selected === font.displayName;\n\n                return (\n                    <NavigationButton.Item\n                        onClick={handleSelect}\n                        key={font.displayName}\n                        className={styles.font}\n                        iconClass={isSelected ? styles.selected : styles.inactive}\n                        style={{ fontFamily: font.name }}\n                        icon={isSelected ? faCheck : faCircle}\n                    >\n                        {font.displayName}\n                    </NavigationButton.Item>\n                );\n            })}\n        </NavigationButton>\n    );\n}\n\nexport default FontSelectorButton;\n","export enum AppMode {\n    LEARN, PLAY\n}\n\nexport function fromString(value: string): AppMode {\n    return value === \"learn\" ? AppMode.LEARN : AppMode.PLAY\n}","import { Component } from \"react\";\nimport { Theme } from \"../../../types/Theme\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLightbulb, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { Nav } from \"react-bootstrap\";\nimport menuStyles from \"../../../styles/sass/components/layout/ControlsMenu.module.scss\";\n\nexport interface ThemeButtonProps {\n    className?: string;\n}\n\ninterface ThemeButtonState {\n    theme: Theme;\n}\n\nclass ThemeButton extends Component<ThemeButtonProps, ThemeButtonState> {\n    constructor(props: ThemeButtonProps | Readonly<ThemeButtonProps>) {\n        super(props);\n        this.state = {\n            theme: Theme.DARK\n        }\n    }\n\n    render() {\n        const { className } = this.props;\n        const { theme } = this.state;\n\n        return (\n            <Nav.Link className={className} onClick={this.handleOnClick}>\n                <div>\n                    <FontAwesomeIcon icon={theme === Theme.DARK ? faLightbulb : faMoon} className={menuStyles.icon} />\n                </div>\n                <span className={menuStyles.linkText}>{theme === Theme.DARK ? \"Light\" : \"Dark\"}</span>\n            </Nav.Link>\n        );\n    }\n\n    private handleOnClick = () => {\n        switch(this.state.theme) {\n            case Theme.DARK: {\n                this.setState({ theme: Theme.LIGHT });\n                break;\n            }\n            case Theme.LIGHT: {\n                this.setState({ theme: Theme.DARK });\n                break;\n            }\n        }\n    }\n}\n\nexport default ThemeButton;\n","import { Component } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGamepad, faGraduationCap } from \"@fortawesome/free-solid-svg-icons\";\nimport { AppMode } from \"../../../types/AppMode\";\nimport menuStyles from \"../../../styles/sass/components/layout/ControlsMenu.module.scss\";\n\nexport interface AppModeButtonProps {\n    onClick: (mode: AppMode) => void;\n    mode: AppMode;\n    disabled: boolean;\n    className?: string;\n}\n\ninterface AppModeButtonState {\n    mode: AppMode;\n}\n\nclass AppModeButton extends Component<AppModeButtonProps, AppModeButtonState> {\n    constructor(props: AppModeButtonProps | Readonly<AppModeButtonProps>) {\n        super(props);\n        this.state = {\n            mode: this.props.mode\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<AppModeButtonProps>, prevState: Readonly<AppModeButtonState>) {\n        const { mode } = this.state;\n        if (prevState.mode !== mode) {\n            this.props.onClick(mode);\n        }\n    }\n\n    render() {\n        const { className, disabled } = this.props;\n        const { mode } = this.state;\n\n        return (\n            <Nav.Link className={className} onClick={this.handleOnClick} disabled={disabled}>\n                <div>\n                    <FontAwesomeIcon\n                        icon={mode === AppMode.PLAY ? faGraduationCap : faGamepad}\n                        className={menuStyles.icon}\n                    />\n                </div>\n                <span className={menuStyles.linkText}>\n                    {mode === AppMode.PLAY ? \"Learn\" : \"Play\"}\n                </span>\n            </Nav.Link>\n        );\n    }\n\n    private handleOnClick = () => {\n        const { mode } = this.state;\n        switch(mode) {\n            case AppMode.LEARN: {\n                this.setState({ mode: AppMode.PLAY });\n                //this.props.onClick(AppMode.LEARN);\n                break;\n            }\n            case AppMode.PLAY: {\n                this.setState({ mode: AppMode.LEARN });\n                //this.props.onClick(AppMode.PLAY);\n                break;\n            }\n        }\n    }\n}\n\nexport default AppModeButton;","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface User {\n    username: string;\n    nickname?: string;\n}\n\nexport interface UserState {\n    user?: User;\n}\n\nconst initialState: UserState = {\n    user: undefined\n}\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser: (state, action: PayloadAction<User>) => {\n            state.user = action.payload;\n        },\n        clearUser: (state) => {\n            state.user = undefined;\n        }\n    }\n});\n\nexport const { setUser, clearUser } = userSlice.actions\nexport default userSlice.reducer;\n","import React from \"react\";\nimport { faChartBar, faDoorOpen, faUser, faUserCircle, faUserTie } from \"@fortawesome/free-solid-svg-icons\";\nimport { useUserDispatch, useUserSelector } from \"../../hooks\";\nimport { clearUser } from \"../../slices/UserSlice\";\nimport menuStyles from \"../../styles/sass/components/layout/ControlsMenu.module.scss\";\nimport styles from \"../../styles/sass/components/user/UserButton.module.scss\";\nimport NavigationButton from \"../ui/NavigationButton\";\n\nexport interface UserButtonProps {\n    onClick: () => void;\n    disabled: boolean;\n}\n\nconst UserButton = (props: UserButtonProps) => {\n    const userDispatch = useUserDispatch();\n    const user = useUserSelector(state => state.user.user);\n\n    const getButtonText = (): string => {\n        if (user) {\n            if (user.nickname) {\n                return user.nickname;\n            } else {\n                return user.username;\n            }\n        } else {\n            return \"Login\";\n        }\n    }\n\n    return (\n        <NavigationButton\n            text={getButtonText()}\n            onClick={props.onClick}\n            disableDropdown={!user}\n            disabled={props.disabled}\n            iconClass={menuStyles.icon}\n            textClass={menuStyles.linkText}\n            icon={user ? faUserTie : faUser}\n        >\n            <NavigationButton.Item icon={faUserCircle} iconClass={styles.profile}>\n                Profile\n            </NavigationButton.Item>\n\n            <NavigationButton.Item icon={faChartBar} iconClass={styles.stats}>\n                Stats\n            </NavigationButton.Item>\n\n            <NavigationButton.Item icon={faDoorOpen} onClick={() => userDispatch(clearUser())} iconClass={styles.logout}>\n                Logout\n            </NavigationButton.Item>\n        </NavigationButton>\n    );\n}\n\nexport default UserButton;\n","import NavigationButton from \"../NavigationButton\";\nimport { faBook, faInfoCircle, faPaintBrush, faQuestion } from \"@fortawesome/free-solid-svg-icons\";\nimport menuStyles from \"../../../styles/sass/components/layout/ControlsMenu.module.scss\";\nimport styles from \"../../../styles/sass/components/ui/buttons/HelpButton.module.scss\";\n\nconst HelpButton = () => {\n    return (\n        <NavigationButton text=\"Help\" icon={faInfoCircle} iconClass={menuStyles.icon} textClass={menuStyles.linkText} width={250}>\n            <NavigationButton.Item icon={faPaintBrush} href=\"/help\" iconClass={styles.kanji}>\n                Jōyō Kanji Bank\n            </NavigationButton.Item>\n\n            <NavigationButton.Item icon={faBook} href=\"/help\" iconClass={styles.genki}>\n                Genki Knowledge Bank\n            </NavigationButton.Item>\n\n            <NavigationButton.Item icon={faQuestion} href=\"/help\" iconClass={styles.faq}>\n                Frequently Asked Questions\n            </NavigationButton.Item>\n        </NavigationButton>\n    );\n}\n\nexport default HelpButton;\n","import { Col, Container, Nav, Navbar, Row } from \"react-bootstrap\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FontSelectorButton from \"../ui/buttons/FontSelectorButton\";\nimport HashLink from \"./HashLink\";\nimport ThemeButton from \"../ui/buttons/ThemeButton\";\nimport styles from \"../../styles/sass/components/layout/ControlsMenu.module.scss\";\nimport AppModeButton from \"../ui/buttons/AppModeButton\";\nimport { AppMode } from \"../../types/AppMode\";\nimport UserButton from \"../user/UserButton\";\nimport HelpButton from \"../ui/buttons/HelpButton\";\n\nexport interface ControlsMenuProps {\n    onChangeAppMode: (mode: AppMode) => void;\n    onLaunchLoginModal: () => void;\n    startingMode: AppMode;\n    active: boolean;\n}\n\nconst ControlsMenu = (props: ControlsMenuProps) => {\n    const { onChangeAppMode, onLaunchLoginModal, startingMode, active } = props;\n\n    return (\n        <Navbar variant=\"dark\" fixed=\"top\" className={styles.navbar}>\n            <Container className={styles.innerWrapper} fluid>\n                <Nav className={styles.nav}>\n                    <Row className={styles.row} noGutters>\n                        <Col>\n                            <HashLink path=\"/\" className={styles.navLink} disabled={!active}>\n                                <div>\n                                    <FontAwesomeIcon icon={faHome} className={styles.icon}/>\n                                </div>\n                                <span className={styles.linkText}>Home</span>\n                            </HashLink>\n                        </Col>\n\n                        <Col>\n                            <AppModeButton\n                                key={startingMode}\n                                className={styles.navLink}\n                                mode={startingMode}\n                                onClick={onChangeAppMode}\n                                disabled={!active}\n                            />\n                        </Col>\n\n                        <Col>\n                            <ThemeButton className={styles.navLink}/>\n                        </Col>\n\n                        <Col>\n                            <FontSelectorButton className={styles.navLink} />\n                        </Col>\n\n                        <Col>\n                            <HelpButton />\n                        </Col>\n\n                        <Col>\n                           <UserButton onClick={onLaunchLoginModal} disabled={!active} />\n                        </Col>\n                    </Row>\n                </Nav>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default ControlsMenu;\n","import { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSettings from \"./settings/data/DataSettings\";\nimport ModeSettings from \"./settings/ModeSettings\";\n\nabstract class SessionMode {\n    private readonly _displayName: string;\n    private readonly _colour: string;\n    private readonly _icon: IconDefinition | string;\n    private readonly _dataSettings: DataSettings;\n    private readonly _modeSettings: ModeSettings;\n\n    protected constructor(displayName: string, colour: string, icon: IconDefinition | string,\n                          dataSettings: DataSettings, modeSettings: ModeSettings) {\n        this._displayName = displayName;\n        this._colour = colour;\n        this._icon = icon;\n        this._dataSettings = dataSettings;\n        this._modeSettings = modeSettings;\n    }\n\n    get displayName(): string {\n        return this._displayName;\n    }\n\n    get colour(): string {\n        return this._colour;\n    }\n\n    get icon(): IconDefinition | string {\n        return this._icon;\n    }\n\n    get dataSettings(): DataSettings {\n        return this._dataSettings;\n    }\n\n    get modeSettings(): ModeSettings {\n        return this._modeSettings;\n    }\n}\n\nexport default SessionMode;\n","import SessionMode from \"./SessionMode\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSettings from \"./settings/data/DataSettings\";\nimport LearnSettings from \"./settings/LearnSettings\";\n\nexport default class LearnMode extends SessionMode {\n    constructor(displayName: string, colour: string, icon: IconDefinition | string, dataSettings: DataSettings, settings: LearnSettings) {\n        super(displayName, colour, icon, dataSettings, settings);\n    }\n}\n","import ModeSettings from \"./ModeSettings\";\n\n/**\n * Learn specific settings might be added in future.\n * E.g Hints\n */\nexport default class LearnSettings implements ModeSettings {\n\n}","import Topic from \"../../../Topic\";\n\nexport default class DataSettings {\n    private readonly _topic: Topic;\n    private readonly _quantity: number | undefined;\n\n    protected constructor(topic: Topic, quantity?: number) {\n        this._topic = topic;\n        this._quantity = quantity;\n    }\n\n    get topic(): Topic {\n        return this._topic;\n    }\n\n    get quantity(): number | undefined {\n        return this._quantity;\n    }\n}","import Topic from \"../../../Topic\";\nimport DataSettings from \"./DataSettings\";\n\n/**\n * Settings used to by {@link NumbersRepository} to customise\n * the selection of definitions returned.\n * @see NumbersSettingsBuilder\n */\nexport default class NumbersSettings extends DataSettings {\n    private readonly _numbers: boolean;\n    private readonly _counters: boolean;\n    private readonly _age: boolean;\n    private readonly _exceptions: boolean;\n    private readonly _units: boolean;\n    private readonly _sequence: boolean;\n\n    constructor(numbers: boolean, counters: boolean, age: boolean, exceptions: boolean, units: boolean, sequence: boolean, quantity?: number) {\n        super(Topic.NUMBERS, quantity);\n        this._numbers = numbers;\n        this._counters = counters;\n        this._age = age;\n        this._exceptions = exceptions;\n        this._units = units;\n        this._sequence = sequence;\n    }\n\n    get numbers(): boolean {\n        return this._numbers;\n    }\n\n    get counters(): boolean {\n        return this._counters;\n    }\n\n    get age(): boolean {\n        return this._age;\n    }\n\n    get exceptions(): boolean {\n        return this._exceptions;\n    }\n\n    get units(): boolean {\n        return this._units;\n    }\n\n    get sequence(): boolean {\n        return this._sequence;\n    }\n}\n\nexport class NumbersSettingsBuilder {\n    private _numbers: boolean = false;\n    private _counters: boolean = false;\n    private _age: boolean = false;\n    private _exceptions: boolean = false;\n    private _units: boolean = false;\n    private _sequence: boolean = false;\n    private _quantity: number | undefined;\n\n    withNumbers(include: boolean = true): NumbersSettingsBuilder {\n        this._numbers = include;\n        return this;\n    }\n\n    withCounters(include: boolean = true): NumbersSettingsBuilder {\n        this._counters = include;\n        return this;\n    }\n\n    withAge(include: boolean = true): NumbersSettingsBuilder {\n        this._age = include;\n        return this;\n    }\n\n    withExceptions(include: boolean = true): NumbersSettingsBuilder {\n        this._exceptions = include;\n        return this;\n    }\n\n    withUnits(include: boolean = true): NumbersSettingsBuilder {\n        this._units = include;\n        return this;\n    }\n\n    withSequence(include: boolean = true): NumbersSettingsBuilder {\n        this._sequence = include;\n        return this;\n    }\n\n    withQuantity(quantity: number): NumbersSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    build(): NumbersSettings {\n        return new NumbersSettings(this._numbers, this._counters, this._age, this._exceptions, this._units, this._sequence, this._quantity);\n    }\n}","import { faBaby, faRuler, faSort, faSortNumericDown, faStopwatch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { LearnMenuModes } from \"../../MenuModes\";\nimport LearnMode from \"../../session/LearnMode\";\nimport LearnSettings from \"../../session/settings/LearnSettings\";\nimport { NumbersSettingsBuilder } from \"../../session/settings/data/NumbersSettings\";\n\nexport default class LearnNumbersModes implements LearnMenuModes {\n    getModes(): LearnMode[] {\n        const defaultLearnSettings = new LearnSettings();\n\n        return [\n            new LearnMode(\"Numbers\", \"#fdb40e\", faSortNumericDown,\n                new NumbersSettingsBuilder().withNumbers().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Counters\", \"#ff7730\", faStopwatch,\n                new NumbersSettingsBuilder().withCounters().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Age\", \"#1785e2\", faBaby,\n                new NumbersSettingsBuilder().withAge().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Exceptions\", \"#a01219\", faTimes,\n                new NumbersSettingsBuilder().withExceptions().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Units\", \"#fc3131\", faRuler,\n                new NumbersSettingsBuilder().withUnits().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Sequence\", \"#fc3131\", faSort,\n                new NumbersSettingsBuilder().withSequence().build(),\n                defaultLearnSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"NUMBERS\"\n    }\n}","export class KyoikuGrade {\n    private readonly _value: number;\n    private readonly _quantity: number;\n\n    private constructor(value: number, quantity: number) {\n        this._value = value;\n        this._quantity = quantity;\n    }\n\n    public static readonly ONE = new KyoikuGrade(1, 80);\n    public static readonly TWO = new KyoikuGrade(2, 160);\n    public static readonly THREE = new KyoikuGrade(3, 200);\n    public static readonly FOUR = new KyoikuGrade(4, 220);\n    public static readonly FIVE = new KyoikuGrade(5, 185);\n    public static readonly SIX = new KyoikuGrade(6, 181);\n    public static readonly SEVEN = new KyoikuGrade(7, 0);\n    public static readonly EIGHT = new KyoikuGrade(8, 0);\n    public static readonly NINE = new KyoikuGrade(9, 0);\n    public static readonly TEN = new KyoikuGrade(10, 0);\n    public static readonly ELEVEN = new KyoikuGrade(11, 0);\n    public static readonly TWELVE = new KyoikuGrade(12, 0);\n    public static readonly UNKNOWN = new KyoikuGrade(0, 0)\n\n    public static readonly ALL = [KyoikuGrade.ONE, KyoikuGrade.TWO, KyoikuGrade.THREE, KyoikuGrade.FOUR, KyoikuGrade.FIVE, KyoikuGrade.SIX]\n\n    public static fromInteger = (value?: number): KyoikuGrade => {\n        switch(value) {\n            case 1: return KyoikuGrade.ONE;\n            case 2: return KyoikuGrade.TWO;\n            case 3: return KyoikuGrade.THREE;\n            case 4: return KyoikuGrade.FOUR;\n            case 5: return KyoikuGrade.FIVE;\n            case 6: return KyoikuGrade.SIX;\n            case 7: return KyoikuGrade.SEVEN;\n            case 8: return KyoikuGrade.EIGHT;\n            case 9: return KyoikuGrade.NINE;\n            case 10: return KyoikuGrade.TEN;\n            case 11: return KyoikuGrade.ELEVEN;\n            case 12: return KyoikuGrade.TWELVE;\n            default: return KyoikuGrade.UNKNOWN\n        }\n    }\n\n    get value(): number {\n        return this._value;\n    }\n\n    get quantity(): number {\n        return this._quantity;\n    }\n}\n","import { KyoikuGrade } from \"../../../kanji/KyoikuGrade\";\nimport Topic from \"../../../Topic\";\nimport DataSettings from \"./DataSettings\";\n\n/**\n * Settings used by {@link KanjiRepository} to customise\n * the collection of {@link Kanji} returned.\n * @see KanjiSettingsBuilder\n */\nexport default class KanjiSettings extends DataSettings {\n    private readonly _grades: KyoikuGrade[];\n    private readonly _joyo: boolean;\n    private readonly _tags: string[]\n\n    constructor(grades: KyoikuGrade[], joyo: boolean, tags: string[], quantity?: number) {\n        super(Topic.KANJI, quantity);\n        this._grades = grades;\n        this._joyo = joyo;\n        this._tags = tags;\n    }\n\n    get grades(): KyoikuGrade[] {\n        return this._grades;\n    }\n\n    get joyo(): boolean {\n        return this._joyo;\n    }\n\n    get tags(): string[] {\n        return this._tags;\n    }\n}\n\nexport class KanjiSettingsBuilder {\n    private _grades: KyoikuGrade[] = [];\n    private _joyo: boolean = false;\n    private _tags: string[] = [];\n    private _quantity: number | undefined;\n\n    withGrades(grades: KyoikuGrade[]): KanjiSettingsBuilder {\n        this._grades = grades;\n        return this;\n    }\n\n    withJoyoKanji(include: boolean = true): KanjiSettingsBuilder {\n        this._joyo = include;\n        return this;\n    }\n\n    withTags(tags: string[]): KanjiSettingsBuilder {\n        this._tags = tags;\n        return this;\n    }\n\n    withQuantity(quantity?: number): KanjiSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    build(): KanjiSettings {\n        return new KanjiSettings(this._grades, this._joyo, this._tags, this._quantity);\n    }\n}","import { faChalkboardTeacher, faClock, faFillDrip, faPaintBrush, faSchool, faYenSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { KyoikuGrade } from \"../../kanji/KyoikuGrade\";\nimport { LearnMenuModes } from \"../../MenuModes\";\nimport LearnMode from \"../../session/LearnMode\";\nimport { KanjiSettingsBuilder } from \"../../session/settings/data/KanjiSettings\";\nimport LearnSettings from \"../../session/settings/LearnSettings\";\n\nexport default class LearnKanjiModes implements LearnMenuModes {\n    getModes(): LearnMode[] {\n        const defaultLearnSettings = new LearnSettings();\n        const { TEN, SEVEN, EIGHT, ALL, ELEVEN, NINE, TWELVE } = KyoikuGrade;\n\n        return [\n            new LearnMode(\"Kyōiku\", \"#fdb40e\", faSchool, new KanjiSettingsBuilder().withGrades(ALL).build(), defaultLearnSettings),\n            new LearnMode(\"High School\", \"#74d43f\", faChalkboardTeacher,\n                new KanjiSettingsBuilder()\n                    .withGrades([SEVEN, EIGHT, NINE, TEN, ELEVEN, TWELVE])\n                    .build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Jōyō\", \"#ff7730\", faPaintBrush, new KanjiSettingsBuilder().withJoyoKanji(true).build(), defaultLearnSettings),\n            new LearnMode(\"Numbers\", \"#1785e2\", faYenSign, new KanjiSettingsBuilder().withTags([\"number\"]).build(), defaultLearnSettings),\n            new LearnMode(\"Colours\", \"#a01219\", faFillDrip, new KanjiSettingsBuilder().withTags([\"colour\"]).build(), defaultLearnSettings),\n            new LearnMode(\"Time\", \"#fc3131\", faClock, new KanjiSettingsBuilder().withTags([\"time\"]).build(), defaultLearnSettings),\n        ];\n    }\n\n    getTopic(): string {\n        return \"KANJI\"\n    }\n}\n","import Topic from \"../../../Topic\";\nimport DataSettings from \"./DataSettings\";\n\n/**\n * Settings used to by {@link BasicsRepository} to customise\n * the selection of definitions returned.\n * @see BasicsSettingsBuilder\n */\nexport default class BasicsSettings extends DataSettings {\n    private readonly _colours: boolean;\n    private readonly _animals: boolean;\n    private readonly _directions: boolean;\n    private readonly _weather: boolean;\n    private readonly _family: boolean;\n    private readonly _body: boolean;\n\n    constructor(colours: boolean, animals: boolean, directions: boolean, weather: boolean, family: boolean, body: boolean, quantity?: number) {\n        super(Topic.BASICS, quantity);\n        this._colours = colours;\n        this._animals = animals;\n        this._directions = directions;\n        this._weather = weather;\n        this._family = family;\n        this._body = body;\n    }\n\n    get colours(): boolean {\n        return this._colours;\n    }\n\n    get animals(): boolean {\n        return this._animals;\n    }\n\n    get directions(): boolean {\n        return this._directions;\n    }\n\n    get weather(): boolean {\n        return this._weather;\n    }\n\n    get family(): boolean {\n        return this._family;\n    }\n\n    get body(): boolean {\n        return this._body;\n    }\n}\n\nexport class BasicsSettingsBuilder {\n    private _colours: boolean = false;\n    private _animals: boolean = false;\n    private _directions: boolean = false;\n    private _weather: boolean = false;\n    private _family: boolean = false;\n    private _body: boolean = false;\n    private _quantity: number | undefined;\n\n    withColours(include: boolean = true): BasicsSettingsBuilder {\n        this._colours = include;\n        return this;\n    }\n\n    withAnimals(include: boolean = true): BasicsSettingsBuilder {\n        this._animals = include;\n        return this;\n    }\n\n    withDirections(include: boolean = true): BasicsSettingsBuilder {\n        this._directions = include;\n        return this;\n    }\n\n    withWeather(include: boolean = true): BasicsSettingsBuilder {\n        this._weather = include;\n        return this;\n    }\n\n    withFamily(include: boolean = true): BasicsSettingsBuilder {\n        this._family = include;\n        return this;\n    }\n\n    withBody(include: boolean = true): BasicsSettingsBuilder {\n        this._body = include;\n        return this;\n    }\n\n    withQuantity(quantity: number): BasicsSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    build(): BasicsSettings {\n        return new BasicsSettings(this._colours, this._animals, this._directions, this._weather, this._family, this._body, this._quantity);\n    }\n}","import { faCat, faChild, faCloudSunRain, faCompass, faHandPaper, faPalette } from \"@fortawesome/free-solid-svg-icons\";\nimport { LearnMenuModes } from \"../../MenuModes\";\nimport LearnMode from \"../../session/LearnMode\";\nimport LearnSettings from \"../../session/settings/LearnSettings\";\nimport { BasicsSettingsBuilder } from \"../../session/settings/data/BasicsSettings\";\n\nexport default class LearnBasicsModes implements LearnMenuModes {\n    getModes(): LearnMode[] {\n        const defaultLearnSettings = new LearnSettings();\n\n        return [\n            new LearnMode(\"Colours\", \"#fd0e3e\", faPalette,\n                new BasicsSettingsBuilder().withColours().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Animals\", \"#ff7730\", faCat,\n                new BasicsSettingsBuilder().withAnimals().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Directions\", \"#1785e2\", faCompass,\n                new BasicsSettingsBuilder().withDirections().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Weather\", \"#e3c93a\", faCloudSunRain,\n                new BasicsSettingsBuilder().withWeather().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Family\", \"#3ee939\", faChild,\n                new BasicsSettingsBuilder().withFamily().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Body\", \"#5641d0\", faHandPaper,\n                new BasicsSettingsBuilder().withBody().build(),\n                defaultLearnSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"BASICS\";\n    }\n}","import Topic from \"../../../Topic\";\nimport DataSettings from \"./DataSettings\";\n\n/**\n * Settings used to by {@link CalendarRepository} to customise\n * the selection of definitions returned.\n * @see CalendarSettingsBuilder\n */\nexport default class CalendarSettings extends DataSettings {\n    private readonly _days: boolean;\n    private readonly _months: boolean;\n    private readonly _seasons: boolean;\n    private readonly _nouns: boolean;\n    private readonly _phrases: boolean;\n\n    constructor(days: boolean, months: boolean, season: boolean, nouns: boolean, phrases: boolean, quantity?: number) {\n        super(Topic.CALENDAR, quantity);\n        this._days = days;\n        this._months = months;\n        this._seasons = season;\n        this._nouns = nouns;\n        this._phrases = phrases;\n    }\n\n    get days(): boolean {\n        return this._days;\n    }\n\n    get months(): boolean {\n        return this._months;\n    }\n\n    get seasons(): boolean {\n        return this._seasons;\n    }\n\n    get nouns(): boolean {\n        return this._nouns;\n    }\n\n    get phrases(): boolean {\n        return this._phrases;\n    }\n}\n\nexport class CalendarSettingsBuilder {\n    private _days: boolean = false;\n    private _months: boolean = false;\n    private _season: boolean = false;\n    private _nouns: boolean = false;\n    private _phrases: boolean = false;\n    private _quantity: number | undefined;\n\n    withDays(include = true): CalendarSettingsBuilder {\n        this._days = include;\n        return this;\n    }\n\n    withMonths(include = true): CalendarSettingsBuilder {\n        this._months = include;\n        return this;\n    }\n\n    withSeasons(include = true): CalendarSettingsBuilder {\n        this._season = include;\n        return this;\n    }\n\n    withTemporalNouns(include = true): CalendarSettingsBuilder {\n        this._nouns = include;\n        return this;\n    }\n\n    withPhrases(include = true): CalendarSettingsBuilder {\n        this._phrases = include;\n        return this;\n    }\n\n    withQuantity(quantity: number): CalendarSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    build(): CalendarSettings {\n        return new CalendarSettings(this._days, this._months, this._season, this._nouns, this._phrases, this._quantity);\n    }\n}","import { faAlignLeft, faCalendarAlt, faCalendarDay, faClock, faSnowflake, faVial } from \"@fortawesome/free-solid-svg-icons\";\nimport { LearnMenuModes } from \"../../MenuModes\";\nimport LearnMode from \"../../session/LearnMode\";\nimport { CalendarSettingsBuilder } from \"../../session/settings/data/CalendarSettings\";\nimport LearnSettings from \"../../session/settings/LearnSettings\";\n\nexport default class LearnCalendarModes implements LearnMenuModes {\n    getModes(): LearnMode[] {\n        const defaultLearnSettings = new LearnSettings();\n\n        return [\n            new LearnMode(\"Days of the Week\", \"#fdb40e\", faCalendarDay,\n                new CalendarSettingsBuilder().withDays().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Months of the Year\", \"#ff7730\", faCalendarAlt,\n                new CalendarSettingsBuilder().withMonths().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Temporal Nouns\", \"#ec2352\", faClock,\n                new CalendarSettingsBuilder().withTemporalNouns().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Seasonal\", \"#2cade0\", faSnowflake,\n                new CalendarSettingsBuilder().withSeasons().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Common Phrases\", \"#ff6038\", faAlignLeft,\n                new CalendarSettingsBuilder().withPhrases().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Everything\", \"#41d085\", faVial,\n                new CalendarSettingsBuilder().withDays().withMonths().withTemporalNouns().withSeasons().withPhrases().build(),\n                defaultLearnSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"CALENDAR\";\n    }\n}","import { Component } from \"react\";\n\nexport interface DynamicCharacterProps {\n    value: string;\n    classes?: string[] | string;\n    style?: CharacterStyleProps;\n    isDiagraphLeft?: boolean;\n    isDiagraphRight?: boolean;\n}\n\nexport interface CharacterStyleProps {\n    size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n    color?: string;\n    className?: string;\n}\n\nexport class DynamicCharacter extends Component<DynamicCharacterProps> {\n    render() {\n        const { value, style, isDiagraphLeft, isDiagraphRight } = this.props;\n\n        return (\n            <p\n                style={{\n                    fontSize: this.getSize(),\n                    marginLeft: isDiagraphRight ? -this.getMargin() : 0,\n                    marginRight: isDiagraphLeft ? -this.getMargin() : 0,\n                    color: style?.color\n                }}\n                className={this.getClasses()}\n            >\n                {value}\n            </p>\n        );\n    }\n\n    private getClasses = (): string | undefined => {\n        const { classes } = this.props;\n        return typeof classes === \"string\" ? classes : classes?.join(\" \") ?? undefined;\n    }\n\n    private getSize = (): string | undefined => {\n        switch (this.props.style?.size) {\n            case \"xs\":\n                return \"2.5em\";\n            case \"sm\":\n                return \"3em\";\n            case \"md\":\n                return \"5em\";\n            case \"lg\":\n                return \"8em\";\n            case \"xl\":\n                return \"10em\";\n            default:\n                return undefined;\n        }\n    }\n\n    private getMargin = (): number => {\n        switch (this.props.style?.size) {\n            case \"xs\":\n                return 3;\n            case \"sm\":\n                return 4;\n            case \"md\":\n                return 5;\n            case \"lg\":\n                return 8;\n            case \"xl\":\n                return 10;\n            default:\n                return 10;\n        }\n    }\n}\n\nexport default DynamicCharacter;","import React, { Component } from \"react\";\nimport { Kana } from \"../../../types/kana/Kana\";\nimport { Container } from \"react-bootstrap\";\nimport DynamicCharacter, { CharacterStyleProps } from \"../../game/DynamicCharacter\";\nimport styles from \"../../../styles/sass/components/ui/display/KanaDisplay.module.scss\";\n\nexport interface KanaDisplayProps {\n    kana: Kana;\n    blur?: boolean;\n    index?: number;\n    style?: KanaDisplayStyle;\n    onClick?: (kana: Kana) => void;\n}\n\nexport interface KanaDisplayStyle {\n    container?: string[];\n    character?: CharacterStyleProps;\n}\n\ninterface KanaDisplayState {\n    isNotifyingIncorrect: boolean;\n}\n\nclass KanaDisplay extends Component<KanaDisplayProps, KanaDisplayState> {\n    constructor(props: KanaDisplayProps | Readonly<KanaDisplayProps>) {\n        super(props);\n        this.state = {\n            isNotifyingIncorrect: false\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<KanaDisplayProps>, prevState: Readonly<KanaDisplayState>) {\n        if (prevState.isNotifyingIncorrect) {\n            this.setState({ isNotifyingIncorrect: false });\n        }\n    }\n\n    notifyIncorrect = () => {\n        this.setState({ isNotifyingIncorrect: true });\n    }\n\n    render() {\n        const { isNotifyingIncorrect } = this.state;\n        const { blur, kana, style, index, onClick } = this.props;\n\n        const containerClass = style?.container ? style.container : [styles.wrapper];\n        const kanaClass = isNotifyingIncorrect ? styles.redKana : blur ? styles.blur : styles.kana;\n        const leftDiagraphClass = isNotifyingIncorrect ? styles.redKana : blur ? styles.diagraphBlur : styles.diagraphLeft;\n        const rightDiagraphClass = isNotifyingIncorrect ? styles.redKana : blur ? styles.diagraphBlur : styles.diagraphRight;\n        const clickable = onClick ? styles.clickable : \"\";\n        const extraCharacterClass = style?.character?.className ?? \"\";\n\n        const indexVisibility = index && !blur ? 'visible' : 'hidden';\n        const indexColour = style?.character?.color;\n\n        return (\n            <Container className={containerClass.join(\"\")} onClick={this.handleContainerClick}>\n                <span className={styles.index} style={{ color: indexColour, visibility: indexVisibility }}>\n                    {index}\n                </span>\n\n                {kana.isDiagraph() ?\n                    <>\n                        <DynamicCharacter\n                            value={kana.code[0]}\n                            style={style?.character}\n                            classes={[leftDiagraphClass, styles.diagraphLeft, clickable, extraCharacterClass]}\n                            isDiagraphLeft={true}\n                        />\n                        <DynamicCharacter\n                            value={kana.code[1]}\n                            style={style?.character}\n                            classes={[rightDiagraphClass, styles.diagraphRight, clickable, extraCharacterClass]}\n                            isDiagraphRight={true}\n                        />\n                    </> :\n                    <DynamicCharacter\n                        value={kana.code}\n                        style={style?.character}\n                        classes={[kanaClass, clickable, extraCharacterClass]}\n                    />\n                }\n            </Container>\n        );\n    }\n\n    private handleContainerClick = () => {\n        this.props.onClick?.(this.props.kana);\n    }\n}\n\n\nexport default KanaDisplay;\n","import { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/learn/FlashCardFront.module.scss\";\n\nexport interface FlashCardFrontProps {\n    className?: string;\n    onClick: () => void;\n    borderColour?: string;\n}\n\nclass FlashCardFront extends Component<FlashCardFrontProps> {\n    render() {\n        const { onClick, className, borderColour, children } = this.props;\n\n        const border = borderColour ?? \"#3996e5\";\n\n        return (\n            <Container className={[className, styles.wrapper].join(\" \")} onClick={onClick} style={{ borderColor: border }}>\n                <Row>\n                    <Col>\n                        {children}\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default FlashCardFront;","import KanaDisplay from \"../../ui/display/KanaDisplay\";\nimport { CardFaceProps } from \"../FlashCard\";\nimport { Kana } from \"../../../types/kana/Kana\";\nimport FlashCardFront from \"../FlashCardFront\";\nimport styles from \"../../../styles/sass/components/learn/kana/KanaFlashCardFront.module.scss\";\n\nconst KanaFlashCardFront = (props: CardFaceProps) => {\n    const { data, onClick } = props;\n\n    return (\n        <FlashCardFront onClick={onClick} className={styles.wrapper}>\n            <KanaDisplay kana={data as Kana} style={{ character: { className: styles.kana } }} />\n        </FlashCardFront>\n    )\n};\n\nexport default KanaFlashCardFront;","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../../styles/sass/components/ui/buttons/FlashCardResetButton.module.scss\";\n\nexport interface FlashCardResetButtonProps {\n    onClick: () => void;\n}\n\nclass FlashCardResetButton extends Component<FlashCardResetButtonProps> {\n    render() {\n        return (\n            <Button className={styles.button} variant=\"outline-danger\" onClick={this.props.onClick} title=\"Reset\">\n                <FontAwesomeIcon icon={faReply} />\n            </Button>\n        );\n    }\n}\n\nexport default FlashCardResetButton;","import { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport FlashCardResetButton from \"../ui/buttons/FlashCardResetButton\";\nimport styles from \"../../styles/sass/components/learn/FlashCardBack.module.scss\"\n\nexport interface FlashCardBackProps {\n    title: string;\n    className?: string;\n    borderColour?: string;\n    onReset: () => void;\n}\n\nclass FlashCardBack extends Component<FlashCardBackProps> {\n    render() {\n        const { title, className, borderColour, onReset, children } = this.props;\n\n        return (\n            <Container className={[styles.wrapper, className].join(\" \")} style={{ borderColor: borderColour ?? \"#3996e5\"}}>\n                <Row className={styles.header}>\n                    <p className={styles.title}>{title}</p>\n                    <FlashCardResetButton onClick={onReset} />\n                </Row>\n\n                <Row className={styles.body}>\n                    {children}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default FlashCardBack;","import React from \"react\";\nimport styles from \"../../styles/sass/components/learn/DefinitionList.module.scss\";\n\nconst DefinitionList: React.FC<{ words: string[] | undefined, mode: \"inline\" | \"stacked\" }> = ({ words, mode }) => {\n    return (\n        <div className={mode === \"inline\" ? styles.inline : styles.stacked}>\n            {\n                words?.map((meaning: string, i: number) => {\n                    if (i < words!.length - 1) {\n                        if (mode === \"stacked\") {\n                            return (\n                                <div key={i}>\n                                    <p className={styles.meaning}>{meaning}</p>\n                                    <p className={styles.or}> or</p>\n                                </div>\n                            );\n                        } else {\n                            return [\n                                <span className={styles.meaning} key={\"meaning-\" + i}>{meaning}</span>,\n                                <span className={styles.or} key={\"or-\" + i}> or</span>\n                            ]\n                        }\n                    } else {\n                        if (mode === \"stacked\") {\n                            return <p className={styles.meaning} key={i}> {meaning}</p>\n                        } else {\n                            return <span className={styles.meaning} key={i}> {meaning}</span>\n                        }\n                    }\n                })\n            }\n        </div>\n    );\n}\n\nexport default DefinitionList;","import FlashCardBack from \"../FlashCardBack\";\nimport { CardFaceProps } from \"../FlashCard\";\nimport styles from \"../../../styles/sass/components/learn/kana/KanaFlashCardBack.module.scss\"\nimport DefinitionList from \"../DefinitionList\";\n\nconst KanaFlashCardBack = (props: CardFaceProps) => {\n    const { data, onClick } = props;\n\n    return (\n        <FlashCardBack title={data.getTitle()} onReset={onClick} className={styles.wrapper}>\n            <div className={styles.romaji}>\n                <DefinitionList words={data.getMeanings()} mode=\"inline\" />\n            </div>\n        </FlashCardBack>\n    );\n};\n\nexport default KanaFlashCardBack;","import { Container, Row } from \"react-bootstrap\";\nimport { Kanji } from \"../../../types/kanji/Kanji\";\nimport { CardFaceProps } from \"../FlashCard\";\nimport DynamicDisplay from \"../../ui/display/DynamicDisplay\";\nimport styles from \"../../../styles/sass/components/learn/kanji/KanjiFlashCardFront.module.scss\";\n\nfunction KanjiFlashCardFront(props: CardFaceProps) {\n    const { data, onClick } = props;\n    const kanji = data as Kanji;\n    return (\n        <Container className={styles[\"wrapper-grade-\" + kanji.grade.value] + \" \" + styles.wrapper} onClick={onClick} data-testid=\"front\">\n            <DynamicDisplay style={{ container: [styles.display] }} value={kanji.getValue()} />\n        </Container>\n    );\n}\n\nexport default KanjiFlashCardFront;\n","export enum ReadingType {\n    ON = \"On\",\n    KUN = \"Kun\"\n}","import { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Kanji } from \"../../../types/kanji/Kanji\";\nimport styles from \"../../../styles/sass/components/learn/kanji/KanjiDisplay.module.scss\";\nimport DynamicDisplay from \"../../ui/display/DynamicDisplay\";\n\ninterface KanjiDisplayProps {\n    kanji: Kanji;\n    size?: string;\n    className?: string;\n    showSource?: boolean;\n}\n\n//TODO: Can we not replace this with the Kana display and generify it?\nclass KanjiDisplay extends Component<KanjiDisplayProps> {\n    render() {\n        const { kanji, showSource, className, size } = this.props;\n        const style = {fontSize: size ? size : !className ? \"8em\": undefined, lineHeight: \"1em\"};\n        return (\n            <Container className={styles.wrapper}>\n                {showSource ?\n                    <a\n                        href={kanji.source}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className={[styles.value, className, styles.source].join(\" \")}\n                        title=\"Click for Wiki source\"\n                        style={style}\n                    >\n                        <DynamicDisplay value={kanji.getValue()} />\n                    </a> :\n                    <p\n                        className={[styles.value, className].join(\" \")}\n                        style={style}\n                    >\n                        <DynamicDisplay value={kanji.getValue()} />\n                    </p>\n                }\n            </Container>\n        );\n    }\n}\n\nexport default KanjiDisplay;\n","import React, { ReactElement, ReactNode } from \"react\";\n\nclass Node {\n    private readonly _value: any;\n    private readonly _depth: number;\n\n    constructor(value: any, depth: number) {\n        this._value = value;\n        this._depth = depth;\n    }\n\n    public static fromRoot(value: any) {\n        return new Node(value, 0);\n    }\n\n    public hasChildren(): boolean {\n        return this._value.props?.children;\n    }\n\n    get value(): any {\n        return this._value;\n    }\n\n    get depth(): number {\n        return this._depth;\n    }\n}\n\nexport default class ComponentTree {\n    private depth = 0;\n    private visited: Node[] = [];\n    private readonly root: ReactNode;\n\n    constructor(root: ReactNode) {\n        this.root = root;\n        this.doDepthFirstTraversal(Node.fromRoot(root));\n    }\n\n    public getDeepestLeafNode() {\n        return this.visited.length > 0 ? this.visited.reduce((a, b) => a.depth > b.depth ? a : b).value : undefined;\n    }\n\n    /**\n     * Adds the given properties to the leaf nodes of the {@link root} element.\n     * @param props A function taking the leaf node and returning the new properties.\n     * @return tree A copy of the whole element tree with the updated leaf node.\n     */\n    public addPropsToLeafNode(props?: (el: React.ReactElement) => {}): ReactElement {\n        let response: ReactNode;\n\n        const children: ReactElement[] = this.getAllChildren();\n\n        children.reverse().forEach((child: ReactNode, i: number) => {\n            if (i === children.length - 1) {\n                const leaf = children[i];\n                response = React.cloneElement(leaf, props ? props(leaf) : leaf.props);\n            } else {\n                const nextChild = children[i];\n                response = React.cloneElement(nextChild, nextChild.props, response)\n            }\n        });\n\n        return response as ReactElement;\n    }\n\n    private getAllChildren(): ReactElement[] {\n        let child = this.root as ReactElement;\n\n        let children = [];\n\n        while (child.props && child.props.children) {\n            children.push(child);\n            child = child.props.children;\n        }\n\n        return children;\n    }\n\n    private doDepthFirstTraversal(node: Node) {\n        let next: Node[] = [];\n\n        if (node?.hasChildren()) {\n            const nestedChild: any | any[] = node.value.props.children;\n\n            if (Array.isArray(nestedChild)) {\n                const children = (nestedChild as Array<any>).map(it => new Node(it, this.depth));\n                next.push(...children);\n            } else {\n                const children = new Node(nestedChild, this.depth);\n                next.push(children);\n            }\n        }\n\n        this.depth++;\n\n        while (next.length > 0) {\n            const nextChild = next.pop()!;\n            this.visited.push(nextChild);\n            this.doDepthFirstTraversal(nextChild);\n        }\n\n        this.depth--;\n    }\n}\n","import React, { Component, ReactElement, ReactNode } from \"react\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport PopOver, { PopOverProps } from \"./PopOver\";\nimport styles from \"../../styles/sass/components/ui/Inspectable.module.scss\";\nimport { Placement } from \"react-bootstrap/Overlay\";\nimport ComponentTree from \"../../utility/ComponentTree\";\n\nexport type InspectableProps = {\n    popover: PopOverProps;\n    placement?: Placement;\n    className?: string;\n    color?: 'white' | 'black';\n}\n\nclass Inspectable extends Component<InspectableProps> {\n    render() {\n        const { popover, className, placement, color, children } = this.props;\n\n        const classes = color === 'white' ? [styles.white] : [styles.black, className ?? \"\"]\n\n        return (\n            <OverlayTrigger\n                trigger={[\"hover\", \"focus\", \"click\"]}\n                rootClose={true}\n                placement={placement ?? \"left\"}\n                overlay={<PopOver {...popover} />}\n                defaultShow={false}\n            >\n                {\n                    new ComponentTree(children).addPropsToLeafNode((leaf: ReactElement) => {\n                        return { className: classes.concat(leaf.props.className).join(\" \") }\n                    })\n                }\n            </OverlayTrigger>\n        );\n    }\n}\n\nexport default Inspectable;\n","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../styles/sass/components/ui/SpinnerController.module.scss\";\n\nexport interface SpinnerControllerProps<T> {\n    values: T[];\n    disabledTitle?: string;\n    onChange: (value: T) => void;\n}\n\ninterface SpinnerControllerState {\n    selected: number;\n}\n\nclass SpinnerController<T> extends Component<SpinnerControllerProps<T>, SpinnerControllerState> {\n\n    constructor(props: Readonly<SpinnerControllerProps<T>> | SpinnerControllerProps<T>) {\n        super(props);\n        this.state = {\n            selected: 0\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<SpinnerControllerProps<T>>, prevState: Readonly<SpinnerControllerState>) {\n        const { selected } = this.state;\n        const { values, onChange } = this.props;\n\n        if (prevState.selected !== selected) {\n            onChange(values[selected]);\n        }\n    }\n\n    render() {\n        const { values, disabledTitle } = this.props;\n        const { selected } = this.state;\n        const hasMultipleValues = values.length > 1;\n\n        return (\n            <div className={styles.wrapper}>\n                <div className={styles.arrowWrapper}>\n                    <FontAwesomeIcon\n                        className={hasMultipleValues ? styles.arrow : styles.disabled}\n                        icon={faChevronUp}\n                        title={hasMultipleValues ? \"Last\" : undefined}\n                        onClick={hasMultipleValues ? this.handleLast : undefined}\n                    />\n                </div>\n\n                <div className={styles.selectedWrapper}>\n                    {hasMultipleValues\n                        ? <span className={styles.selected}>{selected + 1}</span>\n                        : <span className={styles.selectedDisabled} title={disabledTitle ?? \"There is only one available.\"}>1</span>\n                    }\n                </div>\n\n                <div className={styles.arrowWrapper}>\n                    <FontAwesomeIcon\n                        className={hasMultipleValues ? styles.arrow : styles.disabled}\n                        icon={faChevronDown}\n                        title={hasMultipleValues ? \"Next\" : undefined}\n                        onClick={hasMultipleValues ? this.handleNext : undefined}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private handleNext = () => {\n        const { values } = this.props;\n        const { selected } = this.state;\n        if (selected < values.length - 1) {\n            this.setState({ selected: selected + 1 });\n        } else {\n            this.setState({ selected: 0 });\n        }\n    }\n\n    private handleLast = () => {\n        const { values } = this.props;\n        const { selected } = this.state;\n        if (selected && selected !== 0) {\n            this.setState({ selected: selected - 1 });\n        } else {\n            this.setState({ selected: values.length - 1 });\n        }\n    }\n}\n\nexport default SpinnerController;","import React, { Component, ReactElement } from \"react\";\nimport { Overlay, Tooltip } from \"react-bootstrap\";\nimport { Placement } from \"react-bootstrap/Overlay\";\nimport ComponentTree from \"../../utility/ComponentTree\";\nimport styles from \"../../styles/sass/components/ui/Copyable.module.scss\";\n\nexport interface CopyableProps {\n    className?: string;\n    inline?: boolean;\n    placement?: Placement\n}\n\ninterface CopyableState {\n    hasWritten: boolean;\n    hasFailed: boolean;\n    active: boolean;\n    successTimeout: any;\n}\n\nclass Copyable extends Component<CopyableProps, CopyableState> {\n\n    private readonly ref: React.RefObject<any>;\n\n    constructor(props: Readonly<CopyableProps> | CopyableProps) {\n        super(props);\n\n        this.ref = React.createRef();\n\n        this.state = {\n            hasWritten: false,\n            hasFailed: false,\n            active: false,\n            successTimeout: undefined\n        }\n    }\n\n    render() {\n        const { className, inline, placement, children } = this.props;\n        const { hasWritten, hasFailed, active } = this.state;\n\n        return (\n            <p\n                title=\"Click to copy\"\n                onClick={this.copyToClipBoard}\n                onMouseDown={() => this.setState({ active: true })}\n                onMouseUp={() => this.setState({ active: false })}\n                className={styles.paragraph}\n                style={{ display: inline ? \"inline\" : \"block\" }}\n            >\n                 {React.cloneElement(children as ReactElement, {\n                     className: [(active ? styles.active : styles.element), className].join(\" \"),\n                     ref: this.ref\n                 })}\n\n                <Overlay placement={placement ?? \"right\"} show={hasWritten} target={this.ref.current}>\n                    <Tooltip id=\"button-tooltip\" className={styles.tooltip}>\n                        {hasFailed ? \"Failed to copy.\": \"Copied!\"}\n                    </Tooltip>\n                </Overlay>\n            </p>\n        );\n    }\n\n    private copyToClipBoard = async () => {\n        const value = new ComponentTree(this.props.children).getDeepestLeafNode();\n        await navigator.clipboard.writeText(value)\n            .then(this.restartCopyTimer)\n            .catch(() => this.setState({ hasWritten: false, hasFailed: true }));\n    }\n\n    private restartCopyTimer = () => {\n        clearTimeout(this.state.successTimeout);\n        this.setState({ hasWritten: true, hasFailed: false });\n        setTimeout(() => this.setState({ hasWritten: false }), 1500);\n    }\n}\n\nexport default Copyable;","import { Component } from \"react\";\nimport { KanjiReading } from \"../../../types/kanji/KanjiReading\";\nimport Inspectable from \"../../ui/Inspectable\";\nimport { Environment } from \"../../../utility/Environment\";\nimport { ReadingType } from \"../../../types/kanji/ReadingType\";\nimport commonStyles from \"../../../styles/sass/components/learn/kanji/KanjiFlashCardBack.module.scss\";\nimport styles from \"../../../styles/sass/components/learn/kanji/KanjiReadingDisplay.module.scss\";\nimport SpinnerController from \"../../ui/SpinnerController\";\nimport Copyable from \"../../ui/Copyable\";\n\nexport interface KanjiReadingDisplayProps {\n    type: ReadingType;\n    readings: KanjiReading[];\n    showRomaji: boolean;\n}\n\ninterface KanjiReadingDisplayState {\n    selected: KanjiReading;\n}\n\nclass KanjiReadingDisplay extends Component<KanjiReadingDisplayProps, KanjiReadingDisplayState> {\n\n    constructor(props: Readonly<KanjiReadingDisplayProps> | KanjiReadingDisplayProps) {\n        super(props);\n        this.state = {\n            selected: props.readings[0]\n        }\n    }\n\n    render() {\n        const { type, readings } = this.props;\n\n        return (\n            <div className={styles.wrapper}>\n                <SpinnerController\n                    values={readings}\n                    disabledTitle={\"This kanji has only one Jōyō \" + type.toLowerCase() + \" reading\"}\n                    onChange={(value: KanjiReading) => this.setState({ selected: value })}\n                />\n\n                <span className={[commonStyles.text, styles.reading].join(\" \")}>\n                    <Inspectable popover={{ title: this.getTitle(), text: this.getText() }}>\n                        <span className={commonStyles.label}>{type}</span>\n                    </Inspectable>\n\n                    {readings.length > 0\n                        ? (\n                            <>\n                                <span>: </span>\n                                <Copyable inline>\n                                    <span>{this.getReadingFormatted()}</span>\n                                </Copyable>\n                            </>\n                        )\n                        : <span title={\"This kanji has no \" + type.toLowerCase() + \" reading\"}>: N/A</span>\n                    }\n                </span>\n            </div>\n        );\n    }\n\n    private getReadingFormatted = (): string => {\n        const { showRomaji } = this.props;\n        const { selected } = this.state;\n\n        let formatted = selected.kana;\n\n        if (showRomaji) {\n            formatted += \" (\" + selected.romaji + \")\"\n        }\n\n        return formatted;\n    }\n\n    private getTitle = () => {\n        switch (this.props.type) {\n            case ReadingType.ON: return \"On-yomi Reading\";\n            case ReadingType.KUN: return \"Kun-yomi Reading\"\n        }\n    }\n\n    private getText = () => {\n        switch (this.props.type) {\n            case ReadingType.ON: return Environment.variable(\"ONYOMI_DESC\");\n            case ReadingType.KUN: return Environment.variable(\"KUNYOMI_DESC\");\n        }\n    }\n}\n\nexport default KanjiReadingDisplay;","import { Component } from \"react\";\nimport { Example } from \"../../../types/kanji/Example\";\nimport { Kanji } from \"../../../types/kanji/Kanji\";\nimport SpinnerController from \"../../ui/SpinnerController\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../../styles/sass/components/learn/kanji/KanjiExampleDisplay.module.scss\";\nimport Copyable from \"../../ui/Copyable\";\n\nexport interface KanjiExampleDisplayProps {\n    kanji: Kanji;\n}\n\ninterface KanjiExampleDisplayState {\n    selected?: Example;\n}\n\nclass KanjiExampleDisplay extends Component<KanjiExampleDisplayProps, KanjiExampleDisplayState> {\n\n    constructor(props: Readonly<KanjiExampleDisplayProps> | KanjiExampleDisplayProps) {\n        super(props);\n        this.state = {\n            selected: props.kanji.examples.length > 0 ? props.kanji.examples[0] : undefined\n        }\n    }\n\n    render() {\n        const { kanji } = this.props;\n        const { selected } = this.state;\n\n        return (\n            <Container className={styles.wrapper} fluid>\n                <Row>\n                    <Col>\n                        <p className={styles.title}>Examples:</p>\n                    </Col>\n                </Row>\n\n                <Row className={styles.row}>\n                    <Col xs={2} className={styles.controllerWrapper}>\n                        <SpinnerController\n                            values={kanji.examples}\n                            disabledTitle=\"This kanji has no example associated with it.\"\n                            onChange={(value: Example) => this.setState({ selected: value })}\n                        />\n                    </Col>\n\n                    {selected && <Col className={styles.textWrapper}>\n                        <Copyable className={styles.kanji}>\n                            <span className={styles.example}>\n                                {selected.kanji}\n                            </span>\n                        </Copyable>\n\n\n                        <span>\n                            <span className={styles.kana}>( </span>\n                            {\n                                selected.kana.map((value: string, i: number) => {\n                                    if (i < selected.kana.length - 1) {\n                                        return [\n                                            <Copyable className={styles.kana} key={`copyable-${i}`} inline>\n                                                <span key={value}>{value}</span>\n                                            </Copyable>,\n                                            <span key={`or-${i}`}> or </span>\n                                        ];\n                                    } else {\n                                        return (\n                                            <Copyable className={styles.kana} key={`copyable-${i}`} inline>\n                                                <span key={value}>{value}</span>\n                                            </Copyable>\n                                        );\n                                    }\n                                })\n                            }\n                            <span className={styles.kana}> )</span>\n                        </span>\n\n                        <p className={styles.meaning}>\n                            {selected.english.join(\", \")}\n                        </p>\n                    </Col>}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default KanjiExampleDisplay;\n","import { Component } from \"react\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport PopOver from \"../../ui/PopOver\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../../styles/sass/components/learn/kanji/KanjiMeaningDisplay.module.scss\";\n\nexport interface KanjiMeaningDisplayProps {\n    meanings: string[];\n}\n\ninterface KanjiMeaningDisplayState {\n    showing: boolean;\n}\n\nclass KanjiMeaningDisplay extends Component<KanjiMeaningDisplayProps, KanjiMeaningDisplayState> {\n\n    constructor(props: Readonly<KanjiMeaningDisplayProps> | KanjiMeaningDisplayProps) {\n        super(props);\n        this.state = {\n            showing: false\n        }\n    }\n\n    render() {\n        const [meanings, extra] = this.getMeanings();\n\n        const popover = <PopOver title=\"Additional Meanings\" text={extra.join(\", \")} />\n\n        return (\n            <>\n                <span className={styles.meanings}>{meanings.join(\", \")}</span>\n                {extra.length > 0 && (\n                    <OverlayTrigger trigger={[\"click\", \"hover\", \"click\"]} overlay={popover} placement=\"top\" defaultShow={false}>\n                        <FontAwesomeIcon icon={faEllipsisH} className={styles.icon} title=\"Show more meanings\" />\n                    </OverlayTrigger>\n                )}\n            </>\n        );\n    }\n\n    private getMeanings = (): [string[], string[]] => {\n        const { meanings } = this.props;\n\n        const maxLength = 5;\n\n        if (meanings.length > maxLength) {\n            return [meanings.slice(0, maxLength), meanings.slice(maxLength, meanings.length)];\n        }\n\n        return [meanings, []];\n    }\n}\n\nexport default KanjiMeaningDisplay;\n","import { Component } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport KanjiDisplay from \"./KanjiDisplay\";\nimport { ReadingType } from \"../../../types/kanji/ReadingType\";\nimport Inspectable from \"../../ui/Inspectable\";\nimport { Environment } from \"../../../utility/Environment\";\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CardBackFaceProps } from \"../FlashCard\";\nimport { Kanji } from \"../../../types/kanji/Kanji\";\nimport KanjiReadingDisplay from \"./KanjiReadingDisplay\";\nimport { KanjiReading } from \"../../../types/kanji/KanjiReading\";\nimport styles from \"../../../styles/sass/components/learn/kanji/KanjiFlashCardBack.module.scss\";\nimport KanjiExampleDisplay from \"./KanjiExampleDisplay\";\nimport KanjiMeaningDisplay from \"./KanjiMeaningDisplay\";\n\n//TODO: Replace redundant bits with FlashCardBack component\nclass KanjiFlashCardBack extends Component<CardBackFaceProps> {\n    render() {\n        const { data, showRomaji, onClick } = this.props;\n        const kanji = data as Kanji;\n\n        return (\n            <Container className={styles[\"wrapper-grade-\" + kanji.grade.value] + \" \" + styles.wrapper}>\n                <Row className={styles.header}>\n                    <p className={styles.grade}>Grade {kanji.grade.value} Kyōiku</p>\n                    <Button className={styles.back} variant=\"outline-danger\" onClick={onClick} title=\"Reset\">\n                        <FontAwesomeIcon icon={faReply} />\n                    </Button>\n                </Row>\n\n                <Row className={styles.body}>\n                    <Col sm={5} xs={4}>\n                        <KanjiDisplay kanji={kanji} className={styles.display} showSource />\n                    </Col>\n\n                    <Col sm={7} xs={8}>\n                        <KanjiReadingDisplay\n                            type={ReadingType.ON}\n                            showRomaji={showRomaji}\n                            readings={this.getReadings(ReadingType.ON)}\n                        />\n\n                        <KanjiReadingDisplay\n                            type={ReadingType.KUN}\n                            showRomaji={showRomaji}\n                            readings={this.getReadings(ReadingType.KUN)}\n                        />\n\n                        <div className={styles.meaningWrapper}>\n                            <p className={styles.text}>\n                                <Inspectable popover={{ title: \"English Meaning\", text: Environment.variable(\"ENGLISH_MEANING_DESC\") }}>\n                                    <span className={styles.label}>Meaning</span>\n                                </Inspectable>\n                                {': '}<KanjiMeaningDisplay meanings={kanji.getMeanings()} />\n                            </p>\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row className={styles.footer}>\n                    <Col xs={12}>\n                        <KanjiExampleDisplay kanji={kanji} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    private getReadings = (type: ReadingType): KanjiReading[] => {\n        return (this.props.data as Kanji).readings.filter(it => it.type === type);\n    }\n\n}\n\nexport default KanjiFlashCardBack;\n","export default class LearnableField {\n\n    private readonly _name: string;\n    private readonly _description: string;\n    private readonly _validationRegex: RegExp;\n\n    public static MEANING = new LearnableField(\"English Meaning\", \"The meaning of the word or character in English. Usually a single word.\", /^[A-Za-z\\s]*$/);\n    public static KANJI = new LearnableField(\"Kanji\", \"Some words can be expressed as a single Kanji.\", /^[一-龯]*$/);\n    public static KANA = new LearnableField(\"Kana\", \"The Japanese syllabaries are kana. All words can expressed in Hiragana or Katakana.\", /^[ぁ-んァ-ン]+$/);\n    public static JAPANESE = new LearnableField(\"Japanese\", \"Some words can be expressed in all kanji or a mixture of kanji and kana.\", /^[A-Za-z]*$/)\n    public static ROMAJI = new LearnableField(\"Rōmaji\", \"The romanisation of Japanese kana. I.e. 'a', 'ke' or 'zu'.\", /^[A-Za-z]*$/);\n    public static ONYOMI_READING = new LearnableField(\"On'Yomi Reading\", \"The original Chinese readings of a kanji character in Hiragana.\", /^[ぁ-ゔゞァ-・ヽヾ゛゜ー]+$/);\n    public static KUNYOMI_READING = new LearnableField(\"Kun'Yomi Reading\", \"The Japanese readings of a kanji character in Hiragana.\", /^[ぁ-ゔゞァ-・ヽヾ゛゜ー]+$/);\n    public static RANDOM = new LearnableField(\"Random\", \"A random selection of any of the available data fields.\", /.*/);\n\n    private constructor(name: string, description: string, validationRegex: RegExp) {\n        this._name = name;\n        this._description = description;\n        this._validationRegex = validationRegex;\n    }\n\n    public static values(): LearnableField[] {\n        return [\n            LearnableField.MEANING, LearnableField.KANJI, LearnableField.KANA,\n            LearnableField.JAPANESE, LearnableField.ROMAJI, LearnableField.ONYOMI_READING,\n            LearnableField.KUNYOMI_READING, LearnableField.RANDOM\n        ];\n    }\n\n    public static fromNameString(value: String): LearnableField {\n        switch (value) {\n            case \"English Meaning\": return LearnableField.MEANING;\n            case \"Kanji\": return LearnableField.KANJI;\n            case \"Kana\": return LearnableField.KANA;\n            case \"Japanese\": return LearnableField.JAPANESE;\n            case \"Rōmaji\": return LearnableField.ROMAJI;\n            case \"On'Yomi Reading\": return LearnableField.ONYOMI_READING;\n            case \"Kun'Yomi Reading\": return LearnableField.KUNYOMI_READING;\n            case \"Random\": return LearnableField.RANDOM;\n            default: throw new Error(\"Invalid Learnable Field Name: \" + value);\n        }\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    get description(): string {\n        return this._description;\n    }\n\n    get validationRegex(): RegExp {\n        return this._validationRegex;\n    }\n}\n","import LearnableField from \"./LearnableField\";\nimport RomajiGenerator from \"../../utility/RomajiGenerator\";\nimport { KanjiReading } from \"../kanji/KanjiReading\";\nimport { v4 as uuid } from \"uuid\";\n\n/**\n * The base class for all data objects in the application.\n *\n * Both the game and learn components interface with this abstraction to\n * minimise the amount of duplication and boilerplate code that needs to be written.\n * This makes the app more data-driven.\n *\n * A {@link Learnable} object can really be anything that can be learned.\n * That could be anything from a Kanji character, to a compass direction, to a grammar particle.\n */\nexport abstract class Learnable {\n\n    /**\n     * Used by a {@link FlashCardBack} to display what the thing is.\n     * It's left up to the given implementation to decide what it's title display as.\n     *\n     * For example;\n     * - Kanji characters might show the grade, like \"Grade 2 Kyoiku Kanji\".\n     * - Kana characters might show the syllabary, like \"Hiragana\".\n     *\n     * @return title A single string representing concisely what the data object is.\n     */\n    abstract getTitle(): string;\n\n    /**\n     * The Japanese kana representation of the data object.\n     * Can be either Hiragana or Katakana.\n     * Uses an array as some data objects have multiple pronunciations (and therefore kana).\n     * @return kana An array of strings of Japanese kana.\n     */\n    abstract getKana(): string[];\n\n    /**\n     * The English meanings of the data object.\n     * Uses an array as some data objects have multiple meanings (I.e. Kanji).\n     * @return meanings An array of words describing what the object means in English.\n     */\n    abstract getMeanings(): string[];\n\n    /**\n     * Used by the {@link HintButton} to give the user a hint during\n     * a gaming or learning session.\n     *\n     * For example;\n     * - Kanji characters might hint at their grade or one of their tags.\n     * - Kana characters might hint about which column they are from.\n     * - Generic word definitions might give the user their first character.\n     *\n     * @return hint A small but significant piece of info about the data object.\n     */\n    abstract getHint(): string;\n\n    /**\n     * Used by instances of {@link GameQuestion} to retrieve the value of a specific field.\n     *\n     * Creates a dependency inversion on the fields in this class so that game configuration\n     * can hold references to which fields want to be used before runtime.\n     *\n     * @param field The field whose data is to be retrieved.\n     * @throws error If the given field is unknown.\n     * @return value The values for the given field. Can be empty.\n     */\n    public getFieldValues(field: LearnableField): string[] {\n        switch (field) {\n            case LearnableField.ROMAJI: {\n                return this.getRomaji();\n            }\n            case LearnableField.KANA: {\n                return this.getKana();\n            }\n            case LearnableField.MEANING: {\n                return this.getMeanings();\n            }\n            case LearnableField.KANJI: {\n                const kanji = this.getKanjiVariation();\n                return kanji !== null && kanji !== undefined ? [kanji] : [];\n            }\n            case LearnableField.JAPANESE: {\n                const kanji = this.getKanjiVariation();\n                return kanji ? [kanji] : this.getKana();\n            }\n            case LearnableField.ONYOMI_READING: {\n                return this.getOnyomiReadings().map((reading: KanjiReading) => reading.kana);\n            }\n            case LearnableField.KUNYOMI_READING: {\n                return this.getKunyomiReadings().map((reading: KanjiReading) => reading.kana);\n            }\n            default: {\n                throw new ReferenceError(\"Invalid Learnable Field: \" + field);\n            }\n        }\n    }\n\n    /**\n     * Currently only used by {@link Kanji} as they have different types of readings.\n     * The on'yomi readings are the original Chinese ones.\n     * @return reading The Chinese on'yomi readings.\n     */\n    public getOnyomiReadings(): KanjiReading[] {\n        return [];\n    }\n\n    /**\n     * Currently only used by {@link Kanji} as they have different types of readings.\n     * The kun'yomi readings are the newer Japanese ones.\n     * @return reading The Japanese kun'yomi readings.\n     */\n    public getKunyomiReadings(): KanjiReading[] {\n        return [];\n    }\n\n    /**\n     * Used by the {@link MemoryGame} to calculate the score for a data object.\n     * Can be overridden by the subclass, but a default is provided here.\n     * @return score The base score value by which a multiplier will be applied.\n     */\n    public getBaseScore(): number {\n        return 100;\n    }\n\n    /**\n     * TODO: Is this needed now? it's only used by the numbers flash card atm. Maybe bring Kanji examples in here?\n     */\n    public getExample(): LearningExample | undefined {\n        return undefined;\n    }\n\n    /**\n     * A variation of the Japanese kana condensed into it's kanji alternative.\n     *\n     * If a data object has kana, it's possible that kana is derived from kanji.\n     * E.g: The kun'yomi reading of person, ひと -> it's kanji representation, 人.\n     *\n     * It's also possible that the kana just isn't derived from some kanji.\n     * E.g: The adverb \"not much\", あまり -> has no kanji, so it's undefined.\n     *\n     * It's also possible that only some of the kana is derived from kanji.\n     * E.g: The verb \"to use\", つかう -> has some kanji, so it becomes 使う.\n     *\n     * @return kanji The kanji representation of the objects' kana or undefined if it has none.\n     */\n    public getKanjiVariation(): string | undefined {\n        return undefined;\n    }\n\n    /**\n     * Rōmaji is the Romanisation of the Japanese language.\n     *\n     * The {@link RomajiGenerator} can convert a kana string into Rōmaji and\n     * the default implementation of this function does so based on its kana.\n     *\n     * However, some data objects, like {@link Kana} itself, has a single kana value,\n     * but has multiple sounds and therefore rōmaji values. I.e. ヘ -> \"he\" or \"e\".\n     * This function can therefore be overridden and different values can be provided.\n     *\n     * @return rōmaji The Romanised variations of the objects' kana.\n     */\n    public getRomaji(): string[] {\n        return this.getKana().map((kana: string) => new RomajiGenerator().generate(kana));\n    }\n\n    /**\n     * Metadata used to categorise a data object.\n     * Any given data object can have zero or many tags if applicable.\n     * Often used to filter or sort a collection of data objects.\n     * @return tags A list of words that categorise the object.\n     */\n    public getTags(): string[] {\n        return [];\n    }\n\n    /**\n     * Uniquely identifies a data object.\n     * Defaults to a V4 UUID.\n     * @return id a unique ID.\n     */\n    public getUniqueID(): string {\n        return uuid();\n    }\n\n    /**\n     * Checks whether two {@link Learnable} instances are equal to one another.\n     * Behaves the same way the same named method would do in the base Object class of an OOP language.\n     * It is often left to the concrete implementation to override this.\n     * @param other The other instance of to compare with.\n     * @return true if they are equal, false if not.\n     */\n    public equals(other: Learnable): boolean {\n        return this === other;\n    }\n}\n\nexport interface LearningExample {\n    english: string;\n    kana: string;\n}","import { Learnable } from \"../learn/Learnable\";\n\nexport default class Colour extends Learnable {\n    private readonly _name: string;\n    private readonly _kanji: string | undefined;\n    private readonly _kana: string;\n    private readonly _romaji: string;\n    private readonly _colour: string;\n\n    constructor(name: string, kanji: string | undefined, kana: string, romaji: string, colour: string) {\n        super();\n        this._name = name;\n        this._kanji = kanji;\n        this._kana = kana;\n        this._romaji = romaji;\n        this._colour = colour;\n    }\n\n    get colour(): string {\n        return this._colour;\n    }\n\n    getKanjiVariation(): string | undefined {\n        return this._kanji;\n    }\n\n    getKana(): string[] {\n        return [this._kana];\n    }\n\n    getTitle(): string {\n        return this._name;\n    }\n\n    getMeanings(): string[] {\n        return [this._name];\n    }\n\n    getHint(): string {\n        return \"It begins with \" + this._kana[0];\n    }\n\n    getUniqueID(): string {\n        return this._name + \"-\" + this._kana;\n    }\n}\n","import FlashCardFront from \"../FlashCardFront\";\nimport { CardFaceProps } from \"../FlashCard\";\nimport { Container } from \"react-bootstrap\";\nimport { faFillDrip } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Colour from \"../../../types/colour/Colour\";\nimport styles from \"../../../styles/sass/components/learn/basics/BasicsFlashCardFront.module.scss\";\nimport DefinitionList from \"../DefinitionList\";\n\nfunction BasicsFlashCardFront(props: CardFaceProps) {\n    return (\n        <FlashCardFront onClick={props.onClick} borderColour={props.data instanceof Colour ? props.data.colour : undefined}>\n            <Container className={styles.wrapper}>\n                {props.data instanceof Colour && (\n                    <div className={styles.iconWrapper}>\n                        <FontAwesomeIcon\n                            icon={faFillDrip}\n                            fixedWidth\n                            color={props.data.colour}\n                            className={styles.icon}\n                            data-testid=\"colour-icon\"\n                        />\n                    </div>\n                )}\n                <DefinitionList words={props.data.getMeanings()} mode=\"stacked\" />\n            </Container>\n        </FlashCardFront>\n    );\n}\n\nexport default BasicsFlashCardFront;","import { Col, Container, Row } from \"react-bootstrap\";\nimport FlashCardBack from \"./FlashCardBack\";\nimport { Component } from \"react\";\nimport { LearningExample } from \"../../types/learn/Learnable\";\nimport styles from \"../../styles/sass/components/learn/CommonFlashCardBack.module.scss\"\nimport RomajiGenerator from \"../../utility/RomajiGenerator\";\n\nexport interface CommonFlashCardBackProps {\n    answer: string;\n    kana: string[];\n    title: string;\n    borderColour?: string;\n    example?: LearningExample;\n    onClick: () => void;\n}\n\nclass CommonFlashCardBack extends Component<CommonFlashCardBackProps> {\n    render() {\n        const { answer, kana, title, example, borderColour, onClick } = this.props;\n\n        const romaji = new RomajiGenerator();\n\n        return (\n            <FlashCardBack title={title} onReset={onClick} className={styles.wrapper} borderColour={borderColour}>\n                <Container className={styles.innerWrapper}>\n                    <Row>\n                        <Col sm={6} xs={12}>\n                            <p className={styles.kanji}>{answer}</p>\n                        </Col>\n\n                        <Col sm={6} xs={12} className={styles.rightCol}>\n                            <div className={styles.rightDataWrapper}>\n                                <p className={styles.kana}>{kana.join(\" or \")}</p>\n                                <p className={styles.romaji}>({kana.map(it => romaji.generate(it)).join(\" or \")})</p>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            {example && (\n                                <div>\n                                    <p className={styles.exampleEnglish}>{example.english}</p>\n                                    <p className={styles.exampleKana}>{example.kana}</p>\n                                </div>\n                            )}\n                        </Col>\n                    </Row>\n                </Container>\n            </FlashCardBack>\n        );\n    }\n}\n\nexport default CommonFlashCardBack;","import { CardFaceProps } from \"../FlashCard\";\nimport Colour from \"../../../types/colour/Colour\";\nimport CommonFlashCardBack from \"../CommonFlashCardBack\";\n\nfunction BasicsFlashCardBack(props: CardFaceProps) {\n    const value = props.data as Colour;\n\n    return (\n        <CommonFlashCardBack\n            title={value.getTitle()}\n            answer={value.getKanjiVariation() ?? value.getKana()[0]}\n            kana={value.getKana()}\n            onClick={props.onClick}\n            borderColour={props.data instanceof Colour ? props.data.colour : undefined}\n        />\n    );\n}\n\nexport default BasicsFlashCardBack;\n","import Topic from \"../../../Topic\";\nimport DataSettings from \"./DataSettings\";\n\n/**\n * Settings used to by {@link SentenceStructureRepository} to customise\n * the selection of definitions returned.\n * @see SentenceStructureSettingsBuilder\n */\nexport default class SentenceStructureSettings extends DataSettings {\n    private readonly _adverbs: boolean;\n    private readonly _particles: boolean;\n    private readonly _expressions: boolean;\n    private readonly _verbs: boolean;\n    private readonly _nouns: boolean;\n    private readonly _adjectives: boolean;\n\n    constructor(adverbs: boolean, particles: boolean, expressions: boolean, verbs: boolean, nouns: boolean, adjectives: boolean, quantity?: number) {\n        super(Topic.GRAMMAR, quantity);\n        this._adverbs = adverbs;\n        this._particles = particles;\n        this._expressions = expressions;\n        this._verbs = verbs;\n        this._nouns = nouns;\n        this._adjectives = adjectives;\n    }\n\n    get adverbs(): boolean {\n        return this._adverbs;\n    }\n\n    get particles(): boolean {\n        return this._particles;\n    }\n\n    get expressions(): boolean {\n        return this._expressions;\n    }\n\n    get verbs(): boolean {\n        return this._verbs;\n    }\n\n    get nouns(): boolean {\n        return this._nouns;\n    }\n\n    get adjectives(): boolean {\n        return this._adjectives;\n    }\n}\n\nexport class SentenceStructureSettingsBuilder {\n    private _adverbs: boolean = false;\n    private _particles: boolean = false;\n    private _expressions: boolean = false;\n    private _verbs: boolean = false;\n    private _nouns: boolean = false;\n    private _adjectives: boolean = false;\n    private _quantity: number | undefined;\n\n    withAdverbs(include: boolean = true): SentenceStructureSettingsBuilder {\n        this._adverbs = include;\n        return this;\n    }\n\n    withParticles(include: boolean = true): SentenceStructureSettingsBuilder {\n        this._particles = include;\n        return this;\n    }\n\n    withExpressions(include: boolean = true): SentenceStructureSettingsBuilder {\n        this._expressions = include;\n        return this;\n    }\n\n    withVerbs(include: boolean = true): SentenceStructureSettingsBuilder {\n        this._verbs = include;\n        return this;\n    }\n\n    withNouns(include: boolean = true): SentenceStructureSettingsBuilder {\n        this._nouns = include;\n        return this;\n    }\n\n    withAdjectives(include: boolean = true): SentenceStructureSettingsBuilder {\n        this._adjectives = include;\n        return this;\n    }\n\n    withQuantity(quantity: number): SentenceStructureSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    build(): SentenceStructureSettings {\n        return new SentenceStructureSettings(this._adverbs, this._particles, this._expressions, this._verbs, this._nouns, this._adjectives, this._quantity);\n    }\n\n}","import { faComment, faCube, faExclamation, faFire, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { LearnMenuModes } from \"../../MenuModes\";\nimport LearnMode from \"../../session/LearnMode\";\nimport { SentenceStructureSettingsBuilder } from \"../../session/settings/data/SentenceStructureSettings\";\nimport LearnSettings from \"../../session/settings/LearnSettings\";\n\nexport default class LearnSentenceStructureModes implements LearnMenuModes {\n    getModes(): LearnMode[] {\n        const defaultLearnSettings = new LearnSettings();\n\n        return [\n            new LearnMode(\"Adverbs\", \"#5641d0\", faExclamation,\n                new SentenceStructureSettingsBuilder().withAdverbs().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Particles\", \"#ff7730\", \"を\",\n                new SentenceStructureSettingsBuilder().withParticles().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Expressions\", \"#1785e2\", faComment,\n                new SentenceStructureSettingsBuilder().withExpressions().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Verbs\", \"#e3c93a\", faRunning,\n                new SentenceStructureSettingsBuilder().withVerbs().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Nouns\", \"#4fdb4b\", faCube,\n                new SentenceStructureSettingsBuilder().withNouns().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Adjectives\", \"#fd0e3e\", faFire,\n                new SentenceStructureSettingsBuilder().withAdjectives().build(),\n                defaultLearnSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"SENTENCE\";\n    }\n}","import { CardFaceProps } from \"../FlashCard\";\nimport FlashCardFront from \"../FlashCardFront\";\nimport styles from \"../../../styles/sass/components/learn/numbers/NumbersFlashCardFront.module.scss\";\nimport DefinitionList from \"../DefinitionList\";\n\nconst NumbersFlashCardFront = (props: CardFaceProps) => {\n    const { data, onClick } = props;\n\n    return (\n        <FlashCardFront onClick={onClick} className={styles.wrapper}>\n            <DefinitionList words={data.getMeanings()} mode={\"stacked\"} />\n        </FlashCardFront>\n    )\n};\n\nexport default NumbersFlashCardFront;","import { CardFaceProps } from \"../FlashCard\";\nimport CommonFlashCardBack from \"../CommonFlashCardBack\";\n\nconst NumbersFlashCardBack = (props: CardFaceProps) => {\n    const { data, onClick } = props;\n\n    return (\n        <CommonFlashCardBack\n            title={data.getTitle()}\n            answer={data.getKanjiVariation() ?? \"\"}\n            kana={data.getKana()}\n            example={data.getExample()}\n            onClick={onClick}\n        />\n    );\n};\n\nexport default NumbersFlashCardBack;","import { CardFaceProps } from \"../FlashCard\";\nimport FlashCardFront from \"../FlashCardFront\";\nimport styles from \"../../../styles/sass/components/learn/sentence/SentenceStructureFlashCardFront.module.scss\";\nimport DefinitionList from \"../DefinitionList\";\n\nconst SentenceStructureFlashCardFront = (props: CardFaceProps) => {\n    const { data, onClick } = props;\n\n    return (\n        <FlashCardFront onClick={onClick} className={styles.wrapper}>\n            <div className={styles.innerWrapper}>\n                <DefinitionList words={data.getMeanings()} mode=\"stacked\" />\n            </div>\n        </FlashCardFront>\n    )\n};\n\nexport default SentenceStructureFlashCardFront;","import { Component } from \"react\";\nimport Inspectable from \"../Inspectable\";\nimport RomajiGenerator from \"../../../utility/RomajiGenerator\";\nimport { Environment } from \"../../../utility/Environment\";\nimport Copyable from \"../Copyable\";\nimport styles from \"../../../styles/sass/components/ui/display/RomajiDisplay.module.scss\";\n\nexport interface RomajiDisplayProps {\n    kana: string;\n    className?: string;\n}\n\nclass RomajiDisplay extends Component<RomajiDisplayProps> {\n    render() {\n        const { kana, className } = this.props;\n        return (\n            <Copyable className={className} placement=\"bottom\" inline>\n                <span>\n                    <span className={styles.parenthesis}>( </span>\n\n                    <Inspectable popover={{ title: \"Why is the rōmaji incorrect?\", text: Environment.variable(\"ROMAJI_GENERATION_DESC\") }}>\n                        <span className={styles.romaji}>\n                            {new RomajiGenerator().generate(kana)}\n                        </span>\n                    </Inspectable>\n\n                    <span className={styles.parenthesis}> )</span>\n                </span>\n            </Copyable>\n        );\n    }\n}\n\nexport default RomajiDisplay;","import { ReadingType } from \"./ReadingType\";\n\nexport class KanjiReading {\n    private readonly _romaji: string;\n    private readonly _kana: string;\n    private readonly _type: ReadingType;\n\n    constructor(romaji: string, kana: string, type: ReadingType) {\n        this._romaji = romaji;\n        this._kana = kana;\n        this._type = type;\n    }\n\n    get romaji(): string {\n        return this._romaji;\n    }\n\n    get kana(): string {\n        return this._kana;\n    }\n\n    get type(): ReadingType {\n        return this._type;\n    }\n}","export class Example {\n    private readonly _kanji: string;\n    private readonly _kana: string[];\n    private readonly _english: string[];\n\n    constructor(kanji: string, kana: string[], english: string[]) {\n        this._kanji = kanji;\n        this._kana = kana;\n        this._english = english;\n    }\n\n    get kanji(): string {\n        return this._kanji;\n    }\n\n    get kana(): string[] {\n        return this._kana;\n    }\n\n    get english(): string[] {\n        return this._english;\n    }\n}","import { KanjiReading } from \"./KanjiReading\";\nimport { Example } from \"./Example\";\nimport { KyoikuGrade } from \"./KyoikuGrade\";\nimport { Learnable } from \"../learn/Learnable\";\nimport { ReadingType } from \"./ReadingType\";\n\nexport class Kanji extends Learnable {\n\n    private readonly _character: string;\n    private readonly _readings: KanjiReading[];\n    private readonly _meanings: string[];\n    private readonly _grade: KyoikuGrade;\n    private readonly _source: string;\n    private readonly _examples: Example[];\n    private readonly _tags: string[];\n\n    constructor(character: string, readings: KanjiReading[], meanings: string[], grade: KyoikuGrade, source: string, examples: Example[], tags: string[]) {\n        super();\n        this._character = character;\n        this._readings = readings;\n        this._meanings = meanings;\n        this._grade = grade;\n        this._source = source;\n        this._examples = examples;\n        this._tags = tags;\n    }\n\n    get readings(): KanjiReading[] {\n        return this._readings;\n    }\n\n    get grade(): KyoikuGrade {\n        return this._grade;\n    }\n\n    get source(): string {\n        return this._source;\n    }\n\n    public getValue(): string {\n        return this._character;\n    }\n\n    get examples(): Example[] {\n        return this._examples;\n    }\n\n    getTitle(): string {\n        return \"Grade \" + this.grade.value;\n    }\n\n    getKana(): string[] {\n        const on = this.getOnyomiReadings();\n        const kun = this.getKunyomiReadings();\n\n        let response = [];\n\n        if (on.length > 0) {\n            response.push(on[0].kana);\n        }\n\n        if (kun.length > 0) {\n            response.push(kun[0].kana);\n        }\n\n        return response;\n    }\n\n    getMeanings(): string[] {\n        return this._meanings;\n    }\n\n    getKanjiVariation(): string | undefined {\n        return this._character;\n    }\n\n    getOnyomiReadings(): KanjiReading[] {\n        return this._readings.filter((reading: KanjiReading) => reading.type === ReadingType.ON)\n    }\n\n    getKunyomiReadings(): KanjiReading[] {\n        return this._readings.filter((reading: KanjiReading) => reading.type === ReadingType.KUN)\n    }\n\n    getTags(): string[] {\n        return this._tags;\n    }\n\n    getHint(): string {\n        return \"It's Grade \" + this.grade.value + \" and starts with \" + this.getKana()[0][0] + \".\";\n    }\n\n    getUniqueID(): string {\n        return this._character;\n    }\n\n    equals(other: Learnable): boolean {\n        return this.getKanjiVariation() === other.getKanjiVariation();\n    }\n}","import { KanjiData } from \"./DataTypes\";\nimport axios from \"axios\";\n\nexport async function kyoiku(): Promise<KanjiData[]> {\n    return getKanji().then(data => data.filter(it => [1, 2, 3, 4, 5, 6].includes(it.grade ?? 0)));\n}\n\nexport async function joyo(): Promise<KanjiData[]> {\n    return getKanji().then(data => data.filter(it => [1, 2, 3, 4, 5, 6, 8].includes(it.grade ?? 0)));\n}\n\nasync function getKanji(): Promise<KanjiData[]> {\n    return axios.get('./Kanji.json').then(response => {\n        return response.data.data;\n    });\n}\n","import { KanjiReading } from \"../types/kanji/KanjiReading\";\nimport { ReadingType } from \"../types/kanji/ReadingType\";\nimport { Example } from \"../types/kanji/Example\";\nimport { KanjiData, KanjiExample } from \"../data/DataTypes\";\nimport Repository from \"./Repository\";\nimport KanjiSettings from \"../types/session/settings/data/KanjiSettings\";\nimport Arrays from \"../utility/Arrays\";\nimport { Kanji } from \"../types/kanji/Kanji\";\nimport { KyoikuGrade } from \"../types/kanji/KyoikuGrade\";\nimport RomajiGenerator from \"../utility/RomajiGenerator\";\nimport { joyo, kyoiku } from \"../data/Kanji\";\n\n//TODO: Integrate Kanji Filters & create new ones for grades etc.\nexport class KanjiRepository implements Repository<Kanji> {\n    public async read(settings: KanjiSettings): Promise<Kanji[]> {\n        // If requested joyo, then give them all joyo (or quantity if specified).\n        if (settings.joyo) {\n            return joyo().then(joyo => {\n                if (!settings) return [];\n\n                if (settings.quantity) {\n                    const data = Arrays.getRandomElements(joyo, settings.quantity);\n                    return this.convert(data);\n                }\n                return this.convert(joyo);\n            });\n        }\n\n        // If not requested joyo and there are grades, give kyoiku\n        if (settings.grades && settings.grades.length > 0) {\n            return kyoiku().then(kyoiku => {\n                // If specified quantity, give random quantity from those grades\n                if (settings.quantity) {\n                    let kanji: Kanji[] = [];\n\n                    let kyoikuKanji = this.convert(kyoiku);\n                    let availableKanji = kyoikuKanji.filter(data => settings.grades?.includes(data.grade));\n\n                    for (let i = 0; i < settings.quantity; i++) {\n                        const [randomKanji, remainingKanji] = Arrays.getRandomObject(availableKanji);\n                        availableKanji = remainingKanji;\n                        kanji.push(randomKanji);\n                    }\n\n                    return kanji;\n                } else {\n                    // Else, all from those grades\n                    return this.convert(kyoiku).filter(entry => settings.grades?.map(it => it.value).includes(entry.grade.value));\n                }\n            });\n        }\n\n        // If not specified joyo or kyoiku, but quantity, then give quantity from ALL kanji.\n        if (settings.quantity) {\n            return kyoiku().then(kanji => this.convert(kanji.splice(0, settings.quantity)));\n        }\n\n        //If we've specific nothing, then give the whole lot.\n        return joyo().then(kanji => this.convert(kanji));\n    }\n\n    public async getByValue(value: string): Promise<Kanji | undefined> {\n        return joyo().then(data => {\n            const match = data.find((entry: KanjiData) => entry.name === value);\n            return match ? this.convert([match])[0] : undefined;\n        });\n    }\n\n    public convert = (data: KanjiData[]): Kanji[] => {\n        const romaji = new RomajiGenerator();\n        return data.map((result: KanjiData) => {\n            const on = result.on.map(reading => new KanjiReading(romaji.generate(reading), reading, ReadingType.ON));\n            const kun = result.kun.map(reading => new KanjiReading(romaji.generate(reading), reading, ReadingType.KUN));\n            const examples = result.examples.map((it: KanjiExample) => new Example(it.value, it.kana, it.english));\n            const grade = KyoikuGrade.fromInteger(result.grade);\n            const tags = result.tags ?? [];\n            return new Kanji(result.name, on.concat(kun), result.meanings, grade, result.source, examples, tags);\n        });\n    }\n}\n","import { useEffect, useState } from \"react\";\nimport { Kanji } from \"../../../types/kanji/Kanji\";\nimport { KanjiRepository } from \"../../../repository/KanjiRepository\";\nimport Copyable from \"../Copyable\";\nimport Inspectable from \"../Inspectable\";\nimport KanjiReadingDisplay from \"../../learn/kanji/KanjiReadingDisplay\";\nimport { ReadingType } from \"../../../types/kanji/ReadingType\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nconst InformationalKanji = (props: { value: string, className?: string }) => {\n    const [loading, setLoading] = useState(false);\n    const [kanji, setKanji] = useState<Kanji>();\n\n    useEffect(() => {\n        setLoading(true);\n\n        new KanjiRepository().getByValue(props.value).then(kanji => {\n            setLoading(false);\n            setKanji(kanji);\n        })\n    }, []);\n\n    const char = props.value;\n\n    const overlay = (\n        <div key={char + \"-popover\"}>\n            <LoadingSpinner active={loading} variant=\"primary\" />\n\n            <KanjiReadingDisplay\n                showRomaji={false}\n                type={ReadingType.ON}\n                readings={kanji?.getOnyomiReadings() ?? []}\n            />\n\n            <KanjiReadingDisplay\n                showRomaji={false}\n                type={ReadingType.KUN}\n                readings={kanji?.getKunyomiReadings() ?? []}\n            />\n        </div>\n    );\n\n    const title = kanji?.getMeanings().slice(0, 4).join(\", \") ?? \"Loading...\";\n\n    return (\n        <Copyable className={props.className} placement=\"top\" key={\"copyable\" + kanji?.getValue()} inline>\n            <Inspectable key={\"inspectable-\" +  kanji?.getValue()} className={props.className} popover={{ title: title, text: overlay }}>\n                <span key={char}>\n                    {char}\n                </span>\n            </Inspectable>\n        </Copyable>\n    )\n};\n\nexport default InformationalKanji;\n","import InformationalKanji from \"./InformationalKanji\";\n\nexport interface KanjiWordDisplayProps {\n    value: string;\n    className?: string;\n}\n\nconst KanjiWordDisplay = (props: KanjiWordDisplayProps) => {\n    return (\n        <div>{\n            [...props.value].map((char: string) => {\n                if (/[一-龯]/.test(char)) {\n                    return (\n                        <InformationalKanji\n                            value={char}\n                            key={\"display-\" + char}\n                            className={props.className}\n                        />\n                    );\n                } else {\n                    return (\n                        <span key={char} className={props.className}>\n                            {char}\n                        </span>\n                    )\n                }\n            })\n        }</div>\n    );\n}\n\nexport default KanjiWordDisplay;\n","import FlashCardBack from \"../FlashCardBack\";\nimport { CardBackFaceProps } from \"../FlashCard\";\nimport RomajiDisplay from \"../../ui/display/RomajiDisplay\";\nimport Copyable from \"../../ui/Copyable\";\nimport KanjiWordDisplay from \"../../ui/display/KanjiWordDisplay\";\nimport styles from \"../../../styles/sass/components/learn/sentence/SentenceStructureFlashCardBack.module.scss\"\n\nconst SentenceStructureFlashCardBack = (props: CardBackFaceProps) => {\n    const { data, onClick } = props;\n\n    const kanjiVariation = data.getKanjiVariation();\n\n    return (\n        <FlashCardBack title={data.getTitle()} onReset={onClick} className={styles.wrapper}>\n            <div className={styles.innerWrapper}>\n                {kanjiVariation && <KanjiWordDisplay\n                    className={styles.kanjiVariation}\n                    value={kanjiVariation}\n                />}\n\n                <Copyable className={styles.kana}>\n                    <span>{data.getKana()}</span>\n                </Copyable>\n\n                {props.showRomaji &&\n                    <RomajiDisplay kana={data.getKana()[0]} className={styles.romaji} />\n                }\n            </div>\n        </FlashCardBack>\n    );\n};\n\nexport default SentenceStructureFlashCardBack;","\nexport default class LifeSettings {\n    private readonly _enabled: boolean;\n    private readonly _quantity: number;\n\n    constructor(enabled: boolean, quantity: number) {\n        this._enabled = enabled;\n        this._quantity = quantity;\n    }\n\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    get quantity(): number {\n        return this._quantity;\n    }\n}\n\nexport class LifeSettingsBuilder {\n    private _enabled: boolean = true;\n    private _quantity: number = 5;\n\n    isEnabled(enabled: boolean = true): LifeSettingsBuilder {\n        this._enabled = enabled;\n        if (!enabled) {\n            this._quantity = 0;\n        }\n        return this;\n    }\n\n    withQuantity(quantity: number): LifeSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    build(): LifeSettings {\n        return new LifeSettings(this._enabled, this._quantity);\n    }\n}\n","export default class HintSettings {\n    private readonly _enabled: boolean;\n    private readonly _quantity: number;\n    private readonly _unlimited: boolean;\n\n    constructor(enabled: boolean, quantity: number, unlimited: boolean) {\n        this._enabled = enabled;\n        this._quantity = quantity;\n        this._unlimited = unlimited;\n    }\n\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    get quantity(): number {\n        return this._quantity;\n    }\n\n    get unlimited(): boolean {\n        return this._unlimited;\n    }\n}\n\nexport class HintSettingsBuilder {\n    private _enabled: boolean = true;\n    private _quantity: number = 0;\n    private _unlimited: boolean = false;\n\n    isEnabled(enabled: boolean = true): HintSettingsBuilder {\n        this._enabled = enabled;\n        return this;\n    }\n\n    withQuantity(quantity: number): HintSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    areUnlimited(enabled: boolean = true): HintSettingsBuilder {\n        this._unlimited = enabled;\n        return this;\n    }\n\n    build(): HintSettings {\n        return new HintSettings(this._enabled, this._quantity, this._unlimited);\n    }\n}","export default class TimeSettings {\n    private readonly _timed: boolean;\n    private readonly _countdown: boolean;\n    private readonly _secondsPerQuestion: number;\n\n    constructor(timed: boolean, countdown: boolean, secondsPerQuestion: number) {\n        this._timed = timed;\n        this._countdown = countdown;\n        this._secondsPerQuestion = secondsPerQuestion;\n    }\n\n    get timed(): boolean {\n        return this._timed;\n    }\n\n    get countdown(): boolean {\n        return this._countdown;\n    }\n\n    get secondsPerQuestion(): number {\n        return this._secondsPerQuestion;\n    }\n}\n\nexport class TimeSettingsBuilder {\n    private _timed: boolean = false;\n    private _countdown: boolean = false;\n    private _secondsPerQuestion: number = 0;\n\n    isTimed(enabled: boolean = true): TimeSettingsBuilder {\n        this._timed = enabled;\n        return this;\n    }\n\n    isCountDown(enabled: boolean = true): TimeSettingsBuilder {\n        this._countdown = enabled;\n        return this;\n    }\n\n    withSecondsPerQuestion(seconds: number): TimeSettingsBuilder {\n        this._secondsPerQuestion = seconds;\n        return this;\n    }\n\n    build(): TimeSettings {\n        return new TimeSettings(this._timed, this._countdown, this._secondsPerQuestion);\n    }\n}","import { Filter } from \"./Filter\";\n\nexport default class FilterChain<T> {\n    private filters = new Set<Filter<T>>();\n\n    public addFilter(filter: Filter<T>) {\n        this.filters.add(filter);\n    }\n\n    public withFilter(filter: Filter<T>): FilterChain<T> {\n        this.filters.add(filter);\n        return this;\n    }\n\n    public execute(values: T[]): T[] {\n        let reduced = values;\n        [...this.filters].forEach((filter: Filter<T>) => {\n            reduced = filter.apply(reduced);\n        });\n        return reduced;\n    }\n}\n","import { QuestionType } from \"../../../game/QuestionType\";\nimport LearnableField from \"../../../learn/LearnableField\";\nimport FilterChain from \"../../../../filters/FilterChain\";\nimport { Learnable } from \"../../../learn/Learnable\";\n\nexport default class QuestionSettings {\n    /**\n     * The field whose value will be presented to the user in the form of a question.\n     * E.g. A {@link Kanji} object with {@link LearnableField.ONYOMI_READING} might ask the user;\n     * \"Which is the {@link _answerField name} for {@link _questionField value}?\".\n     */\n    private readonly _questionField: LearnableField;\n\n    /**\n     * The field whose value the user will need input to get the question correct.\n     * E.g. A {@link Kana} object with {@link LearnableField.KANA} might ask the user;\n     * \"What is the {@link _answerField} for the {@link _questionField value}?\".\n     */\n    private readonly _answerField: LearnableField;\n\n    /**\n     * The type of question they want to be asked during the game.\n     */\n    private readonly _type: QuestionType;\n\n    /**\n     * The number of options they want to be displayed on screen per question.\n     * Applies only to {@link QuestionType.CHOICE}.\n     */\n    private readonly _cards: number;\n\n    /**\n     * The number of question-answer pairs they want to be asked in any given question.\n     * This applies only to {@link QuestionType.MATCH} as the user can be given several questions\n     * and they must match the chosen data fields with that of their respective answers.\n     */\n    private readonly _quantity: number;\n\n    /**\n     * A function that produces a {@link FilterChain} that is used to remove unwanted answers\n     * from the pool of wrong answers that is display on a {@link QuestionType.CHOICE} question.\n     * E.g: You have a multiple chose {@link Kana} question and the question value is a diagraph like \"gyo\".\n     * You wouldn't want to show non-diagraph kana as it's obvious that they are wrong answers. So you might\n     * add a filter chain with a {@link DiagraphFilter} so the user is present only diagraph options.\n     */\n    private readonly _answerFilter: (data: any) => FilterChain<any>;\n\n    /**\n     * Whether or not the current game session will track the players score.\n     */\n    private readonly _score: boolean;\n\n    constructor(questionField: LearnableField, answerField: LearnableField, type: QuestionType, cards: number,\n                quantity: number, answerFilter: (data: any) => FilterChain<any>, score: boolean) {\n        this._questionField = questionField;\n        this._answerField = answerField;\n        this._type = type;\n        this._cards = cards;\n        this._answerFilter = answerFilter;\n        this._score = score;\n        this._quantity = quantity;\n    }\n\n    get questionField(): LearnableField {\n        return this._questionField;\n    }\n\n    get answerField(): LearnableField {\n        return this._answerField;\n    }\n\n    get type(): QuestionType {\n        return this._type;\n    }\n\n    get cards(): number {\n        return this._cards;\n    }\n\n    get answerFilter(): (data: any) => FilterChain<any> {\n        return this._answerFilter;\n    }\n\n    get score(): boolean {\n        return this._score;\n    }\n\n    get quantity(): number {\n        return this._quantity;\n    }\n}\n\nexport class QuestionSettingsBuilder {\n    private _questionField: LearnableField = LearnableField.KANA;\n    private _answerField: LearnableField = LearnableField.ROMAJI;\n    private _type: QuestionType = QuestionType.TEXT;\n    private _cards: number = 1;\n    private _quantity: number = 1;\n    private _wrongOptionsFilterChain: (data: any) => FilterChain<any> = () => new FilterChain(); //TODO: Can't satisfy TS compiler with explicit type here\n    private _score: boolean = false;\n\n    fromExisting(settings: QuestionSettings): QuestionSettingsBuilder {\n        this._questionField = settings.questionField;\n        this._answerField = settings.answerField;\n        this._type = settings.type;\n        this._cards  =settings.cards;\n        this._wrongOptionsFilterChain = settings.answerFilter;\n        this._score = settings.score;\n\n        return this;\n    }\n\n    withFields(question: LearnableField, answer: LearnableField): QuestionSettingsBuilder {\n        this._questionField = question;\n        this._answerField = answer;\n        return this;\n    }\n\n    withType(type: QuestionType): QuestionSettingsBuilder {\n        this._type = type;\n        return this;\n    }\n\n    withCardQuantity(cards: number): QuestionSettingsBuilder {\n        this._cards = cards;\n        return this;\n    }\n\n    withWrongOptionsFilterChain<T extends Learnable>(filter: (data: T) => FilterChain<T>): QuestionSettingsBuilder {\n        this._wrongOptionsFilterChain = filter;\n        return this;\n    }\n\n    withScoreTracking(enable: boolean = true): QuestionSettingsBuilder {\n        this._score = enable;\n        return this;\n    }\n\n    withQuantity(quantity: number): QuestionSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    build(): QuestionSettings {\n        return new QuestionSettings(this._questionField, this._answerField, this._type, this._cards,\n            this._quantity, this._wrongOptionsFilterChain, this._score\n        );\n    }\n}\n","import ModeSettings from \"../ModeSettings\";\nimport LifeSettings, { LifeSettingsBuilder } from \"./LifeSettings\";\nimport HintSettings, { HintSettingsBuilder } from \"./HintSettings\";\nimport TimeSettings, { TimeSettingsBuilder } from \"./TimeSettings\";\nimport QuestionSettings, { QuestionSettingsBuilder } from \"./QuestionSettings\";\n\nexport default class GameSettings implements ModeSettings {\n    private readonly _hints: HintSettings;\n    private readonly _lives: LifeSettings;\n    private readonly _time: TimeSettings;\n    private readonly _question: QuestionSettings;\n\n    public constructor(hints: HintSettings, lives: LifeSettings, time: TimeSettings, display: QuestionSettings) {\n        this._hints = hints;\n        this._lives = lives;\n        this._time = time;\n        this._question = display;\n    }\n\n    get hints(): HintSettings {\n        return this._hints;\n    }\n\n    get lives(): LifeSettings {\n        return this._lives;\n    }\n\n    get time(): TimeSettings {\n        return this._time;\n    }\n\n    get question(): QuestionSettings {\n        return this._question;\n    }\n}\n\nexport class GameSettingsBuilder {\n    private _hints: HintSettings = new HintSettingsBuilder().build();\n    private _lives: LifeSettings = new LifeSettingsBuilder().build();\n    private _time: TimeSettings = new TimeSettingsBuilder().build();\n    private _question: QuestionSettings = new QuestionSettingsBuilder().build();\n\n    public fromExisting(settings: GameSettings): GameSettingsBuilder {\n        this._hints = settings.hints;\n        this._lives = settings.lives;\n        this._time = settings.time;\n        this._question = settings.question;\n        return this;\n    }\n\n    public withHintSettings(hints: HintSettings): GameSettingsBuilder {\n        this._hints = hints;\n        return this;\n    }\n\n    public withLifeSettings(lives: LifeSettings): GameSettingsBuilder {\n        this._lives = lives;\n        return this;\n    }\n\n    public withTimeSettings(time: TimeSettings): GameSettingsBuilder {\n        this._time = time;\n        return this;\n    }\n\n    public withQuestionSettings(display: QuestionSettings): GameSettingsBuilder {\n        this._question = display;\n        return this;\n    }\n\n    public build(): GameSettings {\n        return new GameSettings(this._hints, this._lives, this._time, this._question);\n    }\n}\n","import SessionMode from \"./SessionMode\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSettings from \"./settings/data/DataSettings\";\nimport GameSettings from \"./settings/game/GameSettings\";\n\nexport default class PlayMode extends SessionMode {\n    constructor(displayName: string, colour: string, icon: IconDefinition | string, dataSettings: DataSettings, gameSettings: GameSettings) {\n        super(displayName, colour, icon, dataSettings, gameSettings);\n    }\n}\n","import { faBezierCurve, faCircle, faPaintBrush, faRandom, faSchool, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { PlayMenuModes } from \"../../MenuModes\";\nimport { GameSettingsBuilder } from \"../../session/settings/game/GameSettings\";\nimport { QuestionType } from \"../QuestionType\";\nimport PlayMode from \"../../session/PlayMode\";\nimport { KanjiSettingsBuilder } from \"../../session/settings/data/KanjiSettings\";\nimport { QuestionSettingsBuilder } from \"../../session/settings/game/QuestionSettings\";\nimport LearnableField from \"../../learn/LearnableField\";\nimport { TimeSettingsBuilder } from \"../../session/settings/game/TimeSettings\";\nimport { HintSettingsBuilder } from \"../../session/settings/game/HintSettings\";\n\nexport default class PlayKanjiModes implements PlayMenuModes {\n    getModes(): PlayMode[] {\n        const defaultKanjiSettings = new KanjiSettingsBuilder().withJoyoKanji().withQuantity(25).build();\n\n        return [\n            new PlayMode(\"Kanji\", \"#6857ee\", faPaintBrush,\n                defaultKanjiSettings,\n                new GameSettingsBuilder()\n                    .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n                    .withHintSettings(new HintSettingsBuilder().isEnabled(false).build())\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.MEANING, LearnableField.KANJI)\n                        .withType(QuestionType.CHOICE)\n                        .withCardQuantity(4)\n                        .withScoreTracking(true)\n                        .build()\n                    ).build()\n            ),\n            new PlayMode(\"Meaning\", \"#65cd3a\", faSchool,\n                defaultKanjiSettings,\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.KANJI, LearnableField.MEANING)\n                        .withType(QuestionType.TEXT)\n                        .withCardQuantity(4)\n                        .withScoreTracking(true)\n                        .build()\n                    ).build()\n            ),\n            new PlayMode(\"On'yomi\", \"#eacd35\", faStar,\n                defaultKanjiSettings,\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.KANJI, LearnableField.ONYOMI_READING)\n                        .withType(QuestionType.CHOICE)\n                        .withCardQuantity(4)\n                        .withScoreTracking(true)\n                        .build()\n                    ).build()\n            ),\n            new PlayMode(\"Kun'yomi\", \"#e21717\", faCircle,\n                defaultKanjiSettings,\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.KANJI, LearnableField.KUNYOMI_READING)\n                        .withType(QuestionType.CHOICE)\n                        .withCardQuantity(4)\n                        .withScoreTracking(true)\n                        .build()\n                    ).build()\n            ),\n            new PlayMode(\"Match\", \"#e79711\", faBezierCurve,\n                new KanjiSettingsBuilder().withJoyoKanji().withQuantity(80).build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.KANJI, LearnableField.MEANING)\n                        .withType(QuestionType.MATCH)\n                        .withScoreTracking(true)\n                        .withQuantity(4)\n                        .build()\n                    )\n                    .build()\n            ),\n            new PlayMode(\"Random\", \"#3cabca\", faRandom,\n                defaultKanjiSettings,\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.RANDOM, LearnableField.RANDOM)\n                        .withType(QuestionType.RANDOM)\n                        .withCardQuantity(4)\n                        .withScoreTracking(true)\n                        .build()\n                    )\n                    .build()\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"KANJI\";\n    }\n}\n","import Topic from \"../../../Topic\";\nimport DataSettings from \"./DataSettings\";\n\n/**\n * Settings used to by {@link KanaRepository} to customise\n * the selection of {@link Kana} returned.\n * @see KanaSettingsBuilder\n */\nexport default class KanaSettings extends DataSettings {\n    private readonly _hiragana: boolean;\n    private readonly _katakana: boolean;\n    private readonly _diagraphs: boolean;\n    private readonly _diacriticals: boolean;\n    private readonly _regular: boolean;\n    private readonly _onlyDiagraphs: boolean;\n\n    constructor(hiragana: boolean, katakana: boolean, diagraphs: boolean, diacriticals: boolean, regular: boolean,\n                onlyDiagraphs: boolean, quantity?: number) {\n        super(Topic.KANA, quantity)\n        this._hiragana = hiragana;\n        this._katakana = katakana;\n        this._diagraphs = diagraphs;\n        this._diacriticals = diacriticals;\n        this._regular = regular;\n        this._onlyDiagraphs = onlyDiagraphs;\n    }\n\n    get hiragana(): boolean {\n        return this._hiragana;\n    }\n\n    get katakana(): boolean {\n        return this._katakana;\n    }\n\n    get diagraphs(): boolean {\n        return this._diagraphs;\n    }\n\n    get diacriticals(): boolean {\n        return this._diacriticals;\n    }\n\n    get regular(): boolean {\n        return this._regular;\n    }\n\n    get onlyDiagraphs(): boolean {\n        return this._onlyDiagraphs;\n    }\n}\n\nexport class KanaSettingsBuilder {\n    private _hiragana: boolean = false;\n    private _katakana: boolean = false;\n    private _regular: boolean = true;\n    private _diagraphs: boolean = false;\n    private _onlyDiagraphs: boolean = false;\n    private _diacriticals: boolean = false;\n    private _quantity: number | undefined;\n\n    withHiragana(include: boolean = true): KanaSettingsBuilder {\n        this._hiragana = include;\n        return this;\n    }\n\n    withKatakana(include: boolean = true): KanaSettingsBuilder {\n        this._katakana = include;\n        return this;\n    }\n\n    withRegularKana(include: boolean = true): KanaSettingsBuilder {\n        this._regular = include;\n        return this;\n    }\n\n    withDiagraphs(include: boolean = true): KanaSettingsBuilder {\n        this._diagraphs = include;\n        return this;\n    }\n\n    withOnlyDiagraphs(include: boolean = true): KanaSettingsBuilder {\n        this._onlyDiagraphs = include;\n        return this;\n    }\n\n    withDiacriticals(include: boolean = true): KanaSettingsBuilder {\n        this._diacriticals = include;\n        return this;\n    }\n\n    withQuantity(quantity?: number): KanaSettingsBuilder {\n        this._quantity = quantity;\n        return this;\n    }\n\n    withMaxQuantity(): KanaSettingsBuilder {\n        this._quantity = undefined;\n        return this;\n    }\n\n    withEverything(): KanaSettingsBuilder {\n        this._hiragana = true;\n        this._katakana = true;\n        this._diacriticals = true;\n        this._diagraphs = true;\n        return this;\n    }\n\n    build(): KanaSettings {\n        return new KanaSettings(\n            this._hiragana, this._katakana, this._diagraphs, this._diacriticals,\n            this._regular, this._onlyDiagraphs, this._quantity\n        );\n    }\n}","import { Kana } from \"../../types/kana/Kana\";\nimport { Filter } from \"../Filter\";\n\nexport default class DiagraphFilter implements Filter<Kana> {\n\n    private readonly include: boolean;\n    private readonly includeDiacriticals: boolean;\n\n    constructor(include: boolean = false, includeDiacriticals: boolean = true) {\n        this.include = include;\n        this.includeDiacriticals = includeDiacriticals;\n    }\n\n    apply(kana: Kana[]): Kana[] {\n        return kana.filter(kana => kana.isDiagraph() === this.include);\n    }\n}","import KanaType from \"../../types/kana/KanaType\";\nimport { Kana } from \"../../types/kana/Kana\";\nimport { Filter } from \"../Filter\";\n\nexport default class KanaTypeFilter implements Filter<Kana> {\n\n    private readonly type: KanaType;\n    private readonly include: boolean;\n\n    constructor(type: KanaType, include: boolean = false) {\n        this.type = type;\n        this.include = include;\n    }\n\n    apply(kana: Kana[]): Kana[] {\n        return kana.filter(kana => this.include ? kana.type === this.type : kana.type !== this.type);\n    }\n}","import { faBezierCurve, faFire, faFont, faGraduationCap, faHourglassStart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faKickstarterK } from \"@fortawesome/free-brands-svg-icons\";\nimport { PlayMenuModes } from \"../../MenuModes\";\nimport PlayMode from \"../../session/PlayMode\";\nimport { KanaSettingsBuilder } from \"../../session/settings/data/KanaSettings\";\nimport { GameSettingsBuilder } from \"../../session/settings/game/GameSettings\";\nimport { QuestionSettingsBuilder } from \"../../session/settings/game/QuestionSettings\";\nimport { QuestionType } from \"../QuestionType\";\nimport { HintSettingsBuilder } from \"../../session/settings/game/HintSettings\";\nimport { LifeSettingsBuilder } from \"../../session/settings/game/LifeSettings\";\nimport { TimeSettingsBuilder } from \"../../session/settings/game/TimeSettings\";\nimport LearnableField from \"../../learn/LearnableField\";\nimport FilterChain from \"../../../filters/FilterChain\";\nimport DiagraphFilter from \"../../../filters/kana/DiagraphFilter\";\nimport { Kana } from \"../../kana/Kana\";\nimport { Learnable } from \"../../learn/Learnable\";\nimport KanaTypeFilter from \"../../../filters/kana/KanaTypeFilter\";\n\nexport default class PlayKanaModes implements PlayMenuModes {\n    getModes(): PlayMode[] {\n        return [\n            new PlayMode(\"Relaxed\", \"#fdb40e\", faGraduationCap,\n                new KanaSettingsBuilder().withEverything().build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(\n                        new QuestionSettingsBuilder()\n                            .withType(QuestionType.TEXT)\n                            .withFields(LearnableField.KANA, LearnableField.ROMAJI)\n                            .withScoreTracking(false)\n                            .build()\n                    )\n                    .withLifeSettings(new LifeSettingsBuilder().isEnabled(false).build())\n                    .build()\n            ),\n            new PlayMode(\"Time Attack\", \"#ff7730\", faHourglassStart,\n                new KanaSettingsBuilder().withEverything().build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(\n                        new QuestionSettingsBuilder()\n                            .withType(QuestionType.TEXT)\n                            .withFields(LearnableField.KANA, LearnableField.ROMAJI)\n                            .withScoreTracking(true)\n                            .build()\n                    )\n                    .withHintSettings(new HintSettingsBuilder().isEnabled().withQuantity(3).build())\n                    .withLifeSettings(new LifeSettingsBuilder().isEnabled(false).build())\n                    .withTimeSettings(new TimeSettingsBuilder().isCountDown().withSecondsPerQuestion(10).build())\n                    .build()\n            ),\n            new PlayMode(\"Rōmaji\", \"#1785e2\", faFont,\n                new KanaSettingsBuilder().withEverything().build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(\n                        new QuestionSettingsBuilder()\n                            .withType(QuestionType.TEXT)\n                            .withFields(LearnableField.KANA, LearnableField.ROMAJI)\n                            .withScoreTracking(true)\n                            .build()\n                    )\n                    .withHintSettings(new HintSettingsBuilder().isEnabled().withQuantity(3).build())\n                    .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n                    .build()\n            ),\n            new PlayMode(\"Kana\", \"#a01219\", faKickstarterK,\n                new KanaSettingsBuilder().withEverything().build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(\n                        new QuestionSettingsBuilder()\n                            .withFields(LearnableField.ROMAJI, LearnableField.KANA)\n                            .withType(QuestionType.CHOICE)\n                            .withWrongOptionsFilterChain((data: Learnable) => {\n                                return new FilterChain<Kana>()\n                                    .withFilter(new DiagraphFilter((data as Kana).isDiagraph()))\n                                    .withFilter(new KanaTypeFilter((data as Kana).type, true))\n                            })\n                            .withCardQuantity(4)\n                            .withScoreTracking(true)\n                            .build()\n                    )\n                    .withHintSettings(new HintSettingsBuilder().isEnabled().withQuantity(3).build())\n                    .build()\n            ),\n            new PlayMode(\"Match\", \"#56d94d\", faBezierCurve,\n                new KanaSettingsBuilder().withEverything().withQuantity(45).build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.KANA, LearnableField.ROMAJI)\n                        .withType(QuestionType.MATCH)\n                        .withQuantity(3)\n                        .withScoreTracking(true)\n                        .build()\n                    )\n                    .withHintSettings(new HintSettingsBuilder().isEnabled(false).build())\n                    .withLifeSettings(new LifeSettingsBuilder().isEnabled().withQuantity(5).build())\n                    .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n                    .build()\n            ),\n            new PlayMode(\"Hardcore\", \"#fc3131\", faFire,\n                new KanaSettingsBuilder().withEverything().withMaxQuantity().build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withFields(LearnableField.ROMAJI, LearnableField.KANA)\n                        .withType(QuestionType.CHOICE)\n                        .withCardQuantity(6)\n                        .withScoreTracking(true)\n                        .build()\n                    )\n                    .withHintSettings(new HintSettingsBuilder().isEnabled(false).build())\n                    .withLifeSettings(new LifeSettingsBuilder().isEnabled(true).withQuantity(1).build())\n                    .withTimeSettings(new TimeSettingsBuilder().isCountDown().withSecondsPerQuestion(5).build())\n                    .build()\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"KANA\";\n    }\n}\n","import { faVial } from \"@fortawesome/free-solid-svg-icons\";\nimport { LearnMenuModes } from \"../../MenuModes\";\nimport LearnMode from \"../../session/LearnMode\";\nimport LearnSettings from \"../../session/settings/LearnSettings\";\nimport { KanaSettingsBuilder } from \"../../session/settings/data/KanaSettings\";\n\nclass LearnKanaModes implements LearnMenuModes {\n    getModes(): LearnMode[] {\n        const defaultLearnSettings = new LearnSettings();\n\n        return [\n            new LearnMode(\"Hiragana\", \"#fdb40e\", \"あ\",\n                new KanaSettingsBuilder().withHiragana().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Katakana\", \"#ff7730\", \"ア\",\n                new KanaSettingsBuilder().withKatakana().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Diacriticals\", \"#1785e2\", \"ざ\",\n                new KanaSettingsBuilder()\n                    .withHiragana()\n                    .withKatakana()\n                    .withDiacriticals()\n                    .withDiagraphs(false)\n                    .withRegularKana(false)\n                    .withMaxQuantity()\n                    .build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Diagraphs\", \"#a01219\", \"きゃ\",\n                new KanaSettingsBuilder()\n                    .withHiragana()\n                    .withKatakana()\n                    .withOnlyDiagraphs()\n                    .withMaxQuantity()\n                    .build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"All\", \"#fc3131\", \"あア\",\n                new KanaSettingsBuilder().withEverything().build(),\n                defaultLearnSettings\n            ),\n            new LearnMode(\"Custom\", \"#41d085\", faVial,\n                new KanaSettingsBuilder().build(),\n                defaultLearnSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"KANA\"\n    }\n}\n\nexport default LearnKanaModes;\n","import { PlayMenuModes } from \"../../MenuModes\";\nimport PlayMode from \"../../session/PlayMode\";\nimport { faCircle, faGrinBeam, faToriiGate } from \"@fortawesome/free-solid-svg-icons\";\nimport { SentenceStructureSettingsBuilder } from \"../../session/settings/data/SentenceStructureSettings\";\nimport { GameSettingsBuilder } from \"../../session/settings/game/GameSettings\";\nimport { QuestionSettingsBuilder } from \"../../session/settings/game/QuestionSettings\";\nimport { QuestionType } from \"../QuestionType\";\nimport LearnableField from \"../../learn/LearnableField\";\nimport { HintSettingsBuilder } from \"../../session/settings/game/HintSettings\";\nimport { TimeSettingsBuilder } from \"../../session/settings/game/TimeSettings\";\nimport { LifeSettingsBuilder } from \"../../session/settings/game/LifeSettings\";\n\nclass PlaySentenceStructureModes implements PlayMenuModes {\n    getModes(): PlayMode[] {\n        const defaultDataSettings = new SentenceStructureSettingsBuilder().build();\n\n        return [\n            new PlayMode(\"Japanese\", \"#a92739\", faToriiGate,\n                new SentenceStructureSettingsBuilder()\n                    .withQuantity(25)\n                    .withAdjectives()\n                    .withNouns()\n                    .withVerbs()\n                    .withAdverbs()\n                    .build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withType(QuestionType.CHOICE)\n                        .withFields(LearnableField.MEANING, LearnableField.JAPANESE)\n                        .withScoreTracking()\n                        .withCardQuantity(4)\n                        .build())\n                    .withHintSettings(new HintSettingsBuilder().withQuantity(5).build())\n                    .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n                    .withLifeSettings(new LifeSettingsBuilder().isEnabled().withQuantity(5).build()\n                ).build()\n            ),\n            new PlayMode(\"Meaning\", \"#57afd9\", faGrinBeam,   new SentenceStructureSettingsBuilder()\n                    .withQuantity(25)\n                    .withAdjectives()\n                    .withNouns()\n                    .withVerbs()\n                    .withAdverbs()\n                    .build(),\n                new GameSettingsBuilder()\n                    .withQuestionSettings(new QuestionSettingsBuilder()\n                        .withType(QuestionType.TEXT)\n                        .withFields(LearnableField.JAPANESE, LearnableField.MEANING)\n                        .withScoreTracking()\n                        .build())\n                    .withHintSettings(new HintSettingsBuilder().withQuantity(5).build())\n                    .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n                    .withLifeSettings(new LifeSettingsBuilder().isEnabled().withQuantity(5).build()\n                ).build()\n            ),\n            new PlayMode(\"Placeholder 3\", \"#000\", faCircle, defaultDataSettings,\n                new GameSettingsBuilder().build()\n            ),\n            new PlayMode(\"Placeholder 4\", \"#000\", faCircle, defaultDataSettings,\n                new GameSettingsBuilder().build()\n            ),\n            new PlayMode(\"Placeholder 5\", \"#000\", faCircle, defaultDataSettings,\n                new GameSettingsBuilder().build()\n            ),\n            new PlayMode(\"Placeholder 6\", \"#000\", faCircle, defaultDataSettings,\n                new GameSettingsBuilder().build()\n            ),\n        ];\n    }\n\n    getTopic(): string {\n        return \"SENTENCE\";\n    }\n\n}\n\nexport default PlaySentenceStructureModes;\n","import { Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport styles from \"../../styles/sass/components/ui/ToggleSwitch.module.scss\";\n\nexport interface ToggleSwitchProps {\n    label?: string;\n    enabled: boolean;\n    className?: string;\n    disabled?: boolean;\n    onChange?: () => void;\n}\n\nconst ToggleSwitch = (props: ToggleSwitchProps) => {\n    const { label, enabled, disabled, className, onChange, ...rest} = props;\n    return (\n        <Form.Check\n            inline\n            type=\"switch\"\n            id={label}\n            label={label}\n            disabled={disabled}\n            className={[className, styles.switch].join(\" \")}\n            checked={enabled}\n            onChange={onChange}\n            {...rest}\n        />\n    )\n}\n\nexport default ToggleSwitch;\n","import React, { Component } from \"react\";\nimport ScrollableContainer from \"../../ui/ScrollableContainer\";\nimport { Button, Card, Col, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faCheck, faUndo, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSettings from \"../../../types/session/settings/data/DataSettings\";\nimport styles from \"../../../styles/sass/components/settings/data/DataSettingsMenu.module.scss\";\n\nexport interface DataSettingsMenuProps<T extends DataSettings> {\n    title: string;\n    icon: IconDefinition\n    onQuit: () => void;\n    onReset: () => void;\n    isValid?: () => boolean;\n    onConfirm: (settings: T) => void;\n}\n\nclass DataSettingsMenu extends Component<DataSettingsMenuProps<any>> {\n    render() {\n        const { title, icon, children, onQuit, onReset, onConfirm, isValid } = this.props;\n\n        return (\n            <div className={styles.wrapper}>\n                <Card bg=\"dark\" className={[styles.card, \"mb-2\"].join(\" \")}>\n                    <p className={styles.title}>\n                        <FontAwesomeIcon icon={icon} className={styles.icon} fixedWidth />\n                        <span>{title} Settings</span>\n                    </p>\n\n                    <ScrollableContainer className={styles.scrollable}>\n                        {children}\n                    </ScrollableContainer>\n\n                    {/*TODO: Pull this out into component?*/}\n                    <Card.Footer className={styles.footer}>\n                        <Form.Row>\n                            <Col className={styles.noGuttersLeft}>\n                                <Button variant=\"danger\" block onClick={onQuit} className={styles.button}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />\n                                    <span className={styles.buttonText}> Back</span>\n                                </Button>\n                            </Col>\n\n                            <Col className={[styles.noGuttersLeft, styles.noGuttersRight].join(\" \")}>\n                                <Button variant=\"warning\" block onClick={onReset} className={styles.button}>\n                                    <FontAwesomeIcon icon={faUndo}/>\n                                    <span className={styles.buttonText}> Reset</span>\n                                </Button>\n                            </Col>\n\n                            <Col className={styles.noGuttersRight}>\n                                <Button variant=\"success\" block onClick={onConfirm} className={styles.button} disabled={isValid ? !isValid() : false}>\n                                    <FontAwesomeIcon icon={faCheck}/>\n                                    <span className={styles.buttonText}> Confirm</span>\n                                </Button>\n                            </Col>\n                        </Form.Row>\n                    </Card.Footer>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default DataSettingsMenu;\n","import { Component } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBalanceScale } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../../styles/sass/components/ui/fields/QuantityField.module.scss\";\n\nexport interface QuantityFieldProps {\n    value?: number;\n    className?: string;\n    isValid?: () => boolean;\n    onChange?: (value: number) => void;\n}\n\nclass QuantityField extends Component<QuantityFieldProps> {\n    render() {\n        const { value, className, onChange } = this.props;\n\n        return (\n            <InputGroup hasValidation>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FontAwesomeIcon icon={faBalanceScale} className={styles.icon} fixedWidth />\n                        <span className={styles.description}>Quantity</span>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n\n                <Form.Control\n                    required\n                    type=\"number\"\n                    value={value}\n                    placeholder=\"Quantity\"\n                    isValid={this.isValid()}\n                    isInvalid={!this.isValid()}\n                    className={[className, styles.input].join(\" \")}\n                    onChange={(e) => onChange?.(Number(e.target.value))}\n                />\n            </InputGroup>\n        );\n    }\n\n    private isValid = (): boolean => {\n        const { value, isValid } = this.props;\n        const isCustomValid = isValid?.() ?? true;\n        const isValidNumber = !!value && /^[0-9]+$/.test(value.toString());\n        return isCustomValid && isValidNumber;\n    }\n}\n\nexport default QuantityField;\n","import { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport styles from \"../../../styles/sass/components/settings/data/KanaSettingsForm.module.scss\";\nimport KanaSettings, { KanaSettingsBuilder } from \"../../../types/session/settings/data/KanaSettings\";\nimport ToggleSwitch from \"../../ui/ToggleSwitch\";\nimport DataSettingsMenu, { DataSettingsMenuProps } from \"./DataSettingsMenu\";\nimport QuantityField from \"../../ui/fields/QuantityField\";\n\ninterface KanaSettingsState {\n    hiragana: boolean;\n    katakana: boolean;\n    diagraphs: boolean;\n    quantity?: number;\n}\n\nclass KanaSettingsForm extends Component<DataSettingsMenuProps<KanaSettings>, KanaSettingsState> {\n\n    private readonly defaultState = new KanaSettingsBuilder().withHiragana().build();\n\n    constructor(props: DataSettingsMenuProps<KanaSettings> | Readonly<DataSettingsMenuProps<KanaSettings>>) {\n        super(props);\n        this.state = {\n            hiragana: this.defaultState.hiragana,\n            katakana: this.defaultState.katakana,\n            diagraphs: this.defaultState.diagraphs,\n            quantity: this.defaultState.quantity\n        }\n    }\n\n    render() {\n        const { title, icon, onQuit } = this.props;\n        const { hiragana, katakana, diagraphs, quantity } = this.state;\n\n        return (\n            <DataSettingsMenu title={title} icon={icon} onQuit={onQuit} onReset={this.reset} onConfirm={this.confirm} isValid={this.validate}>\n                <Row>\n                    <Col>\n                        <ToggleSwitch\n                            label=\"Hiragana\"\n                            enabled={hiragana}\n                            data-testid=\"hiragana\"\n                            className={styles.switch}\n                            disabled={hiragana && !katakana}\n                            onChange={() => this.setState({ hiragana: !hiragana })}\n                        />\n\n                        <p className={hiragana ? styles.description : styles.disabled}>\n                            Hiragana is the main syllabary that defines all the sounds that make up the spoken Japanese\n                            language. It is also used in the written language for Japanese words and furigana. These\n                            characters are quite cursive in nature.\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Katakana\"\n                            enabled={katakana}\n                            className={styles.switch}\n                            disabled={katakana && !hiragana}\n                            data-testid=\"katakana\"\n                            onChange={() => this.setState({ katakana: !katakana })}\n                        />\n\n                        <p className={katakana ? styles.description : styles.disabled}>\n                            Katakana is a mirror of the aforementioned Hiragana syllabary. There is a 1 to 1 mapping\n                            of each kana that is pronounced in the same way. They are written differently and are\n                            generally only used for loan words and onomatopoeia. These characters are much more angular\n                            and linear than Hiragana.\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Diagraphs\"\n                            enabled={diagraphs}\n                            className={styles.switch}\n                            data-testid=\"diagraphs\"\n                            onChange={() => this.setState({ diagraphs: !diagraphs })}\n                        />\n\n                        <p className={diagraphs ? styles.description : styles.disabled}>\n                            Diagraphs are combinations of two kana. Both syllabaries have the same diagraphs in their\n                            respective kana.\n                        </p>\n\n                        <QuantityField\n                            value={quantity}\n                            className={styles.quantity}\n                            isValid={this.validate}\n                            onChange={(value: number) => this.setState({ quantity: value })}\n                        />\n                    </Col>\n                </Row>\n            </DataSettingsMenu>\n        );\n    }\n\n    private reset = () => {\n        this.setState({\n            hiragana: this.defaultState.hiragana,\n            katakana: this.defaultState.katakana,\n            diagraphs: this.defaultState.diagraphs,\n            quantity: this.defaultState.quantity\n        });\n        this.props.onReset();\n    }\n\n    private confirm = () => {\n        const { hiragana, katakana, diagraphs, quantity } = this.state;\n\n        const settings = new KanaSettingsBuilder()\n            .withHiragana(hiragana)\n            .withKatakana(katakana)\n            .withDiagraphs(diagraphs)\n            .withQuantity(quantity)\n            .build();\n\n        this.props.onConfirm(settings);\n    }\n\n    private validate = (): boolean => {\n        const { quantity } = this.state;\n        return !!quantity && quantity > 0 && quantity <= 214\n    }\n}\n\nexport default KanaSettingsForm;\n","import { Component } from \"react\";\nimport { faChevronRight, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { KyoikuGrade } from \"../../../types/kanji/KyoikuGrade\";\nimport styles from \"../../../styles/sass/components/ui/buttons/KyoikuGradeButton.module.scss\";\n\ninterface KyoikuGradeButtonProps {\n    grade: KyoikuGrade;\n    iconColour?: string;\n    icon?: IconDefinition;\n    isSelected: boolean;\n    onClick: (grade: KyoikuGrade) => void;\n}\n\nclass KyoikuGradeButton extends Component<KyoikuGradeButtonProps> {\n    constructor(props: KyoikuGradeButtonProps | Readonly<KyoikuGradeButtonProps>) {\n        super(props);\n        this.state = {\n            isSelected: false\n        }\n    }\n\n    render() {\n        const { grade, isSelected, icon } = this.props;\n\n        const className = isSelected ? styles[\"kyoiku-grade-\" + grade.value + \"-selected\"] : styles[\"kyoiku-grade-\" + grade.value];\n\n        return (\n            <button className={className} onClick={this.handleClick}>\n                <FontAwesomeIcon icon={icon ? icon : faChevronRight} className={styles.icon} fixedWidth />\n                <span className={styles.text}> Grade {grade.value}</span>\n            </button>\n        );\n    }\n\n    private handleClick = () => {\n        const { grade, onClick } = this.props;\n        onClick(grade);\n    }\n}\n\nexport default KyoikuGradeButton;\n","export default class TemplateString extends String {\n\n    private readonly value: string;\n\n    constructor(props: string) {\n        super(props);\n        this.value = props;\n    }\n\n    public format(...args: any[]): string {\n        let response = this.value;\n\n        for (let i = 0; i < args.length; i++) {\n            response = response.replace(\"{\" + i + \"}\", args[i].toString())\n        }\n\n        return response;\n    }\n}","import { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { faGraduationCap, faLeaf, faMountain, faPaintBrush, faSchool, faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport KyoikuGradeButton from \"../../ui/buttons/KyoikuGradeButton\";\nimport Arrays from \"../../../utility/Arrays\";\nimport { KyoikuGrade } from \"../../../types/kanji/KyoikuGrade\";\nimport TemplateString from \"../../../types/TemplateString\";\nimport KanjiSettings, { KanjiSettingsBuilder } from \"../../../types/session/settings/data/KanjiSettings\";\nimport DataSettingsMenu, { DataSettingsMenuProps } from \"./DataSettingsMenu\";\nimport QuantityField from \"../../ui/fields/QuantityField\";\nimport styles from \"../../../styles/sass/components/layout/KanjiSettingsMenu.module.scss\";\n\ninterface KanjiSettingsMenuState {\n    grades: KyoikuGrade[];\n    quantity?: number;\n    joyo: boolean;\n}\n\nclass KanjiSettingsForm extends Component<DataSettingsMenuProps<KanjiSettings>, KanjiSettingsMenuState> {\n    constructor(props: DataSettingsMenuProps<KanjiSettings> | Readonly<DataSettingsMenuProps<KanjiSettings>>) {\n        super(props);\n        this.state = {\n            grades: [],\n            quantity: undefined,\n            joyo: false\n        }\n    }\n\n    render() {\n        const { title, icon, onQuit } = this.props;\n        const { grades, quantity } = this.state;\n\n        return (\n            <DataSettingsMenu title={title} icon={icon} onQuit={onQuit} onReset={this.onReset} onConfirm={this.confirm} isValid={this.validate}>\n                <Container fluid className={styles.wrapper}>\n                    <Row>\n                        <Col>\n                            <p className={styles.desc}>\n                                {this.getDescription()}\n                            </p>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={6}>\n                            <KyoikuGradeButton\n                                grade={KyoikuGrade.ONE}\n                                icon={faPaintBrush}\n                                iconColour={\"#fdb40e\"}\n                                isSelected={grades.includes(KyoikuGrade.ONE)}\n                                onClick={this.onSelectGrade}\n                            />\n                        </Col>\n                        <Col>\n                            <KyoikuGradeButton\n                                grade={KyoikuGrade.TWO}\n                                icon={faSchool}\n                                iconColour={\"#fdb40e\"}\n                                isSelected={grades.includes(KyoikuGrade.TWO)}\n                                onClick={this.onSelectGrade}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6}>\n                            <KyoikuGradeButton\n                                grade={KyoikuGrade.THREE}\n                                icon={faLeaf}\n                                iconColour={\"#fdb40e\"}\n                                isSelected={grades.includes(KyoikuGrade.THREE)}\n                                onClick={this.onSelectGrade}\n                            />\n                        </Col>\n                        <Col>\n                            <KyoikuGradeButton\n                                grade={KyoikuGrade.FOUR}\n                                icon={faSun}\n                                iconColour={\"#fdb40e\"}\n                                isSelected={grades.includes(KyoikuGrade.FOUR)}\n                                onClick={this.onSelectGrade}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6}>\n                            <KyoikuGradeButton\n                                grade={KyoikuGrade.FIVE}\n                                icon={faMountain}\n                                iconColour={\"#fdb40e\"}\n                                isSelected={grades.includes(KyoikuGrade.FIVE)}\n                                onClick={this.onSelectGrade}\n                            />\n                        </Col>\n                        <Col>\n                            <KyoikuGradeButton\n                                grade={KyoikuGrade.SIX}\n                                icon={faGraduationCap}\n                                iconColour={\"#fdb40e\"}\n                                isSelected={grades.includes(KyoikuGrade.SIX)}\n                                onClick={this.onSelectGrade}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <QuantityField\n                                value={quantity}\n                                className={styles.quantity}\n                                onChange={(value: number) => this.setState(({ quantity: value }))}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </DataSettingsMenu>\n        );\n    }\n\n    private onSelectGrade = (grade: KyoikuGrade) => {\n        const { grades } = this.state;\n        if (grades.includes(grade)) {\n            this.setState({ grades: Arrays.remove(grades, grade) });\n        } else {\n            this.setState({ grades: grades.concat(grade) });\n        }\n    }\n\n    private confirm = () => {\n        const { grades, quantity, joyo } = this.state;\n        const dataSettings = new KanjiSettingsBuilder().withGrades(grades).withJoyoKanji(joyo).withQuantity(quantity).build();\n        this.props.onConfirm(dataSettings);\n    }\n\n    private getDescription = () => {\n        const { grades, quantity } = this.state;\n\n        const template = new TemplateString(\"Selected {0} random kanji from {1}.\");\n\n        if (grades.length > 0) {\n            if (quantity) {\n                if (grades.length > 1) {\n                    if (grades.length === 6) {\n                        return template.format(quantity, \"all grades\");\n                    }\n                    const gradeNumbers = Arrays.copy(grades).splice(0, grades.length - 1).map(it => it.value).join(\", \");\n                    return template.format(quantity, \"grades \" + gradeNumbers + \" & \" + grades[grades.length - 1].value);\n                }\n                return template.format(quantity, \"grade \" + grades[0].value);\n            }\n            return \"Selected \" + Arrays.sum(grades.map(it => it.quantity)) + \" Kanji\";\n        } else if (quantity && quantity > 0) {\n            return template.format(quantity, \"all grades\");\n        } else {\n            return \"Choose one or many grades below to begin.\";\n        }\n    }\n\n    private onReset = () => {\n        this.setState({\n            grades: [],\n            quantity: undefined,\n            joyo: false\n        });\n        this.props.onReset();\n    }\n\n    private validate = () => {\n        const { grades, quantity } = this.state;\n        return grades.length > 0 || !!quantity\n    }\n}\n\nexport default KanjiSettingsForm;\n","import { Component } from \"react\";\nimport DataSettingsMenu, { DataSettingsMenuProps } from \"./DataSettingsMenu\";\nimport SentenceStructureSettings, { SentenceStructureSettingsBuilder } from \"../../../types/session/settings/data/SentenceStructureSettings\";\nimport { Col, Row } from \"react-bootstrap\";\nimport ToggleSwitch from \"../../ui/ToggleSwitch\";\nimport styles from \"../../../styles/sass/components/settings/data/SentenceStructureForm.module.scss\";\nimport QuantityField from \"../../ui/fields/QuantityField\";\n\ninterface SentenceStructureFormState {\n    adverbs: boolean;\n    particles: boolean;\n    expressions: boolean;\n    verbs: boolean;\n    nouns: boolean;\n    adjectives: boolean;\n    quantity: number;\n}\n\nclass SentenceStructureForm extends Component<DataSettingsMenuProps<SentenceStructureSettings>, SentenceStructureFormState> {\n\n    constructor(props: Readonly<DataSettingsMenuProps<SentenceStructureSettings>> | DataSettingsMenuProps<SentenceStructureSettings>) {\n        super(props);\n        this.state = {\n            adverbs: true,\n            particles: true,\n            expressions: true,\n            verbs: true,\n            nouns: true,\n            adjectives: true,\n            quantity: 25\n        }\n    }\n\n    render() {\n        const { title, icon, onQuit } = this.props;\n        const { adverbs, particles, expressions, verbs, nouns, adjectives, quantity } = this.state;\n\n        return (\n            <DataSettingsMenu title={title} icon={icon} onQuit={onQuit} onReset={this.reset} onConfirm={this.confirm} isValid={this.validate}>\n                <Row className={styles.quantityWrapper}>\n                    <Col>\n                        <QuantityField\n                            value={quantity}\n                            className={styles.quantity}\n                            onChange={(quantity: number) => this.setState({ quantity: quantity })}\n                        />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <ToggleSwitch\n                            label=\"Adverbs\"\n                            enabled={adverbs}\n                            className={styles.switch}\n                            data-testid=\"adverb-switch\"\n                            onChange={() => this.setState({ adverbs: !adverbs })}\n                        />\n\n                        <p className={adverbs ? styles.description : styles.disabled}>\n                            Adverbs are words or phrases that modify or qualify an adjective, verb, or other adverb or\n                            a word group, expressing a relation of place, time, circumstance, manner, cause, degree, etc.\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Particles\"\n                            enabled={particles}\n                            className={styles.switch}\n                            data-testid=\"particles-switch\"\n                            onChange={() => this.setState({ particles: !particles })}\n                        />\n\n                        <p className={particles ? styles.description : styles.disabled}>\n                            Japanese particles are small words that indicate relations of words within a sentence.\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Expressions\"\n                            enabled={expressions}\n                            className={styles.switch}\n                            data-testid=\"expressions-switch\"\n                            onChange={() => this.setState({ expressions: !expressions })}\n                        />\n\n                        <p className={expressions ? styles.description : styles.disabled}>\n                            Common expressions used in every-day conversation. Most of these are taken from the\n                            \"Expressions & Adverbs\" section of the vocabulary page in the Genki textbook.\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Verbs\"\n                            enabled={verbs}\n                            className={styles.switch}\n                            data-testid=\"verbs-switch\"\n                            onChange={() => this.setState({ verbs: !verbs })}\n                        />\n\n                        <p className={verbs ? styles.description : styles.disabled}>\n                            Verbs are words used to describe an action, state, or occurrence, and forming the main\n                            part of the predicate of a sentence, such as hear, become, happen.\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Nouns\"\n                            enabled={nouns}\n                            className={styles.switch}\n                            data-testid=\"nouns-switch\"\n                            onChange={() => this.setState({ nouns: !nouns })}\n                        />\n\n                        <p className={nouns ? styles.description : styles.disabled}>\n                            Nouns are words (other than a pronouns) used to identify any of a class of people, places,\n                            or things (common noun), or to name a particular one of these (proper noun).\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Adjectives\"\n                            enabled={adjectives}\n                            className={styles.switch}\n                            data-testid=\"adjectives-switch\"\n                            onChange={() => this.setState({ adjectives: !adjectives })}\n                        />\n\n                        <p className={adjectives ? styles.description : styles.disabled}>\n                            Adjectives are words naming an attribute of a noun, such as sweet, red, or technical.\n                        </p>\n                    </Col>\n                </Row>\n            </DataSettingsMenu>\n        );\n    }\n\n    private reset = () => {\n        this.setState({\n            adverbs: true,\n            particles: true,\n            expressions: true,\n            verbs: true,\n            nouns: true,\n            adjectives: true,\n            quantity: 25\n        });\n        this.props.onReset();\n    }\n\n    private confirm = () => {\n        const { adverbs, particles, expressions, verbs, nouns, adjectives, quantity } = this.state;\n\n        const settings = new SentenceStructureSettingsBuilder()\n            .withAdverbs(adverbs)\n            .withParticles(particles)\n            .withExpressions(expressions)\n            .withVerbs(verbs)\n            .withNouns(nouns)\n            .withAdjectives(adjectives)\n            .withQuantity(quantity)\n            .build();\n\n        this.props.onConfirm(settings);\n    }\n\n    private validate = () => {\n        const { adverbs, particles, expressions, verbs, nouns, adjectives, quantity } = this.state;\n        const isQuantityValid = quantity > 0;\n        const areTopicsValid = adverbs || particles || expressions || verbs || nouns || adjectives;\n        return isQuantityValid && areTopicsValid;\n    }\n}\n\nexport default SentenceStructureForm;\n","import PlayMode from \"../../session/PlayMode\";\nimport { PlayMenuModes } from \"../../MenuModes\";\nimport { faChild, faCloudSunRain, faCompass, faDog, faFillDrip, faHandPaper } from \"@fortawesome/free-solid-svg-icons\";\nimport { BasicsSettingsBuilder } from \"../../session/settings/data/BasicsSettings\";\nimport { GameSettingsBuilder } from \"../../session/settings/game/GameSettings\";\nimport { QuestionSettingsBuilder } from \"../../session/settings/game/QuestionSettings\";\nimport { QuestionType } from \"../QuestionType\";\nimport LearnableField from \"../../learn/LearnableField\";\nimport { TimeSettingsBuilder } from \"../../session/settings/game/TimeSettings\";\nimport { HintSettingsBuilder } from \"../../session/settings/game/HintSettings\";\nimport { LifeSettingsBuilder } from \"../../session/settings/game/LifeSettings\";\n\nexport default class PlayBasicsModes implements PlayMenuModes {\n    getModes(): PlayMode[] {\n        const gameSettings = new GameSettingsBuilder()\n            .withQuestionSettings(new QuestionSettingsBuilder()\n                .withCardQuantity(4)\n                .withScoreTracking()\n                .withType(QuestionType.CHOICE)\n                .withFields(LearnableField.MEANING, LearnableField.JAPANESE)\n                .build()\n            )\n            .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n            .withHintSettings(new HintSettingsBuilder().isEnabled(false).build())\n            .withLifeSettings(new LifeSettingsBuilder().withQuantity(5).build())\n            .build();\n\n        return [\n            new PlayMode(\"Colours\", \"#db6b25\", faFillDrip,\n                new BasicsSettingsBuilder().withColours().withQuantity(25).build(),\n                gameSettings\n            ),\n            new PlayMode(\"Animals\", \"#439bdc\", faDog,\n                new BasicsSettingsBuilder().withAnimals().withQuantity(25).build(),\n                gameSettings\n            ),\n            new PlayMode(\"Directions\", \"#d01b4c\", faCompass,\n                new BasicsSettingsBuilder().withDirections().withQuantity(25).build(),\n                gameSettings\n            ),\n            new PlayMode(\"Weather\", \"#e3c93a\", faCloudSunRain,\n                new BasicsSettingsBuilder().withWeather().withQuantity(25).build(),\n                gameSettings\n            ),\n            new PlayMode(\"Family\", \"#23b820\", faChild,\n                new BasicsSettingsBuilder().withFamily().withQuantity(25).build(),\n                gameSettings\n            ),\n            new PlayMode(\"Body\", \"#5641d0\", faHandPaper,\n                new BasicsSettingsBuilder().withBody().withQuantity(25).build(),\n                gameSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"BASICS\";\n    }\n}\n","import { PlayMenuModes } from \"../../MenuModes\";\nimport PlayMode from \"../../session/PlayMode\";\nimport { GameSettingsBuilder } from \"../../session/settings/game/GameSettings\";\nimport { QuestionSettingsBuilder } from \"../../session/settings/game/QuestionSettings\";\nimport { QuestionType } from \"../QuestionType\";\nimport LearnableField from \"../../learn/LearnableField\";\nimport { TimeSettingsBuilder } from \"../../session/settings/game/TimeSettings\";\nimport { HintSettingsBuilder } from \"../../session/settings/game/HintSettings\";\nimport { LifeSettingsBuilder } from \"../../session/settings/game/LifeSettings\";\nimport { faAlignLeft, faCalendarAlt, faCalendarDay, faClock, faCloudSunRain, faGlobeAmericas } from \"@fortawesome/free-solid-svg-icons\";\nimport { CalendarSettingsBuilder } from \"../../session/settings/data/CalendarSettings\";\n\nexport default class PlayCalendarModes implements PlayMenuModes {\n    getModes(): PlayMode[] {\n        const gameSettings = new GameSettingsBuilder()\n            .withQuestionSettings(new QuestionSettingsBuilder()\n                .withCardQuantity(4)\n                .withScoreTracking()\n                .withType(QuestionType.CHOICE)\n                .withFields(LearnableField.MEANING, LearnableField.JAPANESE)\n                .build()\n            )\n            .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n            .withHintSettings(new HintSettingsBuilder().isEnabled(false).build())\n            .withLifeSettings(new LifeSettingsBuilder().withQuantity(5).build())\n            .build();\n\n        return [\n            new PlayMode(\"Days of the Week\", \"#3fb4de\", faCalendarDay,\n                new CalendarSettingsBuilder().withDays().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Months of the Year\", \"#ff7730\", faCalendarAlt,\n                new CalendarSettingsBuilder().withMonths().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Temporal Nouns\", \"#e32f2f\", faClock,\n                new CalendarSettingsBuilder().withTemporalNouns().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Seasonal\", \"#e7cb38\", faCloudSunRain,\n                new CalendarSettingsBuilder().withSeasons().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Common Phrases\", \"#ff6038\", faAlignLeft,\n                new CalendarSettingsBuilder().withPhrases().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Everything\", \"#39c461\", faGlobeAmericas,\n                new CalendarSettingsBuilder().withDays().withMonths().withTemporalNouns().withSeasons().withPhrases().build(),\n                gameSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"CALENDAR\";\n    }\n}\n","import { PlayMenuModes } from \"../../MenuModes\";\nimport PlayMode from \"../../session/PlayMode\";\nimport { faBaby, faCalculator, faRuler, faSort, faSortNumericDown, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { GameSettingsBuilder } from \"../../session/settings/game/GameSettings\";\nimport { QuestionSettingsBuilder } from \"../../session/settings/game/QuestionSettings\";\nimport { QuestionType } from \"../QuestionType\";\nimport LearnableField from \"../../learn/LearnableField\";\nimport { LifeSettingsBuilder } from \"../../session/settings/game/LifeSettings\";\nimport { NumbersSettingsBuilder } from \"../../session/settings/data/NumbersSettings\";\nimport { TimeSettingsBuilder } from \"../../session/settings/game/TimeSettings\";\nimport { HintSettingsBuilder } from \"../../session/settings/game/HintSettings\";\n\nexport default class PlayNumbersModes implements PlayMenuModes {\n    getModes(): PlayMode[] {\n        const gameSettings = new GameSettingsBuilder()\n            .withQuestionSettings(new QuestionSettingsBuilder()\n                .withCardQuantity(4)\n                .withScoreTracking()\n                .withType(QuestionType.CHOICE)\n                .withFields(LearnableField.MEANING, LearnableField.JAPANESE)\n                .build()\n            )\n            .withTimeSettings(new TimeSettingsBuilder().isTimed().build())\n            .withHintSettings(new HintSettingsBuilder().isEnabled(false).build())\n            .withLifeSettings(new LifeSettingsBuilder().withQuantity(5).build())\n            .build();\n\n        return [\n            new PlayMode(\"Numbers\", \"#fdb40e\", faSortNumericDown,\n                new NumbersSettingsBuilder().withNumbers().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Counters\", \"#ff7730\", faCalculator,\n                new NumbersSettingsBuilder().withCounters().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Age\", \"#1785e2\", faBaby,\n                new NumbersSettingsBuilder().withAge().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Exceptions\", \"#a01219\", faTimes,\n                new NumbersSettingsBuilder().withExceptions().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Units\", \"#4ed440\", faRuler,\n                new NumbersSettingsBuilder().withUnits().build(),\n                gameSettings\n            ),\n            new PlayMode(\"Sequence\", \"#fc3131\", faSort,\n                new NumbersSettingsBuilder().withSequence().build(),\n                gameSettings\n            )\n        ];\n    }\n\n    getTopic(): string {\n        return \"NUMBERS\";\n    }\n}\n","import { faAppleAlt, faCalendarAlt, faFont, faPaintBrush, faSpellCheck, faYenSign, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport LearnNumbersModes from \"./learn/mode/LearnNumbersModes\";\nimport LearnKanjiModes from \"./learn/mode/LearnKanjiModes\";\nimport LearnBasicsModes from \"./learn/mode/LearnBasicsModes\";\nimport LearnCalendarModes from \"./learn/mode/LearnCalendarModes\";\nimport { CardProps } from \"../components/learn/FlashCard\";\nimport KanaFlashCardFront from \"../components/learn/kana/KanaFlashCardFront\";\nimport KanaFlashCardBack from \"../components/learn/kana/KanaFlashCardBack\";\nimport KanjiFlashCardFront from \"../components/learn/kanji/KanjiFlashCardFront\";\nimport KanjiFlashCardBack from \"../components/learn/kanji/KanjiFlashCardBack\";\nimport BasicsFlashCardFront from \"../components/learn/basics/BasicsFlashCardFront\";\nimport BasicsFlashCardBack from \"../components/learn/basics/BasicsFlashCardBack\";\nimport LearnSentenceStructureModes from \"./learn/mode/LearnSentenceStructureModes\";\nimport NumbersFlashCardFront from \"../components/learn/numbers/NumbersFlashCardFront\";\nimport NumbersFlashCardBack from \"../components/learn/numbers/NumbersFlashCardBack\";\nimport SentenceStructureFlashCardFront from \"../components/learn/sentence/SentenceStructureFlashCardFront\";\nimport SentenceStructureFlashCardBack from \"../components/learn/sentence/SentenceStructureFlashCardBack\";\nimport PlayKanjiModes from \"./game/mode/PlayKanjiModes\";\nimport PlayKanaModes from \"./game/mode/PlayKanaModes\";\nimport { LearnMenuModes, PlayMenuModes } from \"./MenuModes\";\nimport LearnKanaModes from \"./learn/mode/LearnKanaModes\";\nimport PlaySentenceStructureModes from \"./game/mode/PlaySentenceStructureModes\";\nimport React from \"react\";\nimport KanaSettingsForm from \"../components/settings/data/KanaSettingsForm\";\nimport KanjiSettingsForm from \"../components/settings/data/KanjiSettingsForm\";\nimport SentenceStructureForm from \"../components/settings/data/SentenceStructureForm\";\nimport PlayBasicsModes from \"./game/mode/PlayBasicsModes\";\nimport PlayCalendarModes from \"./game/mode/PlayCalendarModes\";\nimport PlayNumbersModes from \"./game/mode/PlayNumbersModes\";\n\nexport default class Topic {\n    private readonly _name: string;\n    private readonly _icon: IconDefinition;\n    private readonly _modes: LearnMenuModes;\n    private readonly _playModes: PlayMenuModes;\n    private readonly _cards: CardProps;\n    private readonly _menu: React.FunctionComponent | React.ComponentClass<any> | undefined;\n\n    public static KANA = new Topic(\n        \"Hiragana & Katakana\", faFont, new LearnKanaModes(), new PlayKanaModes(),\n        { front: KanaFlashCardFront, back: KanaFlashCardBack },\n        KanaSettingsForm\n    );\n\n    public static NUMBERS = new Topic(\n        \"Numbers & Counting\", faYenSign, new LearnNumbersModes(), new PlayNumbersModes(),\n        { front: NumbersFlashCardFront, back: NumbersFlashCardBack }\n    );\n\n    public static KANJI = new Topic(\n        \"Jōyō Kanji\", faPaintBrush, new LearnKanjiModes(), new PlayKanjiModes(),\n        { front: KanjiFlashCardFront, back: KanjiFlashCardBack },\n        KanjiSettingsForm\n    );\n\n    public static BASICS = new Topic(\n        \"Basics\", faAppleAlt, new LearnBasicsModes(), new PlayBasicsModes(),\n        { front: BasicsFlashCardFront, back: BasicsFlashCardBack }\n    );\n\n    public static CALENDAR = new Topic(\n        \"Days & Months\", faCalendarAlt, new LearnCalendarModes(), new PlayCalendarModes(),\n        { front: SentenceStructureFlashCardFront, back: SentenceStructureFlashCardBack }\n    );\n\n    public static GRAMMAR = new Topic(\n        \"Sentence Structure\", faSpellCheck, new LearnSentenceStructureModes(), new PlaySentenceStructureModes(),\n        { front: SentenceStructureFlashCardFront, back: SentenceStructureFlashCardBack },\n        SentenceStructureForm\n    );\n\n    public static ALL: Topic[] = [Topic.KANA, Topic.NUMBERS, Topic.KANJI, Topic.BASICS, Topic.CALENDAR, Topic.GRAMMAR];\n\n    private constructor(name: string, icon: IconDefinition, modes: LearnMenuModes, playModes: PlayMenuModes,\n                        cards: CardProps, menu: React.FunctionComponent | React.ComponentClass<any> | undefined = undefined) {\n        this._name = name;\n        this._icon = icon;\n        this._modes = modes;\n        this._playModes = playModes;\n        this._cards = cards;\n        this._menu = menu;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    get icon(): IconDefinition {\n        return this._icon;\n    }\n\n    get modes(): LearnMenuModes {\n        return this._modes;\n    }\n\n    get cards(): CardProps {\n        return this._cards;\n    }\n\n    get playModes(): PlayMenuModes {\n        return this._playModes;\n    }\n\n    get menu(): React.FunctionComponent | React.ComponentClass<any> | undefined {\n        return this._menu;\n    }\n}\n","enum KanaType {\n    HIRAGANA = \"Hiragana\", KATAKANA = \"Katakana\"\n}\n\nexport default KanaType;","import React, { Component, ReactElement } from \"react\";\nimport Topic from \"../../types/Topic\";\nimport { ListGroupItem } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/layout/TopicListOption.module.scss\";\n\ninterface TopicListOptionProps {\n    type?: Topic;\n    text?: string;\n    selected?: Topic;\n    onClick?: (type?: Topic) => void;\n    isHeading?: boolean;\n}\n\nclass TopicListOption extends Component<TopicListOptionProps> {\n    render() {\n        const { type, text, isHeading, selected, children } = this.props;\n        return(\n            <ListGroupItem\n                action={!isHeading}\n                onClick={() => this.props?.onClick?.(type)}\n                eventKey={type?.name}\n                active={selected === type && !isHeading}\n                className={!isHeading ? styles.item : styles.heading}\n            >\n                {children && React.cloneElement(children as ReactElement, {\n                    className: [styles.icon, (children as ReactElement).props.className].join(\" \")\n                })}\n                <span className={styles.text}>{text ? text : type?.name}</span>\n            </ListGroupItem>\n        );\n    }\n}\n\nexport default TopicListOption;","import React, { Component, ReactElement } from \"react\";\nimport Topic from \"../../types/Topic\";\nimport { Dropdown } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/layout/GameTypeMenuDropdownOption.module.scss\";\n\ninterface TopicDropdownOptionProps {\n    type: Topic;\n    selected: Topic;\n    onClick: (type: Topic) => void;\n}\n\nclass TopicDropdownOption extends Component<TopicDropdownOptionProps> {\n    render() {\n        const { type, selected, onClick, children } = this.props;\n\n        return (\n            <Dropdown.Item onClick={() => onClick(type)} eventKey={type.name} active={type === selected}>\n                {children && React.cloneElement(children as ReactElement, { className: styles.icon })}\n                <span className={styles.text}>{type.name}</span>\n            </Dropdown.Item>\n        );\n    }\n}\n\nexport default TopicDropdownOption;","import React, { Component } from \"react\";\nimport { Dropdown, ListGroup } from \"react-bootstrap\";\nimport Topic from \"../../types/Topic\";\nimport TopicListOption from \"./TopicListOption\";\nimport { faGamepad, faGraduationCap } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TopicDropdownOption from \"./TopicDropdownOption\";\nimport { AppMode } from \"../../types/AppMode\";\nimport styles from \"../../styles/sass/components/layout/TopicSelectionMenu.module.scss\";\n\ninterface TopicSelectionMenuProps {\n    appMode: AppMode;\n    onSelect: (type: Topic) => void;\n    className?: string;\n}\n\ninterface TopicSelectionMenuState {\n    selected: Topic;\n}\n\nclass TopicSelectionMenu extends Component<TopicSelectionMenuProps, TopicSelectionMenuState> {\n\n    constructor(props: Readonly<TopicSelectionMenuProps> | TopicSelectionMenuProps) {\n        super(props);\n        this.state = {\n            selected: Topic.KANA\n        }\n    }\n\n    render() {\n        const { selected } = this.state;\n        const { appMode, className } = this.props;\n\n        return (\n            <div className={className}>\n                <Dropdown className={\"d-lg-none \" + styles.dropdown} data-testid=\"dropdown\">\n                    <Dropdown.Toggle variant=\"primary\" className={styles.dropdownToggle} id=\"select-game-type\">\n                        <FontAwesomeIcon fixedWidth icon={selected.icon} /> {selected.name}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu className={styles.dropdownMenu}>\n                        {Topic.ALL.map((topic: Topic) =>\n                            <TopicDropdownOption type={topic} onClick={this.handleChange} selected={selected} key={topic.name}>\n                                <FontAwesomeIcon fixedWidth icon={topic.icon} />\n                            </TopicDropdownOption>\n                        )}\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <ListGroup className={\"d-lg-block d-none \" + styles.menu} data-testid=\"list-group-header\">\n                    <TopicListOption text={this.getMenuHeading()} onClick={this.handleChange} isHeading>\n                        <FontAwesomeIcon\n                            fixedWidth\n                            icon={appMode === AppMode.PLAY ? faGamepad : faGraduationCap}\n                            className={appMode === AppMode.LEARN ? styles.learn : styles.play}\n                        />\n                    </TopicListOption>\n                </ListGroup>\n\n                <ListGroup className={\"d-lg-block d-none \" + styles.menu} data-testid=\"list-group\">\n                    {Topic.ALL.map((topic: Topic) =>\n                        <TopicListOption type={topic} onClick={this.handleChange} selected={selected} key={topic.name}>\n                            <FontAwesomeIcon fixedWidth icon={topic.icon} className={styles.icon} />\n                        </TopicListOption>\n                    )}\n                </ListGroup>\n            </div>\n        );\n    }\n\n    private getMenuHeading = () => {\n        const { appMode } = this.props;\n        switch (appMode) {\n            case AppMode.PLAY: return \"Select Game Mode\";\n            case AppMode.LEARN: return \"Select Topic\"\n        }\n    }\n\n    private handleChange = (type?: Topic) => {\n        if (type) {\n            this.setState({ selected: type });\n            this.props.onSelect(type);\n        }\n    }\n}\n\nexport default TopicSelectionMenu;\n","import { Component } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/ui/MenuDescription.module.scss\";\n\nexport interface MenuDescriptionProps {\n    text: string;\n}\n\nclass MenuDescription extends Component<MenuDescriptionProps> {\n    render() {\n        return (\n            <Alert className={styles.desc} variant=\"success\">\n                {this.props.text}\n            </Alert>\n        );\n    }\n}\n\nexport default MenuDescription;","import { Component } from \"react\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../styles/sass/components/learn/LearnTopicButton.module.scss\";\nimport SessionMode from \"../../types/session/SessionMode\";\n\nexport interface LearnTopicButtonProps {\n    icon: IconDefinition | string;\n    iconColour?: string;\n    type: SessionMode;\n    selected: SessionMode;\n    onClick: (mode: SessionMode) => void;\n}\n\nclass LearnTopicButton extends Component<LearnTopicButtonProps> {\n\n    render() {\n        const { icon, type, selected, iconColour } = this.props;\n        const isSelected = selected.displayName === type.displayName;\n        const colour = isSelected ? iconColour : \"#000\"\n\n        return (\n            <Button\n                onClick={this.handleOnClick}\n                className={(isSelected ? styles.selected : styles.notSelected) + \" \" + styles.button}\n            >\n                {this.isFontAwesomeIcon() &&\n                    <FontAwesomeIcon\n                        icon={icon as IconDefinition}\n                        fixedWidth\n                        className={styles.icon}\n                        style={{ color: colour }}\n                    />\n                }\n\n                {!this.isFontAwesomeIcon() &&\n                    <span className={styles.textIcon} style={{ color: colour }}>\n                        {icon}\n                    </span>\n                }\n\n                <p className={styles.name}>{type.displayName}</p>\n            </Button>\n        );\n    }\n\n    private handleOnClick = () => this.props.onClick(this.props.type);\n\n    private isFontAwesomeIcon() {\n        const icon: IconDefinition | string = this.props.icon;\n        return !(typeof icon === 'string');\n    }\n}\n\nexport default LearnTopicButton;","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../../styles/sass/components/ui/buttons/StartButton.module.scss\";\n\nexport interface StartButtonProps {\n    onClick: () => void;\n}\n\nclass StartButton extends Component<StartButtonProps> {\n    render() {\n        return (\n            <Button variant=\"success\" className={styles.button} block onClick={this.props.onClick}>\n                <FontAwesomeIcon size=\"xs\" icon={faPlay}/> Start\n            </Button>\n        );\n    }\n}\n\nexport default StartButton;","import { Form, InputGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { Component } from \"react\";\nimport styles from \"../../../styles/sass/components/ui/fields/SearchField.module.scss\";\n\ninterface SearchFieldProps {\n    value?: string;\n    append?: string;\n    placeholder?: string;\n    className?: string;\n    onChange: (value: string) => void;\n}\n\nclass SearchField extends Component<SearchFieldProps> {\n    render() {\n        const { value, append, placeholder, className } = this.props;\n        return (\n            <InputGroup className={[styles.inputGroup, className].join(\" \")}>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FontAwesomeIcon icon={faSearch}/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n\n                <Form.Control\n                    type=\"text\"\n                    value={value}\n                    className={styles.input}\n                    placeholder={placeholder ?? \"Enter search term\"}\n                    onChange={(e) => this.props.onChange(e.target.value)}\n                />\n\n                {append && (\n                    <InputGroup.Append>\n                        <InputGroup.Text>\n                            {append}\n                        </InputGroup.Text>\n                    </InputGroup.Append>\n                )}\n            </InputGroup>\n        );\n    }\n}\n\nexport default SearchField;","import { Component } from \"react\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Copyable from \"../ui/Copyable\";\nimport styles from \"../../styles/sass/components/learn/LearnableInfo.module.scss\";\n\nexport interface LearnableInfoProps {\n    value: Learnable;\n}\n\nclass LearnableInfo extends Component<LearnableInfoProps> {\n    render() {\n        const { value } = this.props;\n\n        return (\n            <Container fluid className={styles.wrapper}>\n                <Row>\n                    <Col xs={5}>\n                        <Copyable>\n                            <span>{value.getMeanings().join(\" or \")}</span>\n                        </Copyable>\n                    </Col>\n\n                    <Col>\n                        {\n                            value.getKanjiVariation() ? (\n                                <Copyable>\n                                    <span>{value.getKanjiVariation()}</span>\n                                </Copyable>\n                            ) : <span>-</span>\n                        }\n                    </Col>\n\n                    <Col>\n                        <Copyable>\n                            <span>{value.getKana().join(\" or \")}</span>\n                        </Copyable>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default LearnableInfo;","import { Component } from \"react\";\nimport styles from \"../../styles/sass/components/learn/SearchTag.module.scss\";\n\nexport interface SearchTagProps {\n    value: string;\n    onSelect: (value: string) => void;\n}\n\ninterface SearchTagState {\n    active: boolean;\n}\n\nclass SearchTag extends Component<SearchTagProps, SearchTagState> {\n\n    constructor(props: Readonly<SearchTagProps> | SearchTagProps) {\n        super(props);\n        this.state = {\n            active: false\n        }\n    }\n\n    render() {\n        const { value } = this.props;\n        const { active } = this.state;\n\n        return (\n            <div className={active ? styles.active : styles.wrapper} onClick={this.handleSelect}>\n                <span>{value}</span>\n            </div>\n        );\n    }\n\n    private handleSelect = () => {\n        const { active } = this.state;\n        const { value, onSelect } = this.props;\n        this.setState({ active: !active });\n        onSelect(value);\n    }\n}\n\nexport default SearchTag;","import { Component } from \"react\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport SearchField from \"../ui/fields/SearchField\";\nimport { Container, Row } from \"react-bootstrap\";\nimport LearnableInfo from \"./LearnableInfo\";\nimport SearchTag from \"./SearchTag\";\nimport Arrays from \"../../utility/Arrays\";\nimport styles from \"../../styles/sass/components/learn/Search.module.scss\";\n\nexport interface SearchProps {\n    data: Learnable[];\n    tags: string[];\n}\n\ninterface SearchState {\n    search: string;\n    selectedTags: string[];\n}\n\nclass Search extends Component<SearchProps, SearchState> {\n\n    constructor(props: Readonly<SearchProps> | SearchProps) {\n        super(props);\n        this.state = {\n            search: \"\",\n            selectedTags: []\n        }\n    }\n\n    render() {\n\n        const { search } = this.state;\n        const results = this.getResults();\n\n        return (\n            <Container fluid className={styles.wrapper}>\n                <Row>\n                    <SearchField\n                        value={search}\n                        className={styles.search}\n                        placeholder=\"Search via english, kana, kanji...\"\n                        append={results.length + \" Results\"}\n                        onChange={(value: string) => this.setState({ search: value })}\n                    />\n                </Row>\n\n                <Row>\n                    {this.props.tags.map((tag: string) => {\n                        return <SearchTag value={tag} onSelect={this.onSelectTag} key={tag} />\n                    })}\n                </Row>\n\n                <Row className={styles.results}>\n                    {results.map((result: Learnable) => {\n                        return <LearnableInfo value={result} key={result.getUniqueID()} />;\n                    })}\n                </Row>\n            </Container>\n        );\n    }\n\n    private getResults = (): Learnable[] => {\n        const { search, selectedTags } = this.state;\n        let { data } = this.props;\n\n        if (selectedTags.length > 0) {\n            data = data.filter((result: Learnable) => {\n                return result.getTags().some((tag: string) => selectedTags.includes(tag));\n            });\n        }\n\n        return data.filter((result: Learnable) => {\n            const matchesMeaning = result.getMeanings().some((meaning: string) => meaning.includes(search));\n            const matchesKana = result.getKana().some((kana: string) => kana.includes(search));\n            const matchesKanji = result.getKanjiVariation()?.includes(search);\n            return matchesMeaning || matchesKana || matchesKanji;\n        });\n    }\n\n    private onSelectTag = (tag: string) => {\n        const { selectedTags } = this.state;\n        if (selectedTags.includes(tag)) {\n            this.setState({ selectedTags: Arrays.remove(selectedTags, tag) });\n        } else {\n            this.setState({ selectedTags: selectedTags.concat(tag) });\n        }\n    }\n}\n\nexport default Search;","import KanaType from \"./KanaType\";\nimport { KanaColumn } from \"./KanaColumn\";\nimport Arrays from \"../../utility/Arrays\";\nimport { Learnable } from \"../learn/Learnable\";\n\nexport class Kana extends Learnable {\n    private readonly _code: string;\n    private readonly _romaji: string[];\n    private readonly _type: KanaType;\n    private readonly _column: KanaColumn;\n    private readonly _isDiacritical: boolean;\n\n    constructor(code: string, romaji: string[], type: KanaType, column: KanaColumn, isDiacritical: boolean) {\n        super();\n        this._code = code;\n        this._romaji = romaji;\n        this._type = type;\n        this._column = column;\n        this._isDiacritical = isDiacritical;\n    }\n\n    public isDiagraph(): boolean {\n        return this._code.length === 2;\n    }\n\n    public getFullRomajiString(): string {\n        const romaji = this.getRomaji();\n\n        if (romaji.length === 1) {\n            return romaji[0];\n        } else {\n            return romaji[0] + \" (\" + romaji[1] + \")\";\n        }\n    }\n\n    public getHint(): string {\n        if (this.column === KanaColumn.OTHER) {\n            return \"This kana is exceptional. It is not a consonant nor a vowel.\"\n        }\n\n        let message: string;\n        const diacritical = \" Also, notice the diacritical mark.\";\n\n        if (this.isDiagraph()) {\n            message = \"Diagraphs usually drop the 1st kana's 2nd letter when transcribed.\"\n        } else {\n            message = \"This kana is from the '\" + this.column + \"' column in the \" + this.type + \" syllabary.\";\n        }\n\n        return message + (this.isDiacritical ? diacritical : \"\");\n    }\n\n    public getBaseScore(): number {\n        return this.isDiagraph() ? 150 : 100;\n    }\n\n    get code(): string {\n        return this._code;\n    }\n\n    get type(): KanaType {\n        return this._type;\n    }\n\n    get column(): KanaColumn {\n        return this._column;\n    }\n\n    get isDiacritical(): boolean {\n        return this._isDiacritical;\n    }\n\n    getTitle(): string {\n        return this._type;\n    }\n\n    getKana(): string[] {\n        return [this._code];\n    }\n\n    getMeanings(): string[] {\n        return this._romaji;\n    }\n\n    getUniqueID(): string {\n        return this._code;\n    }\n\n    getRomaji(): string[] {\n        return this._romaji;\n    }\n\n    public equals(other: any): boolean {\n        if (!other) return false;\n        if (!(other instanceof Kana)) return false;\n        if (!Arrays.areEqual(this.getRomaji(), other.getRomaji())) return false;\n        if (other.type !== this.type) return false;\n        if (other.column !== this.column) return false;\n        if (other.isDiacritical !== this.isDiacritical) return false;\n        return other.code === this.code;\n    }\n}","import { Kana } from \"../../types/kana/Kana\";\nimport { Filter } from \"../Filter\";\nimport Arrays from \"../../utility/Arrays\";\n\nexport default class QuantityFilter implements Filter<Kana> {\n\n    private readonly quantity: number;\n    private readonly random: boolean;\n\n    constructor(quantity: number, random: boolean = false) {\n        this.quantity = quantity;\n        this.random = random;\n    }\n\n    apply(kana: Kana[]): Kana[] {\n        if (this.random) {\n            return Arrays.getRandomElements(kana, this.quantity);\n        } else {\n            return kana.splice(0, this.quantity);\n        }\n    }\n}\n","import { Filter } from \"../Filter\";\nimport { Kana } from \"../../types/kana/Kana\";\n\nexport default class DiacriticalFilter implements Filter<Kana> {\n\n    private readonly include: boolean;\n    private readonly includeDiagraphs: boolean;\n\n    constructor(include: boolean = false, includeDiagraphs: boolean = true) {\n        this.include = include;\n        this.includeDiagraphs = includeDiagraphs;\n    }\n\n    apply(values: Kana[]): Kana[] {\n        return values.filter(kana => {\n            if (!this.includeDiagraphs && kana.isDiagraph()) {\n                return false;\n            }\n            return this.include ? kana.isDiacritical : !kana.isDiacritical;\n        });\n    }\n}","import { Filter } from \"../Filter\";\nimport { Kana } from \"../../types/kana/Kana\";\n\nexport default class RegularKanaFilter implements Filter<Kana> {\n\n    private readonly include: boolean;\n\n    constructor(include: boolean = false) {\n        this.include = include;\n    }\n\n    apply(values: Kana[]): Kana[] {\n        return values.filter((kana: Kana) => {\n            const isRegular = !kana.isDiagraph() && !kana.isDiacritical;\n            return this.include ? isRegular : !isRegular;\n        });\n    }\n}","import { Kana } from \"../types/kana/Kana\";\nimport hiragana from \"../data/Hiragana\";\nimport katakana from \"../data/Katakana\";\nimport KanaType from \"../types/kana/KanaType\";\nimport { KanaData } from \"../data/DataTypes\";\nimport DiagraphFilter from \"../filters/kana/DiagraphFilter\";\nimport FilterChain from \"../filters/FilterChain\";\nimport QuantityFilter from \"../filters/kana/QuantityFilter\";\nimport KanaTypeFilter from \"../filters/kana/KanaTypeFilter\";\nimport Repository from \"./Repository\";\nimport KanaSettings from \"../types/session/settings/data/KanaSettings\";\nimport DiacriticalFilter from \"../filters/kana/DiacriticalFilter\";\nimport RegularKanaFilter from \"../filters/kana/RegularKanaFilter\";\n\nexport class KanaRepository implements Repository<Kana> {\n\n    public read(config: KanaSettings): Promise<Kana[]> {\n        const chain = new FilterChain<Kana>();\n\n        if (!config.hiragana) {\n            chain.addFilter(new KanaTypeFilter(KanaType.HIRAGANA));\n        }\n\n        if (!config.katakana) {\n            chain.addFilter(new KanaTypeFilter(KanaType.KATAKANA));\n        }\n\n        if (!config.regular) {\n            chain.addFilter(new RegularKanaFilter())\n        }\n\n        if (config.onlyDiagraphs) {\n            chain.addFilter(new DiagraphFilter(true, true));\n        } else {\n            if (!config.diagraphs) {\n                chain.addFilter(new DiagraphFilter());\n            }\n\n            if (!config.diacriticals) {\n                chain.addFilter(new DiacriticalFilter(false, config.diagraphs));\n            }\n        }\n\n        if (config.quantity) {\n            chain.addFilter(new QuantityFilter(config.quantity, true));\n        }\n\n        return Promise.all(chain.execute(this.getAllKana()));\n    }\n\n    private getAllKana(): Kana[] {\n        const hiragana = this.readHiragana();\n        const katakana = this.readKatakana();\n        return hiragana.concat(katakana);\n    }\n\n    private readHiragana(): Kana[] {\n        return this.convert(hiragana(), KanaType.HIRAGANA);\n    }\n\n    private readKatakana(): Kana[] {\n        return this.convert(katakana(), KanaType.KATAKANA);\n    }\n\n    private convert(data: KanaData[], type: KanaType): Kana[] {\n        return data.map(data => new Kana(data.code, data.romaji, type, data.column, data.diacritical));\n    }\n}\n","import { Learnable } from \"../learn/Learnable\";\n\nexport default class Definition extends Learnable {\n\n    private readonly meanings: string[];\n    private readonly kanjiVariant: string | undefined;\n    private readonly kana: string;\n    private readonly type: string;\n\n    constructor(meanings: string[], kanjiVariant: string | undefined, kana: string, type: string) {\n        super();\n        this.meanings = meanings;\n        this.kanjiVariant = kanjiVariant;\n        this.kana = kana;\n        this.type = type;\n    }\n\n    getKana(): string[] {\n        return [this.kana];\n    }\n\n    getKanjiVariation(): string | undefined {\n        return this.kanjiVariant;\n    }\n\n    getMeanings(): string[] {\n        return this.meanings;\n    }\n\n    getTitle(): string {\n        return this.type;\n    }\n\n    getHint(): string {\n        return \"It starts with \" + this.kana[0];\n    }\n\n    getUniqueID(): string {\n        return this.meanings.join(\"-\")\n    }\n}","import { Learnable } from \"../types/learn/Learnable\";\nimport { days, months, nouns, phrases } from \"../data/Calendar\";\nimport { DayData } from \"../data/DataTypes\";\nimport Repository from \"./Repository\";\nimport Definition from \"../types/sentence/Definition\";\nimport CalendarSettings from \"../types/session/settings/data/CalendarSettings\";\n\nexport default class CalendarRepository implements Repository<Learnable> {\n    public read(config: CalendarSettings): Promise<Learnable[]> {\n        let data = [];\n\n        if (config.months) {\n            data.push(...this.convert(months(), \"Month of the Year\"));\n        }\n\n        if (config.days) {\n            data.push(...this.convert(days(), \"Day of the Week\"));\n        }\n\n        if (config.nouns) {\n            data.push(...this.convert(nouns(), \"Temporal Noun / Adverb\"));\n        }\n\n        if (config.phrases) {\n            data.push(...this.convert(phrases(), \"Common Phrase\"));\n        }\n\n        return Promise.all(data);\n    }\n\n    private convert(data: DayData[], title: string): Definition[] {\n        return data.map(it => new Definition([it.name], it.kanji, it.kana ?? \"\", title));\n    }\n}\n","import { DayData } from \"./DataTypes\";\n\nexport function days(): DayData[] {\n    return [\n        {\n            name: \"Monday\",\n            kanji: \"月曜日\",\n            romaji: \"getsuyōbi\",\n            kana: \"げつようび\",\n            meaning: \"Moon day\"\n        },\n        {\n            name: \"Tuesday\",\n            kanji: \"火曜日\",\n            romaji: \"kayōbi\",\n            kana: \" かようび\",\n            meaning: \"Fire day\"\n        },\n        {\n            name: \"Wednesday\",\n            kanji: \"水曜日\",\n            romaji: \"suiyōbi\",\n            kana: \"すいようび\",\n            meaning: \"Water day\"\n        },\n        {\n            name: \"Thursday\",\n            kanji: \"木曜日\",\n            romaji: \"mokuyōbi\",\n            kana: \"もくようび\",\n            meaning: \"Wood day\"\n        },\n        {\n            name: \"Friday\",\n            kanji: \"金曜日\",\n            romaji: \"kin'yōbi\",\n            kana: \"きんようび\",\n            meaning: \"Gold day\"\n        },\n        {\n            name: \"Saturday\",\n            kanji: \"土曜日\",\n            romaji: \"doyōbi\",\n            kana: \"どようび\",\n            meaning: \"Earth day\"\n        },\n        {\n            name: \"Sunday\",\n            kanji: \"日曜日\",\n            romaji: \"nichiyōbi\",\n            kana: \"にちようび\",\n            meaning: \"Sun day\"\n        }\n    ];\n}\n\nexport function months(): DayData[] {\n    return [\n        {\n            name: \"January\",\n            kanji: \"一月\",\n            romaji: \"ichigatsu\",\n            kana: \"いちがつ\",\n            meaning: \"One Month\"\n        },\n        {\n            name: \"February\",\n            kanji: \"二月\",\n            romaji: \"nigatsu\",\n            kana: \"にがつ\",\n            meaning: \"Two Month\"\n        },\n        {\n            name: \"March\",\n            kanji: \"三月\",\n            romaji: \"sangatsu\",\n            kana: \"さんがつ\",\n            meaning: \"Three Month\"\n        },\n        {\n            name: \"April\",\n            kanji: \"四月\",\n            romaji: \"shigatsu\",\n            kana: \"しがつ\",\n            meaning: \"Four Month\"\n        },\n        {\n            name: \"May\",\n            kanji: \"五月\",\n            romaji: \"gogatsu\",\n            kana: \"ごがつ\",\n            meaning: \"Five Month\"\n        },\n        {\n            name: \"June\",\n            kanji: \"六月\",\n            romaji: \"rokugatsu\",\n            kana: \"ろくがつ\",\n            meaning: \"Six Month\"\n        },\n        {\n            name: \"July\",\n            kanji: \"七月\",\n            romaji: \"shichigatsu\",\n            kana: \"しちがつ\",\n            meaning: \"Seven Month\"\n        },\n        {\n            name: \"August\",\n            kanji: \"八月\",\n            romaji: \"hachigatsu\",\n            kana: \"はちがつ\",\n            meaning: \"Eight Month\"\n        },\n        {\n            name: \"September\",\n            kanji: \"九月\",\n            romaji: \"kugatsu\",\n            kana: \"くがつ\",\n            meaning: \"Nine Month\"\n        },\n        {\n            name: \"October\",\n            kanji: \"十月\",\n            romaji: \"jūgatsu\",\n            kana: \"じゅうがつ\",\n            meaning: \"Ten Month\"\n        },\n        {\n            name: \"November\",\n            kanji: \"十一月\",\n            romaji: \"jūichigatsu\",\n            kana: \"じゅういちがつ\",\n            meaning: \"Eleven Month\"\n        },\n        {\n            name: \"December\",\n            kanji: \"十二月\",\n            romaji: \"jūnigatsu\",\n            kana: \"じゅうにがつ\",\n            meaning: \"Twelve Month\"\n        }\n    ];\n}\n\nexport function nouns(): DayData[] {\n    return [\n        {\n            name: \"Tomorrow\",\n            kanji: \"明日\",\n            romaji: \"ashita\",\n            kana: \"あした\"\n        },\n        {\n            name: \"Yesterday\",\n            kanji: \"昨日\",\n            romaji: \"kinō\",\n            kana: \"きのう\"\n        },\n        {\n            name: \"The day after tomorrow\",\n            kanji: \"明後日\",\n            romaji: \"asatte\",\n            kana: \"あさって\"\n        },\n        {\n            name: \"The day before yesterday\",\n            kanji: \"一昨日\",\n            romaji: \"ototoi\",\n            kana: \"おととい\"\n        },\n    ];\n}\n\nexport function phrases(): DayData[] {\n    return [\n        {\n            name: \"What day is it today?\",\n            kana: \"今日は何曜日ですか\",\n            romaji: \"Kyou wa nan youbi desu ka\",\n            meaning: \"What day is it today?\"\n        }\n    ];\n}","export enum CounterGroup {\n    ABSOLUTELY_MUST_KNOW = \"Absolutely Must Know\",\n    MUST_KNOW = \"Must Know\",\n}","import { Learnable } from \"../types/learn/Learnable\";\nimport { colours } from \"../data/Colours\";\nimport { ColourData } from \"../data/DataTypes\";\nimport Colour from \"../types/colour/Colour\";\nimport Repository from \"./Repository\";\nimport BasicsSettings from \"../types/session/settings/data/BasicsSettings\";\n\nexport default class BasicsRepository implements Repository<Learnable> {\n    public read(settings: BasicsSettings): Promise<Learnable[]> {\n        if (settings.colours) {\n            return Promise.all(colours().map((it: ColourData) => new Colour(it.name, it.kanji, it.kana, it.romaji, it.colour)));\n        }\n\n        return Promise.resolve([]);\n    }\n}\n","import { ColourData } from \"./DataTypes\";\n\nexport function colours(): ColourData[] {\n    return [\n        {\n            name: \"Colour\",\n            kanji: \"色\",\n            kana: \"いろ\",\n            romaji: \"iro\",\n            colour: \"#FFF\"\n        },\n        {\n            name: \"Orange\",\n            kana: \"オレンジ\",\n            romaji: \"orenji\",\n            colour: \"#ff7700\"\n        },\n        {\n            name: \"Yellow\",\n            kanji: \"黄色\",\n            kana: \"きいろ\",\n            romaji: \"ki-iro\",\n            colour: \"#ffd500\"\n        },\n        {\n            name: \"Bright Golden Yellow\",\n            kanji: \"山吹色\",\n            kana: \"やまぶきいろ\",\n            romaji: \"yamabuki-iro\",\n            colour: \"#ffc700\"\n        },\n        {\n            name: \"Blue\",\n            kanji: \"青\",\n            kana: \"あお\",\n            romaji: \"ao\",\n            colour: \"#0090ff\"\n        },\n        {\n            name: \"Light Blue\",\n            kanji: \"水色\",\n            kana: \"みずいろ\",\n            romaji: \"mizu-iro\",\n            colour: \"#52b2ff\"\n        },\n        {\n            name: \"Dark Blue\",\n            kanji: \"紺色\",\n            kana: \"こんいろ\",\n            romaji: \"kon-iro\",\n            colour: \"#003fff\"\n        },\n        {\n            name: \"Indigo Blue\",\n            kanji: \"藍色\",\n            kana: \"あいいろ\",\n            romaji: \"ai-iro\",\n            colour: \"#3F00FF\"\n        },\n        {\n            name: \"Red\",\n            kanji: \"赤\",\n            kana: \"あか\",\n            romaji: \"aka\",\n            colour: \"#ff0000\"\n        },\n        {\n            name: \"Vermilion / Scarlet\",\n            kanji: \"朱色\",\n            kana: \"しゅいろ\",\n            romaji: \"shu-iro\",\n            colour: \"#E34234\"\n        },\n        {\n            name: \"Green\",\n            kanji: \"緑\",\n            kana: \"みどり\",\n            romaji: \"midori\",\n            colour: \"#09ff0d\"\n        },\n        {\n            name: \"Black\",\n            kanji: \"黒\",\n            kana: \"くろ\",\n            romaji: \"kuro\",\n            colour: \"#000000\"\n        },\n        {\n            name: \"Brown\",\n            kanji: \"茶色\",\n            kana: \"ちゃいろ\",\n            romaji: \"cha-iro\",\n            colour: \"#753c02\"\n        },\n        {\n            name: \"Dark Brown\",\n            kanji: \"焦げ茶色\",\n            kana: \"こげちゃいろ\",\n            romaji: \"kogecha-iro\",\n            colour: \"#4a2601\"\n        },\n        {\n            name: \"Pink\",\n            kana: \"ピンク\",\n            romaji: \"pinku\",\n            colour: \"#ff00bf\"\n        },\n        {\n            name: \"Purple\",\n            kanji: \"紫\",\n            kana: \"むらさき\",\n            romaji: \"murasaki\",\n            colour: \"#9500ff\"\n        },\n        {\n            name: \"Light Purple\",\n            kanji: \"藤色\",\n            kana: \"ふじいろ\",\n            romaji: \"fuji-iro\",\n            colour: \"#9500ff\"\n        },\n        {\n            name: \"White\",\n            kanji: \"白\",\n            kana: \"しろ\",\n            romaji: \"shiro\",\n            colour: \"#ffffff\"\n        },\n        {\n            name: \"Gray\",\n            kanji: \"灰色\",\n            kana: \"はいいろ\",\n            romaji: \"hai-iro\",\n            colour: \"#665d5a\"\n        },\n        {\n            name: \"Gold\",\n            kanji: \"金色\",\n            kana: \"きんいろ\",\n            romaji: \"kin-iro\",\n            colour: \"#deac14\"\n        },\n        {\n            name: \"Silver\",\n            kanji: \"銀色\",\n            kana: \"ぎんいろ\",\n            romaji: \"gin-iro\",\n            colour: \"#cbc1ba\"\n        },\n        {\n            name: \"Bronze\",\n            kana: \"ぶろんずいろ\",\n            romaji: \"buronzu-iro\",\n            colour: \"#e2831b\"\n        },\n        {\n            name: \"Multi-Coloured\",\n            kanji: \"多色の\",\n            kana: \"たしょくの\",\n            romaji: \"tashokuno\",\n            colour: \"#ff0000\"\n        },\n        {\n            name: \"Rainbow\",\n            kanji: \"虹\",\n            kana: \"にじ\",\n            romaji: \"niji\",\n            colour: \"#ff7700\"\n        },\n        {\n            name: \"Transparent\",\n            kanji: \"透明\",\n            kana: \"とうめい\",\n            romaji: \"toumei\",\n            colour: \"rgba(0,255,255,0.32)\"\n        },\n        {\n            name: \"Dark\",\n            kanji: \"濃い\",\n            kana: \"こい\",\n            romaji: \"koi\",\n            colour: \"#323232\"\n        }\n    ];\n}","import { Learnable, LearningExample } from \"./Learnable\";\n\nexport default class CommonData extends Learnable {\n\n    private readonly question: string;\n    private readonly kanji: string;\n    private readonly title: string;\n    private readonly kana: string[];\n    private readonly meaning: string;\n    private readonly example: LearningExample | undefined;\n\n    constructor(question: string, kana: string[], kanji: string, title: string, meaning: string, example?: LearningExample) {\n        super();\n        this.question = question;\n        this.kanji = kanji;\n        this.kana = kana;\n        this.title = title;\n        this.meaning = meaning;\n        this.example = example;\n    }\n\n    getKana(): string[] {\n        return this.kana;\n    }\n\n    getMeanings(): string[] {\n        return [this.meaning];\n    }\n\n    getTitle(): string {\n        return this.title;\n    }\n\n    getKanjiVariation(): string {\n        return this.kanji;\n    }\n\n    getExample(): LearningExample | undefined {\n        return this.example;\n    }\n\n    getHint(): string {\n        return \"It starts with \" + this.getKana()[0][0];\n    }\n\n    getUniqueID(): string {\n        return this.meaning + \"-\" + this.kana.join(\"-\");\n    }\n}","export enum AdjectiveType {\n    NA = \"な\", I = \"い\"\n}","export enum VerbType {\n    RU = \"る\",\n    U = \"う\",\n    TSU = \"つ\",\n    RU_U = \"う (ending in る)\",\n    MU = \"む\",\n    BU = \"ぶ\",\n    NU = \"ぬ\",\n    KU = \"く\",\n    KU_EXCEPTIONAL = \"く (exceptional)\",\n    GU = \"ぐ\",\n    SU = \"す\",\n    IRREGULAR = \"Irregular\"\n}","import Repository from \"./Repository\";\nimport CommonData from \"../types/learn/CommonData\";\nimport { CounterData, NumbersData } from \"../data/DataTypes\";\nimport numbers, { counters } from \"../data/Numbers\";\nimport NumbersSettings from \"../types/session/settings/data/NumbersSettings\";\n\nexport default class NumbersRepository implements Repository<CommonData> {\n    read(settings: NumbersSettings): Promise<CommonData[]> {\n        if (settings.numbers) {\n            return Promise.all(numbers().map((number: NumbersData) => {\n                const kanji = this.convertKanji(number);\n                return new CommonData(number.name, number.kana, kanji, \"Number\", number.name);\n            }));\n        }\n\n        if (settings.counters) {\n            return Promise.all(counters().map((counter: CounterData) => {\n                const kanji = this.convertKanji(counter);\n                const title = \"Counter - \" + counter.group;\n                return new CommonData(counter.name, counter.kana, kanji, title, counter.name, counter.example);\n            }));\n        }\n\n        return Promise.resolve([]);\n    }\n\n    private convertKanji = (data: NumbersData): string => data.kanji ?? \"\";\n}\n","import { CounterData, NumbersData } from \"./DataTypes\";\nimport { CounterGroup } from \"../types/numbers/CounterGroup\";\n\nexport default function numbers(): NumbersData[] {\n    return [\n        {\n            name: \"0\",\n            kanji: \"零\",\n            kana: [\"れい\", \"ゼロ\", \"マル\"],\n            romaji: [\"rei\", \"zero\", \"maru\"]\n        },\n        {\n            name: \"1\",\n            kanji: \"一\",\n            kana: [\"いち\"],\n            romaji: [\"ichi\"]\n        },\n        {\n            name: \"2\",\n            kanji: \"二\",\n            kana: [\"に\"],\n            romaji: [\"ni\"]\n        },\n        {\n            name: \"3\",\n            kanji: \"三\",\n            kana: [\"さん\"],\n            romaji: [\"san\"]\n        },\n        {\n            name: \"4\",\n            kanji: \"四\",\n            kana: [\"し\", \"よん\"],\n            romaji: [\"shi\", \"yon\"]\n        },\n        {\n            name: \"5\",\n            kanji: \"五\",\n            kana: [\"ご\"],\n            romaji: [\"go\"]\n        },\n        {\n            name: \"6\",\n            kanji: \"六\",\n            kana: [\"ろく\"],\n            romaji: [\"roku\"]\n        },\n        {\n            name: \"7\",\n            kanji: \"七\",\n            kana: [\"しち\", \"なな\"],\n            romaji: [\"shichi\", \"nana\"]\n        },\n        {\n            name: \"8\",\n            kanji: \"八\",\n            kana: [\"はち\"],\n            romaji: [\"hachi\"]\n        },\n        {\n            name: \"9\",\n            kanji: \"九\",\n            kana: [\"く\", \"きゅう\"],\n            romaji: [\"ku\", \"kyuu\"]\n        },\n        {\n            name: \"10\",\n            kanji: \"十\",\n            kana: [\"じゅう\"],\n            romaji: [\"juu\"]\n        },\n        {\n            name: \"100\",\n            kanji: \"百\",\n            kana: [\"びゃく\"],\n            romaji: [\"hyaku\"]\n        },\n        {\n            name: \"1000\",\n            kanji: \"千\",\n            kana: [\"せん\"],\n            romaji: [\"sen\"]\n        },\n        {\n            name: \"10,000\",\n            kanji: \"万\",\n            kana: [\"まん\"],\n            romaji: [\"man\"]\n        },\n        {\n            name: \"100 Million\",\n            kanji: \"億\",\n            kana: [\"おく\"],\n            romaji: [\"oku\"]\n        },\n        {\n            name: \"1 Billion\",\n            kanji: \"兆\",\n            kana: [\"ちょう\"],\n            romaji: [\"chō\"]\n        },\n    ];\n}\n\n//https://www.tofugu.com/japanese/japanese-counters-list/\nexport function counters(): CounterData[] {\n    return [\n        {\n            name: \"Everything\",\n            kana: [\"つ\"],\n            romaji: [\"tsu\"],\n            group: CounterGroup.ABSOLUTELY_MUST_KNOW,\n            example: { kana: \"ミカンが３つあります\", english: \"There are three oranges.\" }\n        },\n        {\n            name: \"Most Things\",\n            kanji: \"個\",\n            kana: [\"こ\"],\n            romaji: [\"ko\"],\n            group: CounterGroup.ABSOLUTELY_MUST_KNOW,\n            example: { kana: \"りんごが７個あります\", english: \"There are seven apples.\" }\n        },\n        {\n            name: \"Cylindrical\",\n            kanji: \"本\",\n            kana: [\"ほん\"],\n            romaji: [\"hon\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"ペンを１本貸してくれませんか？\", english: \"Could you lend me one of your pens?\" }\n        },\n        {\n            name: \"Flat\",\n            kanji: \"枚\",\n            kana: [\"まい\"],\n            romaji: [\"mai\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"100枚の折り紙が必要です\", english: \"I need 100 pieces of origami paper.\" }\n        },\n        {\n            name: \"Animals (M)\",\n            kanji: \"匹\",\n            kana: [\"ひき\"],\n            romaji: [\"hiki\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"犬を１匹と猫を２匹飼っています\", english: \"We have one dog and two cats.\" }\n        },\n        {\n            name: \"Animals (L)\",\n            kanji: \"頭\",\n            kana: [\"とう\"],\n            romaji: [\"tou\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"この動物園には、象が２頭います\", english: \"In this zoo, there are two elephants.\" }\n        },\n        {\n            name: \"Birds\",\n            kanji: \"羽\",\n            kana: [\"わ\"],\n            romaji: [\"wa\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"庭には２羽ニワトリがいます\", english: \"In the yard, there are two chickens.\" }\n        },\n        {\n            name: \"Machines / Vehicles\",\n            kanji: \"台\",\n            kana: [\"だい\"],\n            romaji: [\"dai\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"ベンはベンツを９台もっています\", english: \"Ben owns nine Mercedes Benz cars.\" }\n        },\n        {\n            name: \"Minutes\",\n            kanji: \"分\",\n            kana: [\"ふん\"],\n            romaji: [\"pun\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"今ちょうど4時44分になったところです\", english: \"It's just turned 4:44 right now.\" }\n        },\n        {\n            name: \"Days\",\n            kanji: \"日\",\n            kana: [\"か\", \"にち\"],\n            romaji: [\"ka\", \"nichi\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"来月の３日って何してる？\", english: \"What are you up to on the third day of next month?\" }\n        },\n        {\n            name: \"Years\",\n            kanji: \"年\",\n            kana: [\"ねん\"],\n            romaji: [\"nen\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"今、大学一年生です\", english: \"I'm in the first year of university now.\" }\n        },\n        {\n            name: \"Number of Times\",\n            kanji: \"回\",\n            kana: [\"かい\"],\n            romaji: [\"kai\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"日本には何回行ったことがありますか？\", english: \"How many times have you been to Japan?\" }\n        },\n        {\n            name: \"People\",\n            kanji: \"人\",\n            kana: [\"り\", \"にん\"],\n            romaji: [\"ri\", \"nin\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"１人は怖いから嫌だよ！\", english: \"I don't want to be alone because I'll be scared.\" }\n        },\n        {\n            name: \"Months\",\n            kanji: \"月\",\n            kana: [\"つき\", \"がつ\"],\n            romaji: [\"tsuki\", \"gatsu\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"あと１月でお正月だね\", english: \"It will be the New Year in one month.\" }\n        },\n        {\n            name: \"O'Clock\",\n            kanji: \"時\",\n            kana: [\"じ\"],\n            romaji: [\"ji\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"今何時ですか？\", english: \"What time is it?\" }\n        },\n        {\n            name: \"Hours\",\n            kanji: \"時間\",\n            kana: [\"じかん\"],\n            romaji: [\"jikan\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"二時間後に会いましょう\", english: \"Let's meet up in two hours.\" }\n        },\n        {\n            name: \"Building Floors\",\n            kanji: \"階\",\n            kana: [\"かい\"],\n            romaji: [\"kai\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"私の部屋は１２階にあります\", english: \"My room is on the twelfth floor.\" }\n        },\n        {\n            name: \"Age\",\n            kanji: \"歳\",\n            kana: [\"さい\"],\n            romaji: [\"sai\"],\n            group: CounterGroup.MUST_KNOW,\n            example: { kana: \"コウイチのお婆ちゃんって今何歳？\", english: \"How old is Koichi's grandma now?\" }\n        },\n    ];\n}","import { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { faThumbsDown, faThumbsUp, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../../styles/sass/components/ui/buttons/LearningFeedbackButton.module.scss\";\n\nexport interface LearningFeedbackButtonProps {\n    type: LearningFeedback;\n    disabled: boolean;\n    active: boolean;\n    className?: string;\n    onClick: () => void;\n}\n\nexport enum LearningFeedback {\n    REMEMBERED, FORGOT\n}\n\nclass LearningFeedbackButton extends Component<LearningFeedbackButtonProps> {\n    render() {\n        const { type, disabled, active, onClick, className } = this.props;\n\n        const isRemembered = type === LearningFeedback.REMEMBERED;\n        const activeClass = isRemembered ? styles.activeRemembered : styles.activeForgotten;\n\n        return (\n            <Button\n                onClick={onClick}\n                className={[active ? activeClass: !disabled ? styles.inactive : \"\", styles.button, className].join(\" \")}\n                variant={isRemembered ? \"success\" : \"danger\"}\n                disabled={disabled}\n                title={this.getTitle()}\n            >\n                <FontAwesomeIcon icon={this.getIcon()} fixedWidth className={styles.icon} />\n                <span className={styles.text}>{this.getText()}</span>\n            </Button>\n        );\n    }\n\n    private getIcon = (): IconDefinition => {\n        switch (this.props.type) {\n            case LearningFeedback.REMEMBERED: return faThumbsUp;\n            case LearningFeedback.FORGOT: return faThumbsDown;\n        }\n    }\n\n    private getText = (): string  => {\n        switch (this.props.type) {\n            case LearningFeedback.REMEMBERED: return \"Remembered It!\";\n            case LearningFeedback.FORGOT: return \"Forgot It\";\n        }\n    }\n\n    private getTitle = (): string => {\n        switch (this.props.type) {\n            case LearningFeedback.REMEMBERED: return \"I remembered it\";\n            case LearningFeedback.FORGOT: return \"I couldn't remember it\";\n        }\n    }\n}\n\nexport default LearningFeedbackButton;\n","import Repository from \"./Repository\";\nimport { adjectives, adverbs, expressions, verbs } from \"../data/SentenceStructure\";\nimport { AdjectiveData, AdverbData, ExpressionData, SentenceStructureData, VerbData } from \"../data/DataTypes\";\nimport Definition from \"../types/sentence/Definition\";\nimport { Learnable } from \"../types/learn/Learnable\";\nimport SentenceStructureSettings from \"../types/session/settings/data/SentenceStructureSettings\";\n\nexport default class SentenceStructureRepository implements Repository<Learnable> {\n    read(settings: SentenceStructureSettings): Promise<Learnable[]> {\n\n        const data = [];\n\n        if (settings.adjectives) {\n            data.push(...adjectives().map((it: AdjectiveData) => this.convert(it, it.type + \" Adjective\")));\n        }\n\n        if (settings.verbs) {\n            data.push(...verbs().map((it: VerbData) => this.convert(it, it.type + \" Verb\")));\n        }\n\n        if (settings.adverbs) {\n            data.push(...adverbs().map((it: AdverbData) => this.convert(it, \"Adverb\")));\n        }\n\n        if (settings.expressions) {\n            data.push(...expressions().map((it: ExpressionData) => this.convert(it, \"Expression\")));\n        }\n\n        return Promise.all(data);\n    }\n\n    private convert(data: SentenceStructureData, title: string): Definition {\n        return new Definition(data.meanings, data.kanjiForm, data.kana, title);\n    }\n}\n","import { AdjectiveData, AdverbData, ExpressionData, VerbData } from \"./DataTypes\";\nimport { AdjectiveType } from \"../types/sentence/AdjectiveType\";\nimport { VerbType } from \"../types/sentence/VerbType\";\n\nexport function adjectives(): AdjectiveData[] {\n    return [\n        {\n            meanings: [\"new\"],\n            kana: \"あたらしい\",\n            kanjiForm: \"新しい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"old (thing)\"],\n            kana: \"ふるい\",\n            kanjiForm: \"古い\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"hot (weather)\"],\n            kana: \"あつい\",\n            kanjiForm: \"暑い\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"cold (weather)\"],\n            kana: \"さむい\",\n            kanjiForm: \"寒い\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"hot (thing)\"],\n            kana: \"あつい\",\n            kanjiForm: \"熱い\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"busy (people/days)\"],\n            kana: \"いそがしい\",\n            kanjiForm: \"忙しい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"large\"],\n            kana: \"おおきい\",\n            kanjiForm: \"大きい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"small\"],\n            kana: \"ちいさい\",\n            kanjiForm: \"小さい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"interesting\", \"funny\"],\n            kana: \"おもしろい\",\n            kanjiForm: \"面白い\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"boring\"],\n            kana: \"つまらない\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"easy\", \"kind\"],\n            kana: \"やさしい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"difficult\"],\n            kana: \"むずかしい\",\n            kanjiForm: \"難しい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"good-looking (man)\"],\n            kana: \"かっこいい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"frightening\"],\n            kana: \"こわい\",\n            kanjiForm: \"怖い\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"fun\"],\n            kana: \"たのしい\",\n            kanjiForm: \"楽しい\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"cheap\", \"inexpensive\"],\n            kana: \"やすい\",\n            kanjiForm: \"安い\",\n            type: AdjectiveType.I,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"to like\"],\n            kana: \"すきな\",\n            kanjiForm: \"好き\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"to dislike\", \"disgusted with\"],\n            kana: \"きらいな\",\n            kanjiForm: \"嫌い\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"very fond of\", \"to love\"],\n            kana: \"だいすきな\",\n            kanjiForm: \"大好き\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"to hate\"],\n            kana: \"だいきらいな\",\n            kanjiForm: \"大嫌い\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"beautiful\", \"clean\"],\n            kana: \"きれいな\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"healthy\", \"energetic\"],\n            kana: \"げんきな\",\n            kanjiForm: \"元気\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"quiet\"],\n            kana: \"しずかな\",\n            kanjiForm: \"静か\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"lively\"],\n            kana: \"にぎやかな\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"free\", \"not busy\"],\n            kana: \"ひまな\",\n            kanjiForm: \"暇\",\n            type: AdjectiveType.NA,\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"tough (situation)\"],\n            kana: \"たいへんな\",\n            kanjiForm: \"大変\",\n            type: AdjectiveType.NA,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"long\"],\n            kana: \"ながい\",\n            kanjiForm: \"長い\",\n            type: AdjectiveType.I,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"short (length)\"],\n            kana: \"みじかい\",\n            kanjiForm: \"短い\",\n            type: AdjectiveType.I,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"fast\"],\n            kana: \"はやい\",\n            kanjiForm: \"早い\",\n            type: AdjectiveType.I,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"tall (stature)\"],\n            kana: \"せがたかい\",\n            kanjiForm: \"背が高い\",\n            type: AdjectiveType.I,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"short (stature)\"],\n            kana: \"せがひくい\",\n            kanjiForm: \"背が低い\",\n            type: AdjectiveType.I,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"bright\", \"smart\", \"clever\"],\n            kana: \"あたまがいい\",\n            kanjiForm: \"頭がいい\",\n            type: AdjectiveType.I,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"cute\"],\n            kana: \"かわいい\",\n            type: AdjectiveType.I,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"kind\"],\n            kana: \"しんせつな\",\n            kanjiForm: \"親切\",\n            type: AdjectiveType.NA,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"convenient\"],\n            kana: \"べんりな\",\n            kanjiForm: \"便利な\",\n            type: AdjectiveType.NA,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"skillful\", \"good at\"],\n            kana: \"じょうずな\",\n            kanjiForm: \"上手\",\n            type: AdjectiveType.NA,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"clumsy\", \"poor at\"],\n            kana: \"へたな\",\n            kanjiForm: \"下手\",\n            type: AdjectiveType.NA,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"famous\"],\n            kana: \"ゆうめいな\",\n            kanjiForm: \"有名\",\n            type: AdjectiveType.NA,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"blue\"],\n            kana: \"あおい\",\n            kanjiForm: \"青い\",\n            type: AdjectiveType.I,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"red\"],\n            kana: \"あかい\",\n            kanjiForm: \"赤い\",\n            type: AdjectiveType.I,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"black\"],\n            kana: \"くろい\",\n            kanjiForm: \"黒い\",\n            type: AdjectiveType.I,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"white\"],\n            kana: \"しろい\",\n            kanjiForm: \"白い\",\n            type: AdjectiveType.I,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"lonely\"],\n            kana: \"さびしい\",\n            kanjiForm: \"寂しい\",\n            type: AdjectiveType.I,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"young\"],\n            kana: \"わかい\",\n            kanjiForm: \"若い\",\n            type: AdjectiveType.I,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"mean-spirited\"],\n            kana: \"いじわるな\",\n            kanjiForm: \"意地悪\",\n            type: AdjectiveType.NA,\n            genkiLesson: 9\n        }\n    ];\n}\n\nexport function verbs(): VerbData[] {\n    return [\n        {\n            meanings: [\"to play\", \"to spend time pleasantly\"],\n            kana: \"あそぶ\",\n            kanjiForm: \"遊ぶ\",\n            type: VerbType.BU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to hurry\"],\n            kana: \"いそぐ\",\n            kanjiForm: \"急ぐ\",\n            type: VerbType.GU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to return (a thing)\"],\n            kana: \"かえす\",\n            kanjiForm: \"返す\",\n            type: VerbType.SU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to turn off\", \"to erase\"],\n            kana: \"けす\",\n            kanjiForm: \"消す\",\n            type: VerbType.SU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to die\"],\n            kana: \"しぬ\",\n            kanjiForm: \"死ぬ\",\n            type: VerbType.NU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to sit down\"],\n            kana: \"すわる\",\n            kanjiForm: \"座る\",\n            type: VerbType.RU_U,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to stand up\"],\n            kana: \"たつ\",\n            kanjiForm: \"立つ\",\n            type: VerbType.TSU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to smoke\"],\n            kana: \"たばこをすう\",\n            kanjiForm: \"たばこを吸う\",\n            type: VerbType.U,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to use\"],\n            kana: \"つかう\",\n            kanjiForm: \"使う\",\n            type: VerbType.U,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to help (person/task)\"],\n            kana: \"てつだう\",\n            kanjiForm: \"手伝う\",\n            type: VerbType.U,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to enter\"],\n            kana: \"はいる\",\n            kanjiForm: \"入る\",\n            type: VerbType.RU_U,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to carry\", \"to hold\"],\n            kana: \"もつ\",\n            kanjiForm: \"持つ\",\n            type: VerbType.TSU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to be absent\", \"to rest\"],\n            kana: \"やすむ\",\n            kanjiForm: \"休む\",\n            type: VerbType.MU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to open\"],\n            kana: \"あける\",\n            kanjiForm: \"開ける\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to close\"],\n            kana: \"しめる\",\n            kanjiForm: \"閉める\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to teach\", \"to instruct\"],\n            kana: \"おしえる\",\n            kanjiForm: \"教える\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to forget\", \"to leave behind\"],\n            kana: \"わすれる\",\n            kanjiForm: \"忘れる\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to get off\"],\n            kana: \"おりる\",\n            kanjiForm: \"降りる\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to borrow\"],\n            kana: \"かりる\",\n            kanjiForm: \"借りる\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to take a shower\"],\n            kana: \"シォワーをあびる\",\n            kanjiForm: \"シォワーを浴びる\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to turn on\"],\n            kana: \"つける\",\n            type: VerbType.RU,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to call\"],\n            kana: \"でんわする\",\n            kanjiForm: \"電話する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to bring (a person)\"],\n            kana: \"つれてくる\",\n            kanjiForm: \"連れてくる\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to bring (a thing)\"],\n            kana: \"もってくる\",\n            kanjiForm: \"持ってくる\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"to sing\"],\n            kana: \"うたう\",\n            kanjiForm: \"歌う\",\n            type: VerbType.U,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to put on (a hat)\"],\n            kana: \"かぶる\",\n            type: VerbType.RU_U,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to put on (items below your waist)\"],\n            kana: \"はく\",\n            type: VerbType.U,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to get to know\"],\n            kana: \"しる\",\n            kanjiForm: \"知る\",\n            type: VerbType.U,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to live\"],\n            kana: \"すむ\",\n            kanjiForm: \"住む\",\n            type: VerbType.U,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to work\"],\n            kana: \"はたらく\",\n            kanjiForm: \"働く\",\n            type: VerbType.U,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to gain weight\"],\n            kana: \"ふとる\",\n            kanjiForm: \"太る\",\n            type: VerbType.U,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to put on (glasses)\"],\n            kana: \"(めがねを) かける\",\n            type: VerbType.RU,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to put on (clothes above your waist)\"],\n            kana: \"きる\",\n            kanjiForm: \"着る\",\n            type: VerbType.RU,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to lose weight\"],\n            kana: \"やせる\",\n            type: VerbType.RU,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to get married\"],\n            kana: \"けっこんする\",\n            kanjiForm: \"結婚する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"to wash\"],\n            kana: \"あらう\",\n            kanjiForm: \"洗う\",\n            type: VerbType.U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to say\"],\n            kana: \"いう\",\n            kanjiForm: \"言う\",\n            type: VerbType.U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to need\"],\n            kana: \"いる\",\n            type: VerbType.U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to be late\"],\n            kana: \"おそくなる\",\n            kanjiForm: \"遅くなる\",\n            type: VerbType.RU_U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to take a bath\"],\n            kana: \"おふろにはいる\",\n            kanjiForm: \"お風呂に入る\",\n            type: VerbType.RU_U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to think\"],\n            kana: \"おもう\",\n            kanjiForm: \"思う\",\n            type: VerbType.U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to cut\"],\n            kana: \"きる\",\n            kanjiForm: \"切る\",\n            type: VerbType.RU_U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to make\"],\n            kana: \"つくる\",\n            kanjiForm: \"作る\",\n            type: VerbType.RU_U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"(rain / snow) falls\"],\n            kana: \"(あめ / ゆき　が) ふる\",\n            kanjiForm: \"(雨 / 雪 が)　降る\",\n            type: VerbType.RU_U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to take (a thing)\"],\n            kana: \"もっていく\",\n            kanjiForm: \"持っていく\",\n            type: VerbType.U,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to throw away\"],\n            kana: \"すてる\",\n            kanjiForm: \"捨てる\",\n            type: VerbType.RU,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to begin\"],\n            kana: \"はじめる\",\n            kanjiForm: \"始める\",\n            type: VerbType.RU,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to drive\"],\n            kana: \"うんてんする\",\n            kanjiForm: \"運転する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to do laundry\"],\n            kana: \"せんたくする\",\n            kanjiForm: \"洗濯する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to clean\"],\n            kana: \"そうじする\",\n            kanjiForm: \"掃除する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to cook\"],\n            kana: \"りょうりする\",\n            kanjiForm: \"料理する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"to dance\"],\n            kana: \"おどる\",\n            kanjiForm: \"踊る\",\n            type: VerbType.RU_U,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"something ends\"],\n            kana: \"おわる\",\n            kanjiForm: \"終わる\",\n            type: VerbType.RU_U,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to take medicine\"],\n            kana: \"くすりをのむ\",\n            kanjiForm: \"薬を飲む\",\n            type: VerbType.U,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to be popular\"],\n            kana: \"にんきがある\",\n            kanjiForm: \"人気がある\",\n            type: VerbType.RU_U,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"something begins\"],\n            kana: \"はじまる\",\n            kanjiForm: \"始まる\",\n            type: VerbType.RU_U,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to play (an instrument)\"],\n            kana: \"ひく\",\n            kanjiForm: \"弾く\",\n            type: VerbType.U,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to get (from somebody)\"],\n            kana: \"もらう\",\n            type: VerbType.U,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to memorise\"],\n            kana: \"おぼえる\",\n            kanjiForm: \"覚える\",\n            type: VerbType.RU,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to appear\", \"to attend\", \"to exit\"],\n            kana: \"でる\",\n            kanjiForm: \"出る\",\n            type: VerbType.RU,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to exercise\"],\n            kana: \"うんどうする\",\n            kanjiForm: \"運動する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to take a walk\"],\n            kana: \"さんぽする\",\n            kanjiForm: \"散歩する\",\n            type: VerbType.IRREGULAR,\n            genkiLesson: 9\n        },\n    ];\n}\n\nexport function adverbs(): AdverbData[] {\n    return [\n        {\n            meanings: [\"not much\"],\n            kana: \"あまり~\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"not at all\"],\n            kana: \"ぜんぜん~\",\n            kanjiForm: \"全然\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"usually\"],\n            kana: \"たいてい\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"a little\"],\n            kana: \"ちょっと\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"sometimes\"],\n            kana: \"ときどき\",\n            kanjiForm: \"時々\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"often\", \"much\"],\n            kana: \"よく\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"about\"],\n            kana: \"~ぐらい\",\n            genkiLesson: 4\n        },\n        {\n            meanings: [\"so\", \"therefore\"],\n            kana:　\"だから\",\n            genkiLesson: 4\n        },\n        {\n            meanings: [\"many\", \"a lot\"],\n            kana:　\"たくさん\",\n            genkiLesson: 4\n        },\n        {\n            meanings: [\"and\", \"together (with a person)\"],\n            kana:　\"~と\",\n            genkiLesson: 4\n        },\n        {\n            meanings: [\"why\"],\n            kana:　\"どうして\",\n            genkiLesson: 4\n        },\n        {\n            meanings: [\"alone\"],\n            kana:　\"ひとりで\",\n            kanjiForm: \"一人で\",\n            genkiLesson: 4\n        },\n        {\n            meanings: [\"together\"],\n            kana: \"いっしょに\",\n            kanjiForm: \"一緒に\",\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"very\"],\n            kana: \"とても\",\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"extremely\"],\n            kana: \"すごく\",\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"slowly\", \"leisurely\", \"unhurriedly\"],\n            kana: \"ゆっくり\",\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"of course\"],\n            kana: \"もちろん\",\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"if you like\"],\n            kana: \"よかったら\",\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"always\"],\n            kana: \"いつも\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"everybody\", \"all people\"],\n            kana: \"みんなで\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"not...yet\"],\n            kana: \"まだ + negative\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"about...\", \"concerning...\"],\n            kana: \"~について\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"how\"],\n            kana: \"どう\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"already\"],\n            kana: \"もう\",\n            genkiLesson: 9\n        }\n    ];\n}\n\nexport function expressions(): ExpressionData[] {\n    return [\n        {\n            meanings: [\"That's right\", \"Let me see\"],\n            kana: \"そうですね\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"but\"],\n            kana: \"でも\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"How about...?\", \"How is...?\"],\n            kana: \"どうですか\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"yes\"],\n            kana: \"ええ\",\n            genkiLesson: 3\n        },\n        {\n            meanings: [\"Hello? (On the phone)\"],\n            kana: \"もしもし\",\n            genkiLesson: 4\n        },\n        {\n            meanings: [\"It's okay\", \"Not to worry\", \"Everything is under control\"],\n            kana: \"だいじょうぶ\",\n            kanjiForm: \"大丈夫\",\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"What kind of...\"],\n            kana: \"どんな\",\n            genkiLesson: 5\n        },\n        {\n            meanings: [\"later on\"],\n            kana: \"あとで\",\n            kanjiForm: \"後で\",\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"right away\"],\n            kana: \"すぐ\",\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"That would be fine\", \"That wouldn't be necessary\"],\n            kana: \"けっこうです\",\n            kanjiForm: \"結構です\",\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"Really?\"],\n            kana: \"ほんとうですか\",\n            kanjiForm: \"本当ですか\",\n            genkiLesson: 6\n        },\n        {\n            meanings: [\"Nothing in particular\"],\n            kana: \"べつに + negative\",\n            kanjiForm: \"別に\",\n            genkiLesson: 7\n        },\n        {\n            meanings: [\"uh-huh\", \"yes\"],\n            kana: \"うん\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"uh-uh\", \"no\"],\n            kana: \"ううん\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"do something (late)\"],\n            kana: \"おそく\",\n            kanjiForm: \"遅く\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"Cheers! (a toast)\"],\n            kana: \"かんぱい\",\n            kanjiForm: \"乾杯\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"That's too bad.\"],\n            kana: \"ざんねん (ですね)\",\n            kanjiForm: \"残念\",\n            genkiLesson: 8\n        },\n        {\n            meanings: [\"(I think) so\"],\n            kana: \"そう\",\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"from...\"],\n            kana: \"から\",\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"to (a place/time)\"],\n            kana: \"まで\",\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"by all means\"],\n            kana: \"ぜひ\",\n            kanjiForm: \"是非\",\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"by the way\"],\n            kana: \"ところで\",\n            genkiLesson: 9\n        },\n        {\n            meanings: [\"all\"],\n            kana: \"みんな\",\n            kanjiForm: \"皆\",\n            genkiLesson: 9\n        }\n    ];\n}","import Topic from \"../types/Topic\";\nimport { Learnable } from \"../types/learn/Learnable\";\nimport { KanaRepository } from \"./KanaRepository\";\nimport CalendarRepository from \"./CalendarRepository\";\nimport { KanjiRepository } from \"./KanjiRepository\";\nimport BasicsRepository from \"./BasicsRepository\";\nimport NumbersRepository from \"./NumbersRepository\";\nimport SentenceStructureRepository from \"./SentenceStructureRepository\";\nimport DataSettings from \"../types/session/settings/data/DataSettings\";\nimport KanaSettings from \"../types/session/settings/data/KanaSettings\";\nimport CalendarSettings from \"../types/session/settings/data/CalendarSettings\";\nimport KanjiSettings from \"../types/session/settings/data/KanjiSettings\";\nimport BasicsSettings from \"../types/session/settings/data/BasicsSettings\";\nimport SentenceStructureSettings from \"../types/session/settings/data/SentenceStructureSettings\";\nimport NumbersSettings from \"../types/session/settings/data/NumbersSettings\";\n\nexport default class LearningDataRepository {\n    public async read(settings?: DataSettings): Promise<Learnable[]> {\n        if (!settings) return [];\n\n        switch (settings.topic) {\n            case Topic.KANA: {\n                return new KanaRepository().read(settings as KanaSettings);\n            }\n            case Topic.CALENDAR: {\n                return new CalendarRepository().read(settings as CalendarSettings);\n            }\n            case Topic.KANJI: {\n                return new KanjiRepository().read(settings as KanjiSettings);\n            }\n            case Topic.BASICS: {\n                return new BasicsRepository().read(settings as BasicsSettings);\n            }\n            case Topic.NUMBERS: {\n                return new NumbersRepository().read(settings as NumbersSettings);\n            }\n            case Topic.GRAMMAR: {\n                return new SentenceStructureRepository().read(settings as SentenceStructureSettings);\n            }\n            default: {\n                return [];\n            }\n        }\n    }\n}\n","import DataSettings from \"./data/DataSettings\";\nimport GameSettings from \"./game/GameSettings\";\nimport LearnSettings from \"./LearnSettings\";\n\nexport class SessionSettings {\n    private readonly _gameSettings: GameSettings | undefined;\n    private readonly _learnSettings: LearnSettings | undefined;\n    private readonly _dataSettings: DataSettings;\n\n    private constructor(dataSettings: DataSettings, gameSettings?: GameSettings, learnSettings?: LearnSettings) {\n        this._gameSettings = gameSettings;\n        this._learnSettings = learnSettings;\n        this._dataSettings = dataSettings;\n    }\n\n    public static forGame(dataSettings: DataSettings, settings: GameSettings) {\n        return new SessionSettings(dataSettings, settings, undefined);\n    }\n\n    public static forLearning(dataSettings: DataSettings, settings: LearnSettings) {\n        return new SessionSettings(dataSettings, undefined, settings);\n    }\n\n    get gameSettings(): GameSettings | undefined {\n        return this._gameSettings;\n    }\n\n    get learnSettings(): LearnSettings | undefined {\n        return this._learnSettings;\n    }\n\n    get dataSettings(): DataSettings {\n        return this._dataSettings;\n    }\n}","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { QuestionType } from \"../../../types/game/QuestionType\";\nimport styles from \"../../../styles/sass/components/ui/buttons/DisplayTypeButton.module.scss\";\n\nexport interface DisplayTypeButtonProps {\n    type: QuestionType;\n    selected: QuestionType;\n    icon: IconDefinition;\n    onClick: (type: QuestionType) => void;\n}\n\nclass DisplayTypeButton extends Component<DisplayTypeButtonProps> {\n\n    constructor(props: Readonly<DisplayTypeButtonProps> | DisplayTypeButtonProps) {\n        super(props);\n        this.state = {\n            selected: false\n        }\n    }\n\n    render() {\n        const { type, selected, icon, onClick } = this.props;\n        const className = selected === type ? styles.selected : styles.notSelected;\n\n        return (\n            <Button block className={className} onClick={() => onClick(type)}>\n                <FontAwesomeIcon className={styles.icon} icon={icon} />\n                <p className={styles.name}>{type}</p>\n            </Button>\n        );\n    }\n}\n\nexport default DisplayTypeButton;\n","import { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../../styles/sass/components/ui/buttons/KanaQuantityButton.module.scss\";\n\ninterface KanaQuantityButtonProps {\n    cards: number;\n    selected: number;\n    onClick: (quantity: number) => void;\n}\n\nclass KanaQuantityButton extends Component<KanaQuantityButtonProps> {\n    render() {\n        const { cards, selected, onClick, children } = this.props;\n        return (\n            <Button onClick={() => onClick(cards)} className={selected === cards ? styles.selected : styles.notSelected}>\n                {children}\n                <p className={styles.name}>{cards}</p>\n            </Button>\n        );\n    }\n}\n\nexport default KanaQuantityButton;","import React, { ChangeEvent, Component } from \"react\";\nimport { Form, OverlayTrigger } from \"react-bootstrap\";\nimport LearnableField from \"../../../types/learn/LearnableField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport PopOver from \"../PopOver\";\nimport styles from \"../../../styles/sass/components/ui/select/LearnableFieldSelector.module.scss\";\n\nexport interface LearnableFieldSelectorProps {\n    default?: LearnableField;\n    exclude?: LearnableField;\n    onSelect: (field: LearnableField) => void;\n}\n\ninterface LearnableFieldSelectorState {\n    selected: LearnableField;\n}\n\nclass LearnableFieldSelector extends Component<LearnableFieldSelectorProps, LearnableFieldSelectorState> {\n\n    constructor(props: Readonly<LearnableFieldSelectorProps> | LearnableFieldSelectorProps) {\n        super(props);\n        this.state = {\n            selected: props.default ?? LearnableField.KANA\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<LearnableFieldSelectorProps>, prevState: Readonly<LearnableFieldSelectorState>) {\n        if (prevState !== this.state) {\n            this.props.onSelect(this.state.selected);\n        }\n    }\n\n    render() {\n        const { selected } = this.state;\n        const { exclude } = this.props;\n\n        const helpPopover = <PopOver title={selected.name} text={selected.description} />;\n\n        return (\n            <div>\n                <OverlayTrigger trigger={[\"hover\", \"click\"]} overlay={helpPopover} placement=\"top\">\n                    <FontAwesomeIcon icon={faInfoCircle} className={styles.icon} data-testid=\"field-help\"/>\n                </OverlayTrigger>\n\n                <Form.Control as=\"select\" onChange={this.handleOnChange} className={styles.menu} data-testid=\"learnable-field-selector\">\n                    {LearnableField.values()\n                        .filter((field: LearnableField) => field !== exclude)\n                        .map(field => {\n                            return (\n                                <option key={field.name} selected={selected.name === field.name}>\n                                    {field.name}\n                                </option>\n                            );\n                        })}\n                </Form.Control>\n            </div>\n        );\n    }\n\n    private handleOnChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n        const field = LearnableField.fromNameString(e.target.value);\n        this.setState({ selected: field });\n        this.props.onSelect(field);\n    }\n}\n\nexport default LearnableFieldSelector;\n","import React, { Component } from \"react\";\nimport { QuestionType } from \"../../../types/game/QuestionType\";\nimport DisplayTypeButton from \"../../ui/buttons/DisplayTypeButton\";\nimport { faChevronRight, faFont, faGripVertical, faHandPointer, faSquare, faThLarge } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Environment } from \"../../../utility/Environment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport KanaQuantityButton from \"../../ui/buttons/KanaQuantityButton\";\nimport QuestionSettings, { QuestionSettingsBuilder } from \"../../../types/session/settings/game/QuestionSettings\";\nimport styles from \"../../../styles/sass/components/settings/game/QuestionSettingsForm.module.scss\";\nimport LearnableField from \"../../../types/learn/LearnableField\";\nimport LearnableFieldSelector from \"../../ui/select/LearnableFieldSelector\";\nimport ScrollableContainer from \"../../ui/ScrollableContainer\";\nimport ToggleSwitch from \"../../ui/ToggleSwitch\";\n\nexport interface QuestionSettingsFormProps {\n    onChange: (settings: QuestionSettings) => void;\n}\n\ninterface QuestionSettingsFormState {\n    type: QuestionType;\n    cards: number;\n    score: boolean;\n    questions: number;\n    questionField: LearnableField;\n    answerField: LearnableField;\n}\n\nclass QuestionSettingsForm extends Component<QuestionSettingsFormProps, QuestionSettingsFormState> {\n\n    private readonly defaultState = new QuestionSettingsBuilder()\n        .withType(QuestionType.TEXT)\n        .withCardQuantity(1)\n        .withQuantity(1)\n        .withFields(LearnableField.ROMAJI, LearnableField.KANA)\n        .withScoreTracking(true)\n        .build();\n\n    constructor(props: Readonly<QuestionSettingsFormProps> | QuestionSettingsFormProps) {\n        super(props);\n        this.state = {\n            type: this.defaultState.type,\n            cards: this.defaultState.cards,\n            score: this.defaultState.score,\n            questions: this.defaultState.quantity,\n            questionField: this.defaultState.questionField,\n            answerField: this.defaultState.answerField\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<QuestionSettingsFormProps>, prevState: Readonly<QuestionSettingsFormState>) {\n        if (prevState !== this.state) {\n            const { type, cards, score, questions, questionField, answerField } = this.state;\n\n            const settings = new QuestionSettingsBuilder()\n                .withType(type)\n                .withCardQuantity(cards)\n                .withScoreTracking(score)\n                .withQuantity(questions)\n                .withFields(questionField, answerField)\n                .build();\n\n            this.props.onChange(settings);\n        }\n    }\n\n    render() {\n        const { type, cards, score, questionField, answerField } = this.state;\n\n        return (\n            <ScrollableContainer className={styles.formWrapper}>\n                <Row className={styles.section}>\n                    <Col xs={12}>\n                        <p className={styles.leadingDescription}>\n                            Configure settings regarding the types of question you'll be asked.\n                        </p>\n                    </Col>\n                    <Col xs={12}>\n                        <h5 className={styles.heading}>\n                            <FontAwesomeIcon icon={faChevronRight}/> Question Type\n                        </h5>\n                    </Col>\n\n                    <Col xs={12} className={styles.descriptionWrapper}>\n                        <span className={styles.description}>{this.getDescription()}</span>\n                    </Col>\n\n                    <Col className={styles.noGuttersRight}>\n                        <DisplayTypeButton\n                            icon={faFont}\n                            type={QuestionType.TEXT}\n                            selected={type}\n                            onClick={(type) => this.setState({ type, cards: 1 })}\n                        />\n                    </Col>\n\n                    <Col className={[styles.noGuttersLeft, styles.noGuttersRight].join(\" \")}>\n                        <DisplayTypeButton\n                            icon={faThLarge}\n                            type={QuestionType.CHOICE}\n                            selected={type}\n                            onClick={(type) => this.setState({ type, cards: 4 })}\n                        />\n                    </Col>\n\n                    <Col className={styles.noGuttersLeft}>\n                        <DisplayTypeButton\n                            icon={faHandPointer}\n                            type={QuestionType.MATCH}\n                            selected={type}\n                            onClick={(type) => this.setState({ type, questions: 3 })}\n                        />\n                    </Col>\n                </Row>\n\n\n                {type === QuestionType.CHOICE &&\n                    <Row className={styles.section}>\n                        <Col xs={12}>\n                            <p className={styles.description}>You'll be shown {cards} answers to choose from.</p>\n                        </Col>\n\n                        <Col className={styles.noGuttersRight}>\n                            <KanaQuantityButton cards={2} selected={cards} onClick={this.handleQuantitySelect}>\n                            <span className={\"fa-layers fa-fw \" + styles.cardsIcon}>\n                                <FontAwesomeIcon fixedWidth icon={faSquare} transform=\"left-5 shrink-8\"/>\n                                <FontAwesomeIcon fixedWidth icon={faSquare} transform=\"right-5 shrink-8\"/>\n                            </span>\n                            </KanaQuantityButton>\n                        </Col>\n\n                        <Col className={[styles.noGuttersLeft, styles.noGuttersRight].join(\" \")}>\n                            <KanaQuantityButton cards={4} selected={cards} onClick={this.handleQuantitySelect}>\n                                <FontAwesomeIcon\n                                    fixedWidth\n                                    icon={faThLarge}\n                                    className={styles.cardsIcon}\n                                />\n                            </KanaQuantityButton>\n                        </Col>\n\n                        <Col className={styles.noGuttersLeft}>\n                            <KanaQuantityButton cards={6} selected={cards} onClick={this.handleQuantitySelect}>\n                                <FontAwesomeIcon\n                                    fixedWidth\n                                    icon={faGripVertical}\n                                    transform=\"grow-5 rotate-90\"\n                                    className={styles.cardsIcon}\n                                />\n                            </KanaQuantityButton>\n                        </Col>\n                    </Row>\n                }\n\n                <Row className={styles.section}>\n                    <Col xs={12}>\n                        <h5 className={styles.heading}>\n                            <FontAwesomeIcon icon={faChevronRight}/> Question & Answer Fields\n                        </h5>\n                    </Col>\n\n                    <Col xs={12}>\n                        <p className={styles.description}>\n                            Select which piece of information you are given in the question and what you must give\n                            as the answer. You cannot select the same field for both.\n                        </p>\n                    </Col>\n\n                    <Col xs={6}>\n                        <h6 className={styles.heading}>Give me the...</h6>\n                        <LearnableFieldSelector\n                            exclude={answerField}\n                            default={questionField}\n                            onSelect={(field: LearnableField) => this.setState({ questionField: field })}\n                        />\n                    </Col>\n\n                    <Col xs={6}>\n                        <h6 className={styles.heading}>Ask me the...</h6>\n                        <LearnableFieldSelector\n                            exclude={questionField}\n                            default={answerField}\n                            onSelect={(field: LearnableField) => this.setState({ answerField: field })}\n                        />\n                    </Col>\n                </Row>\n\n                <Row className={styles.section}>\n                    <Col xs={12}>\n                        <h5 className={styles.heading}>\n                            <FontAwesomeIcon icon={faChevronRight}/> Score\n                        </h5>\n\n                        <ToggleSwitch\n                            label=\"Track Score\"\n                            enabled={score}\n                            data-testid=\"score-switch\"\n                            className={styles.check}\n                            onChange={() => this.setState({ score: !score })}\n                        />\n\n                        <p className={styles.description}>\n                            You gain a base score per question answered correctly.\n                            Streaking will increase your multiplier exponentially, but breaking it\n                            will reset to the base. Skipping a question will lose you the 1 x the base score.\n                        </p>\n                    </Col>\n                </Row>\n            </ScrollableContainer>\n        );\n    }\n\n    reset = () => this.setState({\n        type: this.defaultState.type,\n        cards: this.defaultState.cards,\n        score: this.defaultState.score,\n        questions: this.defaultState.quantity,\n        questionField: this.defaultState.questionField,\n        answerField: this.defaultState.answerField\n    });\n\n    private handleQuantitySelect = (quantity: number) => {\n        this.setState({ cards: quantity });\n    }\n\n    private getDescription = () => Environment.variable(this.state.type + \"_MODE_DESC\");\n}\n\nexport default QuestionSettingsForm;\n","import React, { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport HintSettings, { HintSettingsBuilder } from \"../../../types/session/settings/game/HintSettings\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport ScrollableContainer from \"../../ui/ScrollableContainer\";\nimport styles from \"../../../styles/sass/components/settings/game/HintSettingsForm.module.scss\";\nimport ToggleSwitch from \"../../ui/ToggleSwitch\";\n\nexport interface HintSettingsFormProps {\n    onChange: (settings: HintSettings) => void;\n}\n\ninterface HintSettingsFormState {\n    enabled: boolean;\n    quantity: number;\n    infinite: boolean;\n}\n\nclass HintSettingsForm extends Component<HintSettingsFormProps, HintSettingsFormState> {\n\n    private readonly defaultState = new HintSettingsBuilder().isEnabled().withQuantity(3).areUnlimited(false).build();\n\n    constructor(props: HintSettingsFormProps | Readonly<HintSettingsFormProps>) {\n        super(props);\n        this.state = {\n            enabled: this.defaultState.enabled,\n            quantity: this.defaultState.quantity,\n            infinite: this.defaultState.unlimited\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<HintSettingsFormProps>, prevState: Readonly<HintSettingsFormState>) {\n        if (prevState !== this.state) {\n            const { enabled, quantity, infinite } = this.state;\n\n            const settings = new HintSettingsBuilder()\n                .isEnabled(enabled)\n                .withQuantity(quantity)\n                .areUnlimited(infinite)\n                .build();\n\n            this.props.onChange(settings);\n        }\n    }\n\n    render() {\n        const { enabled, quantity, infinite } = this.state;\n\n        return (\n            <ScrollableContainer className={styles.formWrapper}>\n                <Row>\n                    <Col xs={12}>\n                        <ToggleSwitch\n                            enabled={enabled}\n                            label=\"Enable\"\n                            className={styles.check}\n                            data-testid=\"enable-hints\"\n                            onChange={() => this.setState({ enabled: !enabled, infinite: false })}\n                        />\n\n                        <p className={styles.leadingDescription}>\n                            Hints allow you to reveal a small piece of information about the current question if you're\n                            struggling.\n                        </p>\n                    </Col>\n\n                    <Col xs={12}>\n                        <RangeSlider\n                            min={1} max={10}\n                            value={quantity}\n                            variant=\"primary\"\n                            disabled={!enabled || infinite}\n                            tooltip={enabled && !infinite ? \"auto\" : \"off\"}\n                            data-testid=\"hint-quantity-slider\"\n                            onChange={this.onChangeHintQuantity}\n                        />\n\n                        <p className={styles.leadingDescription}>\n                            Select the number of hints you want for the entire game. You only get to use one per\n                            question.\n                        </p>\n                    </Col>\n\n                    <Col xs={12}>\n                        <ToggleSwitch\n                            enabled={infinite}\n                            disabled={!enabled}\n                            label=\"Infinite Hints\"\n                            className={styles.check}\n                            data-testid=\"enable-infinite-hints\"\n                            onChange={() => this.setState({ infinite: !infinite })}\n                        />\n\n                        <p className={styles.leadingDescription}>\n                            Remove the quantity cap and use as many hints as you'd like.\n                        </p>\n                    </Col>\n                </Row>\n            </ScrollableContainer>\n        );\n    }\n\n    reset = () => this.setState({\n        enabled: this.defaultState.enabled,\n        quantity: this.defaultState.quantity,\n        infinite: this.defaultState.unlimited\n    });\n\n    private onChangeHintQuantity = (e: React.ChangeEvent, value: number) => {\n        this.setState({ quantity: value });\n    }\n}\n\nexport default HintSettingsForm;\n","import React, { ChangeEvent, Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport LifeSettings, { LifeSettingsBuilder } from \"../../../types/session/settings/game/LifeSettings\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport ScrollableContainer from \"../../ui/ScrollableContainer\";\nimport styles from \"../../../styles/sass/components/settings/game/LifeSettingsForm.module.scss\";\nimport ToggleSwitch from \"../../ui/ToggleSwitch\";\n\ninterface LifeSettingsFormProps {\n    onChange: (settings: LifeSettings) => void;\n}\n\ninterface LifeSettingsFormState {\n    enabled: boolean;\n    quantity: number;\n}\n\nclass LifeSettingsForm extends Component<LifeSettingsFormProps, LifeSettingsFormState> {\n\n    private readonly defaultState = new LifeSettingsBuilder().isEnabled(false).withQuantity(0).build();\n\n    constructor(props: LifeSettingsFormProps | Readonly<LifeSettingsFormProps>) {\n        super(props);\n        this.state = {\n            enabled: this.defaultState.enabled,\n            quantity: this.defaultState.quantity,\n        }\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<LifeSettingsFormProps>, prevState: Readonly<LifeSettingsFormState>) {\n        if (prevState !== this.state) {\n            const { enabled, quantity } = this.state;\n            const settings = new LifeSettingsBuilder().isEnabled(enabled).withQuantity(quantity).build();\n            this.props.onChange(settings);\n        }\n    }\n\n    render() {\n        const { enabled, quantity } = this.state;\n\n        return (\n            <ScrollableContainer className={styles.formWrapper}>\n                <Row>\n                    <Col xs={12}>\n                        <p className={styles.leadingDescription}>\n                            Configure the number of lives you start with. For an added challenge you can give yourself only\n                            a few, or unlimited if you're playing more casually.\n                        </p>\n\n                        <ToggleSwitch\n                            label=\"Enable\"\n                            enabled={enabled}\n                            className={styles.check}\n                            data-testid=\"enable-lives\"\n                            onChange={() => this.setState({ enabled: !enabled })}\n                        />\n                    </Col>\n\n                    <Col xs={12}>\n                        <p className={styles.leadingDescription}>\n                            Select the number of lives you want to start the game with. You can choose between 1 and 10.\n                            Disabling will give you infinite.\n                        </p>\n\n                        <RangeSlider\n                            min={1} max={10}\n                            value={quantity.valueOf()}\n                            variant=\"primary\"\n                            disabled={!enabled}\n                            tooltip={enabled ? \"auto\": \"off\"}\n                            data-testid=\"life-quantity-slider\"\n                            onChange={(e: ChangeEvent, value: number) => this.setState({ quantity: value })}\n                        />\n                    </Col>\n                </Row>\n            </ScrollableContainer>\n        );\n    }\n\n    reset = () => {\n        this.setState({\n            enabled: this.defaultState.enabled,\n            quantity: this.defaultState.quantity,\n        });\n    }\n}\n\nexport default LifeSettingsForm;\n","import React, { ChangeEvent, Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport TimeSettings, { TimeSettingsBuilder } from \"../../../types/session/settings/game/TimeSettings\";\nimport styles from \"../../../styles/sass/components/settings/game/TimeSettingsForm.module.scss\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport ScrollableContainer from \"../../ui/ScrollableContainer\";\nimport ToggleSwitch from \"../../ui/ToggleSwitch\";\n\nexport interface TimeSettingsFormProps {\n    onChange: (settings: TimeSettings) => void;\n}\n\ninterface TimeSettingsFormState {\n    timed: boolean;\n    countdown: boolean;\n    seconds: number;\n}\n\nclass TimeSettingsForm extends Component<TimeSettingsFormProps, TimeSettingsFormState> {\n\n    private readonly defaultState = new TimeSettingsBuilder()\n        .isTimed()\n        .isCountDown(false)\n        .withSecondsPerQuestion(10)\n        .build();\n\n    constructor(props: TimeSettingsFormProps | Readonly<TimeSettingsFormProps>) {\n        super(props);\n        this.state = {\n            timed: this.defaultState.timed,\n            countdown: this.defaultState.countdown,\n            seconds: this.defaultState.secondsPerQuestion\n        };\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.defaultState);\n    }\n\n    componentDidUpdate(prevProps: Readonly<TimeSettingsFormProps>, prevState: Readonly<TimeSettingsFormState>) {\n        if (prevState !== this.state) {\n            const { timed, countdown, seconds } = this.state;\n\n            const settings = new TimeSettingsBuilder()\n                .isTimed(timed)\n                .isCountDown(countdown)\n                .withSecondsPerQuestion(seconds)\n                .build();\n\n            this.props.onChange(settings);\n        }\n    }\n\n    render() {\n        const { timed, countdown, seconds } = this.state;\n\n        return (\n            <ScrollableContainer className={styles.formWrapper}>\n                <Row>\n                    <Col>\n                        <div className={styles.descriptionWrapper}>\n                            <p className={styles.leadingDescription}>\n                                Configure the style of timer you want for the game or disable it entirely.\n                            </p>\n                        </div>\n\n                        <h5 className={styles.heading}>\n                            <ToggleSwitch\n                                label=\"Timed\"\n                                enabled={timed}\n                                data-testid=\"Timed\"\n                                className={styles.check}\n                                onChange={this.onChangeTimed}\n                            />\n                        </h5>\n\n                        <p className={[styles.description, timed ? styles.active : styles.inactive].join(\" \")}>\n                            You'll simply be timed starting from 00:00 and the timer will stop when you finish the game\n                            or lose. Useful for speed-running certain topics to test your mastery.\n                        </p>\n\n                        <h5 className={styles.heading}>\n                            <ToggleSwitch\n                                label=\"Count Down\"\n                                enabled={countdown}\n                                data-testid=\"Countdown\"\n                                className={styles.check}\n                                onChange={this.onChangeCountDown}\n                            />\n                        </h5>\n\n                        <p className={[styles.description, countdown ? styles.active : styles.inactive].join(\" \")}>\n                            You'll have a set number of seconds to answer each question. Failing to answer correctly in\n                            the given time will lose you a life. Answering correctly will reset the timer.\n                            {countdown && <span> Select the number of seconds per question below:</span>}\n                        </p>\n\n                        {countdown && (\n                            <RangeSlider\n                                min={0} max={60}\n                                value={seconds}\n                                variant=\"primary\"\n                                disabled={timed}\n                                data-testid=\"seconds-slider\"\n                                onChange={this.onChangeCountDownSeconds}\n                             />\n                        )}\n                    </Col>\n                </Row>\n            </ScrollableContainer>\n        );\n    }\n\n    reset = () => this.setState({\n        timed: this.defaultState.timed,\n        countdown: this.defaultState.countdown,\n        seconds: this.defaultState.secondsPerQuestion\n    });\n\n    private onChangeTimed = () => {\n        const { timed } = this.state;\n        if (timed) {\n            this.setState({ timed: false });\n        } else {\n            this.setState({ timed: true, countdown: false });\n        }\n    }\n\n    private onChangeCountDown = () => {\n        const { countdown } = this.state;\n        if (countdown) {\n            this.setState({ countdown: false });\n        } else {\n            this.setState({ countdown: true, timed: false });\n        }\n    }\n\n    private onChangeCountDownSeconds = (e: ChangeEvent, value: number) => {\n        this.setState({ seconds: value })\n    }\n}\n\nexport default TimeSettingsForm;\n","import React, { Component } from \"react\";\nimport QuestionSettingsForm from \"./QuestionSettingsForm\";\nimport HintSettingsForm from \"./HintSettingsForm\";\nimport LifeSettingsForm from \"./LifeSettingsForm\";\nimport TimeSettingsForm from \"./TimeSettingsForm\";\nimport GameSettings, { GameSettingsBuilder } from \"../../../types/session/settings/game/GameSettings\";\nimport { Button, Card, Col, Form, Nav, Tab } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faCheck, faHeartbeat, faLightbulb, faQuestionCircle, faStopwatch, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport QuestionSettings from \"../../../types/session/settings/game/QuestionSettings\";\nimport HintSettings from \"../../../types/session/settings/game/HintSettings\";\nimport LifeSettings from \"../../../types/session/settings/game/LifeSettings\";\nimport TimeSettings from \"../../../types/session/settings/game/TimeSettings\";\nimport styles from \"../../../styles/sass/components/settings/game/GameSettingsMenu.module.scss\";\n\nexport interface GameSettingsMenuProps {\n    onQuit: () => void;\n    onReset: () => void;\n    onSelect: (settings: GameSettings) => void;\n}\n\ninterface GameSettingsMenuState {\n    questionSettings: QuestionSettings;\n    hintSettings: HintSettings;\n    lifeSettings: LifeSettings;\n    timeSettings: TimeSettings;\n}\n\nclass GameSettingsMenu extends Component<GameSettingsMenuProps, GameSettingsMenuState> {\n    private readonly display: React.RefObject<QuestionSettingsForm>;\n    private readonly hints: React.RefObject<HintSettingsForm>;\n    private readonly lives: React.RefObject<LifeSettingsForm>;\n    private readonly time: React.RefObject<TimeSettingsForm>;\n\n    constructor(props: GameSettingsMenuProps | Readonly<GameSettingsMenuProps>) {\n        super(props);\n\n        this.display = React.createRef();\n        this.hints = React.createRef();\n        this.lives = React.createRef();\n        this.time = React.createRef();\n\n        const defaults = new GameSettingsBuilder().build();\n\n        this.state = {\n            questionSettings: defaults.question,\n            hintSettings: defaults.hints,\n            lifeSettings: defaults.lives,\n            timeSettings: defaults.time,\n        }\n    }\n\n    render() {\n        return (\n            <div className={styles.wrapper}>\n                <Card bg=\"dark\" className=\"mb-2\">\n                    <Tab.Container defaultActiveKey=\"question\">\n                        <Card.Header>\n                            <Nav variant=\"pills\" fill>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"question\">\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faQuestionCircle}\n                                            title=\"Question Settings\"\n                                            className={[styles.questionIcon, styles.navIcon].join(\" \")}\n                                        />\n                                    </Nav.Link>\n                                </Nav.Item>\n\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"hints\">\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faLightbulb}\n                                            title=\"Hint Settings\"\n                                            className={[styles.hintsIcon, styles.navIcon].join(\" \")}\n                                        />\n                                    </Nav.Link>\n                                </Nav.Item>\n\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"lives\">\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faHeartbeat}\n                                            title=\"Life Settings\"\n                                            className={[styles.livesIcon, styles.navIcon].join(\" \")}\n                                        />\n                                    </Nav.Link>\n                                </Nav.Item>\n\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"time\">\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faStopwatch}\n                                            title=\"Time Settings\"\n                                            className={[styles.timeIcon, styles.navIcon].join(\" \")}\n                                        />\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Card.Header>\n\n                        <Card.Body>\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"question\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faQuestionCircle}\n                                            className={styles.questionIcon}\n                                        />\n                                        <span className={styles.titleText}>Question Settings</span>\n                                    </Card.Title>\n\n                                    <QuestionSettingsForm\n                                        ref={this.display}\n                                        onChange={(settings) => this.setState({ questionSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"hints\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faLightbulb}\n                                            className={styles.hintsIcon}\n                                        />\n                                        <span className={styles.titleText}>Hint Settings</span>\n                                    </Card.Title>\n\n                                    <HintSettingsForm\n                                        ref={this.hints}\n                                        onChange={(settings) => this.setState({ hintSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"lives\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faHeartbeat}\n                                            className={styles.livesIcon}\n                                        />\n                                        <span className={styles.titleText}>Life Settings</span>\n                                    </Card.Title>\n\n                                    <LifeSettingsForm\n                                        ref={this.lives}\n                                        onChange={(settings) => this.setState({ lifeSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"time\" className={styles.pane}>\n                                    <Card.Title className={styles.title}>\n                                        <FontAwesomeIcon\n                                            fixedWidth\n                                            icon={faStopwatch}\n                                            className={styles.timeIcon}\n                                        />\n                                        <span className={styles.titleText}>Time Settings</span>\n                                    </Card.Title>\n\n                                    <TimeSettingsForm\n                                        ref={this.time}\n                                        onChange={(settings) => this.setState({ timeSettings: settings })}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Card.Body>\n\n                        <Card.Footer className={styles.footer}>\n                            <Form.Row>\n                                <Col className={styles.noGuttersLeft}>\n                                    <Button variant=\"danger\" block onClick={() => this.props.onQuit()} className={styles.button}>\n                                        <FontAwesomeIcon icon={faArrowLeft} />\n                                        <span className={styles.buttonText}> Back</span>\n                                    </Button>\n                                </Col>\n\n                                <Col className={[styles.noGuttersLeft, styles.noGuttersRight].join(\" \")}>\n                                    <Button variant=\"warning\" block onClick={this.onReset} className={styles.button}>\n                                        <FontAwesomeIcon icon={faUndo}/>\n                                        <span className={styles.buttonText}> Reset</span>\n                                    </Button>\n                                </Col>\n\n                                <Col className={styles.noGuttersRight}>\n                                    <Button variant=\"success\" block onClick={this.onConfirmation} className={styles.button}>\n                                        <FontAwesomeIcon icon={faCheck}/>\n                                        <span className={styles.buttonText}> Confirm</span>\n                                    </Button>\n                                </Col>\n                            </Form.Row>\n                        </Card.Footer>\n                    </Tab.Container>\n                </Card>\n            </div>\n        );\n    }\n\n    onConfirmation = () => {\n        const { questionSettings, hintSettings, lifeSettings, timeSettings } = this.state;\n\n        const settings = new GameSettingsBuilder()\n            .withQuestionSettings(questionSettings)\n            .withHintSettings(hintSettings)\n            .withLifeSettings(lifeSettings)\n            .withTimeSettings(timeSettings)\n            .build();\n\n        this.props.onSelect(settings);\n    }\n\n    onReset = () => {\n        this.display.current?.reset();\n        this.hints.current?.reset();\n        this.lives.current?.reset();\n        this.time.current?.reset();\n        this.props.onReset();\n    }\n}\n\nexport default GameSettingsMenu;\n","import React, { Component } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { Environment } from \"../../utility/Environment\";\nimport MenuDescription from \"../ui/MenuDescription\";\nimport LearnTopicButton from \"./LearnTopicButton\";\nimport StartButton from \"../ui/buttons/StartButton\";\nimport Arrays from \"../../utility/Arrays\";\nimport { faCircleNotch, faCog, faCogs, faDatabase, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Search from \"./Search\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport LearningDataRepository from \"../../repository/LearningDataRepository\";\nimport Topic from \"../../types/Topic\";\nimport GameSettings from \"../../types/session/settings/game/GameSettings\";\nimport SessionMode from \"../../types/session/SessionMode\";\nimport { AppMode } from \"../../types/AppMode\";\nimport { MenuModes } from \"../../types/MenuModes\";\nimport { SessionSettings } from \"../../types/session/settings/SessionSettings\";\nimport LearnSettings from \"../../types/session/settings/LearnSettings\";\nimport GameSettingsMenu from \"../settings/game/GameSettingsMenu\";\nimport styles from \"../../styles/sass/components/learn/ModeSelectionMenu.module.scss\";\nimport DataSettings from \"../../types/session/settings/data/DataSettings\";\nimport { DataSettingsMenuProps } from \"../settings/data/DataSettingsMenu\";\n\nexport interface ModeSelectionMenuProps {\n    topic: Topic;\n    appMode: AppMode;\n    onStart: (settings: SessionSettings) => void;\n}\n\ninterface ModeSelectionMenuState {\n    selected: SessionMode;\n    customGameSettings?: GameSettings;\n    customDataSettings?: DataSettings;\n    isConfiguringGame: boolean;\n    isConfiguringData: boolean;\n    searching: boolean;\n    searchData: Learnable[];\n    loading: boolean;\n}\n\nclass ModeSelectionMenu extends Component<ModeSelectionMenuProps, ModeSelectionMenuState> {\n\n    constructor(props: Readonly<ModeSelectionMenuProps> | ModeSelectionMenuProps) {\n        super(props);\n        this.state = {\n            selected: this.getMenuModes().getModes()[0],\n            searching: false,\n            isConfiguringGame: false,\n            isConfiguringData: false,\n            customGameSettings: undefined,\n            customDataSettings: undefined,\n            loading: false,\n            searchData: []\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ModeSelectionMenuProps>, prevState: Readonly<ModeSelectionMenuState>) {\n        if (prevProps.appMode !== this.props.appMode) {\n            this.setState({ selected: this.getMenuModes().getModes()[0] });\n        }\n    }\n\n    render() {\n        const { selected, searching, isConfiguringGame, isConfiguringData,\n            customGameSettings, customDataSettings, searchData, loading\n        } = this.state;\n        const { appMode, topic } = this.props;\n\n        const DataSettingsMenu = topic.menu as React.FunctionComponent<DataSettingsMenuProps<any>>;\n        const renderMenu = !searching && !isConfiguringGame && !isConfiguringData;\n        const modes = this.getMenuModes();\n\n        return (\n            <div className={styles.wrapper} data-testid={\"learn-\" + modes.getTopic().toLowerCase() + \"-menu\"}>\n                {renderMenu && (\n                    <Row>\n                        <Col>\n                            <MenuDescription text={this.getDescription()} />\n                        </Col>\n                    </Row>\n                )}\n\n                {renderMenu && Arrays.chunked(modes.getModes(), 2).map((pair: SessionMode[], j: number) => {\n                    return <Row key={\"row-\" + j}>{\n                        pair.map((mode: SessionMode, i: number) => {\n                            const isLeft = i % 2 === 0 || i === 0;\n                            const columnClass = isLeft ? styles.leftColumn : styles.rightColumn;\n                            return (<Col className={columnClass} key={\"col-\" + i}>\n                                <LearnTopicButton\n                                    icon={mode.icon}\n                                    iconColour={mode.colour}\n                                    type={mode}\n                                    selected={selected}\n                                    key={mode.displayName + \"-button\"}\n                                    onClick={this.onSelect}\n                                />\n                            </Col>);\n                        })\n                    }</Row>\n                })}\n\n                {renderMenu && (\n                    <Row>\n                        <Col className=\"pr-1\">\n                            <StartButton onClick={this.onStart} />\n                        </Col>\n\n                        <Col xs={2} className=\"pl-2 pr-2\">\n                            <Button\n                                disabled={!topic.menu}\n                                className={styles.settings}\n                                variant={!!customDataSettings ? \"primary\" : \"info\"}\n                                onClick={() => this.setState({ isConfiguringData: true})}\n                                title={!topic.menu ? \"This topic does not have data settings\" : \"Data Settings\"}\n                            >\n                                <FontAwesomeIcon\n                                    fixedWidth\n                                    icon={faDatabase}\n                                    className={styles.spin}\n                                    spin={!!customDataSettings}\n                                />\n                            </Button>\n                        </Col>\n\n                        {appMode === AppMode.LEARN && (\n                            <Col xs={2} className=\"pl-1\">\n                                <Button className={styles.search} title=\"Search\" onClick={this.startSearch}>\n                                    <FontAwesomeIcon icon={loading ? faCircleNotch : faSearch} spin={loading} fixedWidth/>\n                                </Button>\n                            </Col>\n                        )}\n\n                        {appMode === AppMode.PLAY && (\n                            <Col xs={2} className=\"pl-1\">\n                                <Button\n                                    title=\"Game Settings\"\n                                    className={styles.settings}\n                                    variant={!!customGameSettings ? \"primary\" : \"secondary\"}\n                                    onClick={() => this.setState({ isConfiguringGame: true})}\n                                >\n                                    <FontAwesomeIcon\n                                        fixedWidth\n                                        className={styles.spin}\n                                        spin={!!customGameSettings}\n                                        icon={!!customGameSettings ? faCog : faCogs}\n                                    />\n                                </Button>\n                            </Col>\n                        )}\n                    </Row>\n                )}\n\n                {searching && (\n                    <Search\n                        data={searchData}\n                        tags={Arrays.distinct(searchData.flatMap(it => it.getTags()))}\n                    />\n                )}\n\n                {isConfiguringGame && (\n                    <GameSettingsMenu\n                        onQuit={() => this.setState({ isConfiguringGame: false })}\n                        onReset={() => this.setState({ customGameSettings: undefined })}\n                        onSelect={settings => this.setState({ customGameSettings: settings, isConfiguringGame: false })}\n                    />\n                )}\n\n                {isConfiguringData &&\n                    <DataSettingsMenu\n                        title={topic.name}\n                        icon={topic.icon}\n                        onQuit={() => this.setState({ isConfiguringData: false })}\n                        onReset={() => this.setState({ customDataSettings: undefined })}\n                        onConfirm={settings => this.setState({ customDataSettings: settings, isConfiguringData: false })}\n                    />\n                }\n            </div>\n        );\n    }\n\n    private onStart = () => {\n        const { selected, customGameSettings, customDataSettings } = this.state;\n        const { onStart, appMode } = this.props;\n\n        const dataSettings = customDataSettings ?? selected.dataSettings;\n\n        switch (appMode) {\n            case AppMode.PLAY: {\n                const gameSettings = customGameSettings ?? selected.modeSettings as GameSettings;\n                onStart(SessionSettings.forGame(dataSettings, gameSettings));\n                break;\n            }\n            case AppMode.LEARN: {\n                onStart(SessionSettings.forLearning(dataSettings, selected.modeSettings as LearnSettings));\n                break;\n            }\n        }\n    }\n\n    private onSelect = (mode: SessionMode) => {\n        this.setState({ selected: mode });\n    }\n\n    private startSearch = () => {\n        this.setState({ loading: true }, () => {\n            new LearningDataRepository().read(this.state.selected.dataSettings).then(data => {\n                this.setState({ loading: false, searchData: data, searching: true });\n            }).catch(e => this.setState({ loading: false }));\n        });\n    }\n\n    private getDescription = () => {\n        const { appMode } = this.props;\n        const { selected } = this.state;\n        const prefix = appMode === AppMode.LEARN ? \"LEARN_\" : \"PLAY_\";\n        return Environment.variable(prefix + this.getMenuModes().getTopic() + \"_\" + selected.displayName + \"_DESC\");\n    }\n\n    private getMenuModes = (): MenuModes<any> => {\n        const { topic, appMode } = this.props;\n        return appMode === AppMode.LEARN ? topic.modes : topic.playModes;\n    }\n}\n\nexport default ModeSelectionMenu;\n","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Topic from \"../../types/Topic\";\nimport TopicSelectionMenu from \"./TopicSelectionMenu\";\nimport { AppMode } from \"../../types/AppMode\";\nimport ModeSelectionMenu from \"../learn/ModeSelectionMenu\";\nimport { SessionSettings } from \"../../types/session/settings/SessionSettings\";\nimport styles from \"../../styles/sass/components/layout/SettingsMenu.module.scss\";\n\nexport interface GameSettingsMenuProps {\n    mode: AppMode;\n    onStart: (settings: SessionSettings) => void;\n}\n\ninterface GameSettingsMenuState {\n    topic: Topic;\n}\n\nclass SettingsMenu extends Component<GameSettingsMenuProps, GameSettingsMenuState> {\n\n    private readonly modeMenu = React.createRef<HTMLDivElement>();\n\n    constructor(props: Readonly<GameSettingsMenuProps> | GameSettingsMenuProps) {\n        super(props);\n        this.state = {\n            topic: Topic.KANA,\n        }\n    }\n\n    componentDidMount() {\n        this.modeMenu.current?.scrollIntoView();\n    }\n\n    componentDidUpdate(prevProps: Readonly<GameSettingsMenuProps>, prevState: Readonly<GameSettingsMenuState>) {\n        if (prevState.topic !== this.state.topic) {\n            this.modeMenu.current?.scrollIntoView();\n        }\n    }\n\n    render() {\n        const { mode } = this.props;\n        const { topic } = this.state;\n\n        return (\n            <div className={styles.wrapper} data-testid=\"game-settings-menu\">\n                <Container fluid className={styles.innerWrapper}>\n                    <Row className={styles.row}>\n                        <Col sm={12} lg={5} className={styles.topicSelectionMenuWrapper}>\n                            <TopicSelectionMenu\n                                appMode={mode}\n                                className={styles.topicMenu}\n                                onSelect={this.onSelectTopic}\n                            />\n                        </Col>\n\n                        <Col sm={12} lg={7} className={styles.gameMenuWrapper} ref={this.modeMenu}>\n                            <ModeSelectionMenu\n                                topic={topic}\n                                appMode={mode}\n                                key={topic.name}\n                                onStart={this.onSelectMode}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n\n    private onSelectMode = (settings: SessionSettings) => {\n        this.props.onStart(settings);\n    }\n\n    private onSelectTopic = (topic: Topic) => {\n        this.setState({ topic: topic });\n    }\n}\n\nexport default SettingsMenu;\n","import { v4 as UUID } from \"uuid\";\n\nexport default class SessionID {\n\n    private readonly _value: string;\n\n    constructor() {\n        this._value = UUID();\n    }\n\n    get value(): string {\n        return this._value;\n    }\n}","import { Component } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEraser } from \"@fortawesome/free-solid-svg-icons\";\nimport LearningSessionResult from \"../../types/learn/LearningSessionResult\";\nimport QuitButton from \"../ui/buttons/QuitButton\";\nimport styles from \"../../styles/sass/components/results/LearningResultScreen.module.scss\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport { PieChart, Pie, Cell } from \"recharts\";\n\nexport interface LearningResultScreenProps {\n    result: LearningSessionResult;\n    onDismiss: () => void;\n    onPractice: (mistakes: Learnable[]) => void;\n}\n\nclass LearningResultScreen extends Component<LearningResultScreenProps> {\n    render() {\n        const { result } = this.props;\n\n        const data = [\n            { value: result.remembered.length, colour: \"#4ecf46\" },\n            { value: result.forgotten.length, colour: \"#d73a3a\" }\n        ];\n\n        return (\n            <Container data-testid=\"learning-results-screen\" className={styles.wrapper}>\n                <Row className={styles.header}>\n                    <Col>\n                        <QuitButton onClick={this.props.onDismiss} className={styles.quit} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col className=\"text-center\" md={result.forgotten.length > 0 ? 6 : 12} xs={12}>\n                        <h1 className={styles.heading}>{this.getTitle()}</h1>\n                        {result.forgotten.length > 0 &&\n                            <Button onClick={this.onPractice} className={styles.mistakes}>\n                                <FontAwesomeIcon icon={faEraser} fixedWidth /> Practice Mistakes\n                            </Button>\n                        }\n                    </Col>\n\n                    <Col md={6} xs={12}>\n                        {result.forgotten.length > 0 && (\n                            <PieChart width={250} height={250}>\n                                <Pie\n                                    data={data}\n                                    dataKey=\"value\"\n                                    animationBegin={0}\n                                    innerRadius={35}\n                                >\n                                    {data.map((entry, i) => <Cell key={`cell-${i}`} fill={entry.colour}/>)}\n                                </Pie>\n                            </PieChart>\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    private getTitle = () => {\n        const { result } = this.props;\n        const rememberedQuantity = result.remembered.length;\n        const forgottenQuantity = result.forgotten.length;\n        if (forgottenQuantity === 0) {\n            return \"You remembered them all, good job!\";\n        }\n        return \"You remembered \" + rememberedQuantity + \"/\" + (rememberedQuantity + forgottenQuantity) + \"!\";\n    }\n\n    private onPractice = () => {\n        const { result, onPractice } = this.props;\n        onPractice(result.forgotten);\n    }\n\n}\n\nexport default LearningResultScreen;","import React, { Component } from \"react\";\nimport { Toast } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Arrays from \"../../utility/Arrays\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface MainErrorBoundaryState {\n    errors: Error[];\n    hasError: boolean;\n}\n\nclass MainErrorBoundary extends Component<any, MainErrorBoundaryState> {\n\n    constructor(props: Readonly<any> | any) {\n        super(props);\n        this.state = {\n            errors: [],\n            hasError: false\n        }\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: Error, info: React.ErrorInfo) {\n        const errors = this.state.errors;\n        errors.push(error);\n        this.setState({ errors: errors });\n    }\n\n    render() {\n        this.state.hasError && this.state.errors.map((error: Error) => {\n            return (\n                <Toast>\n                    <Toast.Header>\n                        <FontAwesomeIcon icon={faExclamationCircle} fixedWidth/>\n                        {this.getHeader()}\n                    </Toast.Header>\n                    <Toast.Body>\n                        {error.message}\n                    </Toast.Body>\n                </Toast>\n            );\n        })\n        return this.props.children;\n    }\n\n    private getHeader = (): string => {\n        const headers = [\"Oh no!\", \"Oops!\", \"Whoops!\", \"Oh dear!\", \"Something went wrong.\"];\n        return Arrays.getRandomElements(headers, 1)[0];\n    }\n}\n\nexport default MainErrorBoundary;","import React, { Component, ComponentClass, FunctionComponent } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { Learnable } from \"../../types/learn/Learnable\";\n\ntype CardFaceFront = FunctionComponent<CardFaceProps> | ComponentClass<any>;\ntype CardFaceBack= FunctionComponent<CardBackFaceProps> | ComponentClass<any>;\n\nexport interface CardProps {\n    front: CardFaceFront;\n    back: CardFaceBack;\n}\n\n//TODO: Can the MyComponentFlashCardFront and Back components have explicit sub-types like Kana and Learnable?\nexport interface CardFaceProps {\n    data: Learnable;\n    onClick: () => void;\n}\n\nexport interface CardBackFaceProps extends CardFaceProps {\n    showRomaji: boolean;\n}\n\nexport interface FlashCardProps extends CardProps {\n    data: Learnable;\n    showRomaji: boolean;\n    onFlip: (count: number) => void;\n}\n\ninterface FlashCardState {\n    flipped: boolean;\n    flips: number;\n}\n\nclass FlashCard extends Component<FlashCardProps, FlashCardState> {\n\n    constructor(props: FlashCardProps | Readonly<FlashCardProps>) {\n        super(props);\n        this.state = {\n            flipped: false,\n            flips: 0\n        }\n    }\n\n    render() {\n        const { flipped } = this.state;\n        const { data, front, back, showRomaji } = this.props;\n        const Front = front as React.FunctionComponent<CardFaceProps>;\n        const Back = back as React.FunctionComponent<CardBackFaceProps>;\n\n        return (\n            <ReactCardFlip isFlipped={flipped} infinite={true}>\n                <Front data={data} onClick={this.flip} />\n                <Back data={data} onClick={this.flip} showRomaji={showRomaji} />\n            </ReactCardFlip>\n        );\n    }\n\n    private flip = () => {\n        const { flipped, flips } = this.state;\n        const newFlipCount = flips + 1;\n        this.setState({ flipped: !flipped, flips: newFlipCount });\n        this.props.onFlip(newFlipCount);\n    }\n}\n\nexport default FlashCard;","import React, { Component } from \"react\";\nimport LearningSessionResult from \"../../types/learn/LearningSessionResult\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport ConfirmModal from \"../ui/ConfirmModal\";\nimport QuitButton from \"../ui/buttons/QuitButton\";\nimport SessionProgressBar from \"../ui/SessionProgressBar\";\nimport LearningFeedbackButton, { LearningFeedback } from \"../ui/buttons/LearningFeedbackButton\";\nimport FlashCard, { CardProps } from \"./FlashCard\";\nimport { faThumbsDown, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Arrays from \"../../utility/Arrays\";\nimport styles from \"../../styles/sass/components/learn/Learn.module.scss\";\n\nexport interface LearnProps {\n    data: Learnable[];\n    card: CardProps;\n    onFinish: (result: LearningSessionResult) => void;\n}\n\ninterface LearnState {\n    current: Learnable;\n    remaining: Learnable[];\n    remembered: Learnable[];\n    forgotten: Learnable[];\n    hasPeeked: boolean;\n    paused: boolean;\n    hasRemembered: boolean;\n    hasForgotten: boolean;\n    showRomaji: boolean;\n}\n\nclass Learn extends Component<LearnProps, LearnState> {\n\n    constructor(props: Readonly<LearnProps> | LearnProps) {\n        super(props);\n\n        const [first, remaining] = Arrays.getRandomObject(props.data);\n\n        this.state = {\n            current: first,\n            remaining: remaining,\n            hasPeeked: false,\n            hasRemembered: false,\n            hasForgotten: false,\n            remembered: [],\n            forgotten: [],\n            paused: false,\n            showRomaji: false\n        }\n    }\n\n    render() {\n        const { current, remaining, hasPeeked, hasRemembered, hasForgotten, paused, showRomaji, remembered, forgotten } = this.state;\n        const { data, card } = this.props;\n        const hasCardsRemaining = remaining.length > 0;\n\n        return (\n            <div className={styles.wrapper} data-testid=\"learn\">\n                <Container className={styles.innerWrapper}>\n                    {paused && <ConfirmModal\n                        title={\"Are you sure you want to quit?\"}\n                        body={\"You'll lose your progress, but you'll see the results of your session thus far.\"}\n                        onConfirm={this.onFinish}\n                        onDismiss={() => this.setState({ paused: false })}\n                    />}\n\n                    <Row className={styles.header}>\n                        <Col md={4} xs={2} className={styles.col}>\n                            <QuitButton onClick={this.onQuit} className={styles.quit} />\n                        </Col>\n\n                        <Col md={2} xs={3} className={styles.col}>\n                            <FontAwesomeIcon className={styles.forgottenIcon} icon={faThumbsDown} fixedWidth />\n                            <span className={styles.forgotten} title=\"Forgotten\">{forgotten.length}</span>\n                        </Col>\n\n                        <Col md={2} xs={3} className={styles.col}>\n                            <FontAwesomeIcon className={styles.rememberedIcon} icon={faThumbsUp} fixedWidth />\n                            <span className={styles.remembered} title=\"Remembered\">{remembered.length}</span>\n                        </Col>\n\n                        <Col xs={4} className={styles.col}>\n                            <Button\n                                className={styles.showRomaji}\n                                variant=\"warning\"\n                                onClick={() => this.setState({ showRomaji: !showRomaji })}\n                            >\n                                {showRomaji ? \"Hide\" : \"Show\"} Rōmaji\n                            </Button>\n                        </Col>\n                    </Row>\n\n                    <Row className={styles.header}>\n                        <Col className={styles.col}>\n                            <SessionProgressBar\n                                quantity={data.length}\n                                className={styles.progress}\n                                remaining={remaining.length}\n                                inProgress={hasCardsRemaining && !paused}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row className={styles.cardWrapper}>\n                        <Col className={styles.col}>\n                            <FlashCard\n                                data={current}\n                                key={current.getMeanings()[0]}\n                                onFlip={this.onFlip}\n                                front={card.front}\n                                back={card.back}\n                                showRomaji={showRomaji}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row className={styles.buttonWrapper}>\n                        <Col xs={6} className={[styles.buttonColumnLeft, styles.col].join(\" \")}>\n                            <LearningFeedbackButton\n                                disabled={!hasPeeked}\n                                active={hasForgotten}\n                                onClick={this.onForgot}\n                                type={LearningFeedback.FORGOT}\n                                className={styles.rememberedButton}\n                            />\n                        </Col>\n                        <Col xs={6} className={[styles.buttonColumnRight, styles.col].join(\" \")}>\n                            <LearningFeedbackButton\n                                disabled={!hasPeeked}\n                                active={hasRemembered}\n                                onClick={this.onMemorised}\n                                type={LearningFeedback.REMEMBERED}\n                                className={styles.forgottenButton}\n                            />\n                        </Col>\n                        <Col xs={12} className={styles.col}>\n                            <Button\n                                className={styles.next}\n                                onClick={hasCardsRemaining ? this.onNext : this.onFinish}\n                                disabled={!hasPeeked || (!hasForgotten && !hasRemembered)}\n                                variant={!hasCardsRemaining && hasPeeked ? \"info\" : \"primary\"}\n                            >\n                                {!hasCardsRemaining && hasPeeked ? \"Finish\" : \"Next\"}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n\n    private onNext = () => {\n        const { remaining, hasRemembered, hasForgotten, remembered, forgotten, current } = this.state;\n\n        const [next, nextRemaining] = Arrays.getRandomObject(remaining);\n        this.setState({\n            current: next,\n            remaining: nextRemaining,\n            hasPeeked: false,\n            hasRemembered: false,\n            hasForgotten: false,\n        });\n\n        if (hasRemembered) this.setState({ remembered: remembered.concat(current) });\n        if (hasForgotten) this.setState({ forgotten: forgotten.concat(current) });\n    }\n\n    private onFinish = () => {\n        const { remembered, forgotten, hasRemembered, hasForgotten, current } = this.state;\n        const newRemembered = hasRemembered ? remembered.concat(current) : remembered;\n        const newForgotten = hasForgotten ? forgotten.concat(current) : forgotten;\n        this.props.onFinish({ remembered: newRemembered, forgotten: newForgotten });\n    }\n\n    private onQuit = () => this.setState({ paused: true });\n\n    private onFlip = (flips: number) => this.setState({ hasPeeked: flips > 0 });\n\n    private onMemorised = () => this.setState({ hasRemembered: true, hasForgotten: false });\n\n    private onForgot = () => this.setState({ hasForgotten: true, hasRemembered: false });\n}\n\nexport default Learn;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/user/UserForm.module.scss\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { useUserDispatch } from \"../../hooks\";\nimport { setUser } from \"../../slices/UserSlice\";\n\nexport interface LoginFormProps {\n    onSuccess: () => void;\n}\n\nconst LoginForm = (props: LoginFormProps) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\")\n    const [usernameValid, setUsernameValid] = useState(false);\n    const [passwordValid, setPasswordValid] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const usernameField = useRef<HTMLInputElement>(null);\n    const dispatchUser = useUserDispatch();\n\n    const formValid = usernameValid && passwordValid;\n\n    useEffect(() =>  usernameField?.current?.focus(), []);\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            if (formValid && e.key === 'Enter') {\n                login();\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        }\n    }, [username, password]);\n\n    const login = () => {\n        setLoading(true);\n        //TODO: Hit REST API and get JWT token\n        dispatchUser(setUser({ username: username, nickname: \"\" }));\n        setLoading(false);\n        props.onSuccess();\n    }\n\n    const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const username = e.target.value;\n        setUsername(username);\n        setUsernameValid(username.length > 0);\n    }\n\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const password = e.target.value;\n        setPassword(password);\n        setPasswordValid(password.length > 0);\n    }\n\n    return (\n        <Modal.Body className={styles.body}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                    required\n                    value={username}\n                    ref={usernameField}\n                    placeholder=\"Username\"\n                    isValid={usernameValid}\n                    isInvalid={!usernameValid}\n                    onChange={handleUsernameChange}\n                />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                    required\n                    type=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    isValid={passwordValid}\n                    isInvalid={!passwordValid}\n                    onChange={handlePasswordChange}\n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Button className={styles.login} variant=\"success\" onClick={login} disabled={!formValid}>\n                    {loading && <FontAwesomeIcon icon={faSpinner} spin fixedWidth/>}\n                    {' Login'}\n                </Button>\n            </Form.Group>\n        </Modal.Body>\n    );\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/user/UserForm.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface RegistrationFormProps {\n    onSuccess: () => void;\n}\n\ninterface RegistrationFormState {\n    email: string;\n    username: string;\n    nickname: string;\n    password: string;\n    secondPassword: string;\n    validEmail: boolean;\n    validUsername: boolean;\n    validNickname: boolean;\n    validPassword: boolean;\n    validSecondPassword: boolean;\n    loading: boolean;\n    emailFocused: boolean;\n}\n\nclass RegistrationForm extends Component<RegistrationFormProps, RegistrationFormState> {\n\n    constructor(props: Readonly<RegistrationFormProps> | RegistrationFormProps) {\n        super(props);\n        this.state = {\n            email: \"\",\n            username: \"\",\n            nickname: \"\",\n            password: \"\",\n            secondPassword: \"\",\n            validEmail: false,\n            validUsername: false,\n            validNickname: true,\n            validPassword: false,\n            validSecondPassword: false,\n            loading: false,\n            emailFocused: true\n        }\n    }\n\n    render() {\n        const { onSuccess } = this.props;\n        const { email, username, nickname, password, secondPassword } = this.state;\n        const { validEmail, validUsername, validNickname, validPassword, validSecondPassword, loading, emailFocused } = this.state;\n\n        return (\n            <Modal.Body className={styles.body}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address*</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        value={email}\n                        isValid={validEmail}\n                        isInvalid={!validEmail}\n                        placeholder=\"Enter email\"\n                        onChange={this.handleEmailChange}\n                        onFocus={() => this.setState({ emailFocused: true })}\n                        onBlur={() => this.setState({ emailFocused: false })}\n                    />\n                    {emailFocused && <Form.Text className=\"text-muted\">\n                        Your email address will not be shared with anyone else.\n                    </Form.Text>}\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Username*</Form.Label>\n                    <Form.Control\n                        required\n                        value={username}\n                        placeholder=\"Username\"\n                        isValid={validUsername}\n                        isInvalid={!validUsername}\n                        onChange={this.handleUsernameChange}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Nickname</Form.Label>\n                    <Form.Control\n                        value={nickname}\n                        placeholder=\"Nickname\"\n                        isValid={validNickname}\n                        isInvalid={!validNickname}\n                        onChange={this.handleNicknameChange}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password*</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        value={password}\n                        placeholder=\"Password\"\n                        isValid={validPassword}\n                        isInvalid={!validPassword}\n                        onChange={this.handlePasswordChange}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Re-Enter Password*</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        value={secondPassword}\n                        placeholder=\"Confirm Password\"\n                        isValid={validSecondPassword}\n                        isInvalid={!validSecondPassword}\n                        onChange={this.handleSecondPasswordChange}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Button className={styles.button} variant=\"info\" disabled={!this.isFormValid()} onClick={onSuccess}>\n                        {loading && <FontAwesomeIcon icon={faSpinner} spin fixedWidth />}\n                        {' Register'}\n                    </Button>\n                </Form.Group>\n            </Modal.Body>\n        )\n    }\n\n    private isFormValid = (): boolean => {\n        const { validEmail, validUsername, validNickname, validPassword, validSecondPassword } = this.state;\n        return validEmail && validUsername && validNickname && validPassword && validSecondPassword;\n    }\n\n    private handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const email = e.target.value;\n        const isValid = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email);\n        this.setState({ email: email, validEmail: isValid });\n    }\n\n    private handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const username = e.target.value;\n        const isValid = username.length >= 3 && username.length <= 15;\n        this.setState({ username: username, validUsername: isValid });\n    }\n\n    private handleNicknameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const nickname = e.target.value;\n        const isValid = nickname.length >= 3 && nickname.length <= 12;\n        this.setState({ nickname: nickname, validNickname: isValid });\n    }\n\n    private handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const password = e.target.value;\n        const isValid = this.isPasswordValid(password);\n        this.setState({ password: password, validPassword: isValid });\n    }\n\n    private handleSecondPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const secondPassword = e.target.value;\n        const isValid = this.isPasswordValid(secondPassword);\n        this.setState({ secondPassword: secondPassword, validSecondPassword: isValid });\n    }\n\n    /**\n     * 1 x Lowercase Letter, 1 x Uppercase Letter, 1 x Digit, 1 x Special Character, Length >= 8 and <= 36\n     */\n    private isPasswordValid = (value: string): boolean => {\n        return /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,36}$)/.test(value);\n    }\n}\n\nexport default RegistrationForm;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/user/UserForm.module.scss\";\nimport { faUser, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport LoginForm from \"./LoginForm\";\nimport RegistrationForm from \"./RegistrationForm\";\n\nexport interface UserFormProps {\n    show: boolean;\n    location: string;\n    onClose: () => void;\n}\n\ninterface UserFormState {\n    login: boolean;\n}\n\nclass UserForm extends Component<UserFormProps, UserFormState> {\n\n    constructor(props: Readonly<UserFormProps> | UserFormProps) {\n        super(props);\n        this.state = {\n            login: true,\n        }\n    }\n\n    render() {\n        const { show, onClose } = this.props;\n        const { login } = this.state;\n\n        return (\n            <Modal contentClassName={styles.modal} centered backdrop=\"static\" onHide={onClose} show={show} data-testid=\"user-modal\">\n                <Modal.Header className={styles.header} closeButton onHide={onClose}>\n                    <Modal.Title>\n                        <FontAwesomeIcon icon={login ? faUser : faUserPlus} fixedWidth />\n                        {login ? \"Login\" : \" Register\"}\n                    </Modal.Title>\n                </Modal.Header>\n\n                {login ? <LoginForm onSuccess={onClose}/> : <RegistrationForm onSuccess={onClose} /> }\n\n                <Modal.Footer className={styles.footer}>\n                    <p className={styles.footerText} onClick={() => this.setState({ login: !login })}>\n                        {login ? \"I don't have an account\" : \"I already have an account\"}\n                    </p>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default UserForm;\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './slices/UserSlice'\nimport fontReducer from './slices/FontSlice'\n\nexport const store = configureStore({\n    reducer: {\n        user: userReducer,\n        font: fontReducer\n    }\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import { Component } from \"react\";\nimport MemoryGame from \"../game/MemoryGame\";\nimport GameResult from \"../../types/game/GameResult\";\nimport GameResultScreen from \"../results/GameResultScreen\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport ControlsMenu from \"../layout/ControlsMenu\";\nimport SettingsMenu  from \"../layout/SettingsMenu\";\nimport { AppMode, fromString } from \"../../types/AppMode\";\nimport SessionID from \"../../types/session/SessionID\";\nimport LearningSessionResult from \"../../types/learn/LearningSessionResult\";\nimport LearningResultScreen from \"../results/LearningResultScreen\";\nimport Arrays from \"../../utility/Arrays\";\nimport MainErrorBoundary from \"../error/MainErrorBoundary\";\nimport { Learnable } from \"../../types/learn/Learnable\";\nimport Learn from \"../learn/Learn\";\nimport LearningDataRepository from \"../../repository/LearningDataRepository\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { StaticContext } from \"react-router\";\nimport styles from \"../../styles/sass/components/pages/MainMenuPage.module.scss\";\nimport { SessionSettings } from \"../../types/session/settings/SessionSettings\";\nimport GameSettings from \"../../types/session/settings/game/GameSettings\";\nimport DataSettings  from \"../../types/session/settings/data/DataSettings\";\nimport LearnSettings from \"../../types/session/settings/LearnSettings\";\nimport UserForm from \"../user/UserForm\";\nimport { store } from \"../../store\";\nimport { Provider } from \"react-redux\";\n\ninterface MainMenuPageState {\n    loading: boolean;\n    gameConfig?: GameSettings;\n    learnConfig?: LearnSettings;\n    dataConfig?: DataSettings;\n    inResultsScreen: boolean;\n    gameResult?: GameResult;\n    learningResult?: LearningSessionResult;\n    sessionKey: SessionID,\n    mode: AppMode;\n    data: Learnable[];\n    inLoginModal: boolean;\n}\n\ninterface PageParameters {\n    mode: string;\n}\n\nclass MainMenuPage extends Component<RouteComponentProps<PageParameters>, MainMenuPageState> {\n\n    constructor(props: RouteComponentProps<PageParameters, StaticContext, unknown> | Readonly<RouteComponentProps<PageParameters, StaticContext, unknown>>) {\n        super(props);\n        this.state = {\n            loading: false,\n            gameConfig: undefined,\n            learnConfig: undefined,\n            dataConfig: undefined,\n            inResultsScreen: false,\n            gameResult: undefined,\n            learningResult: undefined,\n            sessionKey: new SessionID(),\n            mode: AppMode.PLAY,\n            data: [],\n            inLoginModal: false,\n        }\n    }\n\n    componentDidMount() {\n        const navigationMode = this.props.match.params.mode;\n        this.setState({ mode: fromString(navigationMode) });\n    }\n\n    render() {\n        const {\n            loading, gameConfig, learnConfig, dataConfig, inResultsScreen, gameResult, learningResult, mode,\n            sessionKey, data, inLoginModal\n        } = this.state;\n\n        const isInMenu = !gameConfig && !learnConfig && !inResultsScreen && !learningResult && !loading;\n\n        return (\n            <div className={styles.wrapper}>\n                <Provider store={store}>\n                    <MainErrorBoundary>\n                        <LoadingSpinner active={loading}/>\n\n                        <ControlsMenu\n                            active={isInMenu}\n                            startingMode={mode}\n                            onChangeAppMode={this.handleChangeAppMode}\n                            onLaunchLoginModal={() => this.setState({ inLoginModal: true })}\n                        />\n\n                        {isInMenu &&\n                            <SettingsMenu\n                                onStart={this.onStartModeSelection}\n                                mode={mode}\n                            />\n                        }\n\n                        {gameConfig && !inResultsScreen && data.length > 0 &&\n                            <MemoryGame\n                                key={sessionKey.value}\n                                sessionKey={sessionKey.value}\n                                data={data}\n                                settings={gameConfig}\n                                onFinish={this.onGameFinish}\n                            />\n                        }\n\n                        {inResultsScreen && gameResult &&\n                            <GameResultScreen result={gameResult} onClose={this.onGameResultMenuClose}/>\n                        }\n\n                        {learnConfig && !inResultsScreen && data.length > 0 &&\n                            <Learn\n                                key={sessionKey.value}\n                                data={data}\n                                onFinish={this.onLearningFinish}\n                                card={dataConfig?.topic.cards!}\n                            />\n                        }\n\n                        {learningResult && inResultsScreen &&\n                            <LearningResultScreen\n                                result={learningResult}\n                                onDismiss={this.onLearningResultMenuClose}\n                                onPractice={this.onPracticeStart}\n                            />\n                        }\n\n                        {inLoginModal && (\n                            <UserForm\n                                location={\"\"}\n                                show={inLoginModal}\n                                onClose={() => this.setState({ inLoginModal: false })}\n                            />\n                        )}\n                    </MainErrorBoundary>\n                </Provider>\n            </div>\n        );\n    }\n\n    private onStartModeSelection = (settings: SessionSettings) => {\n        this.setState({\n            gameConfig: settings.gameSettings,\n            learnConfig: settings.learnSettings,\n            dataConfig: settings.dataSettings,\n            loading: true\n        }, () => {\n            new LearningDataRepository()\n                .read(settings.dataSettings)\n                .then(data => this.setState({ data: data, loading: false }));\n        });\n    }\n\n    private onGameResultMenuClose = () => this.setState({ inResultsScreen: false, gameResult: undefined });\n\n    private onLearningResultMenuClose = () => this.setState({\n        learningResult: undefined,\n        learnConfig: undefined,\n        inResultsScreen: false,\n        data: []\n    });\n\n    private onGameFinish = (result: GameResult) => this.setState({\n        inResultsScreen: true,\n        gameResult: result,\n        gameConfig: undefined,\n        sessionKey: new SessionID()\n    });\n\n    private onLearningFinish = (result: LearningSessionResult) => {\n        if (result.forgotten.length + result.remembered.length > 0) {\n            this.setState({ learningResult: result, inResultsScreen: true });\n        } else {\n            this.onLearningResultMenuClose();\n        }\n        this.setState({ sessionKey: new SessionID() });\n    }\n\n    private onPracticeStart = (data: Learnable[]) => {\n        this.onGameResultMenuClose();\n        this.setState({ data: Arrays.copy(data) });\n    }\n\n    private handleChangeAppMode = (mode: AppMode) => this.setState({ mode: mode });\n}\n\nexport default MainMenuPage;\n","import { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"../../styles/sass/components/layout/KanaTypeIndicator.module.scss\";\n\nexport interface KanaTypeIndicatorProps {\n    title: string;\n    className?: string;\n}\n\nconst KanaTypeIndicator = (props: KanaTypeIndicatorProps) => {\n    return (\n        <FontAwesomeIcon\n            icon={faCircle}\n            size=\"xs\"\n            className={props.className + \" \" + styles.icon}\n            title={props.title}\n        />\n    );\n}\n\nexport default KanaTypeIndicator;","import { Component } from \"react\";\nimport { Kana } from \"../../types/kana/Kana\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/layout/KanaTile.module.scss\";\nimport KanaType from \"../../types/kana/KanaType\";\nimport KanaTypeIndicator from \"./KanaTypeIndicator\";\nimport KanaDisplay from \"../ui/display/KanaDisplay\";\n\nexport interface KanaTileProps {\n    kana: Kana;\n}\n\nclass KanaTile extends Component<KanaTileProps> {\n    render() {\n        const { kana } = this.props;\n\n        return (\n            <Container className={styles.wrapper}>\n                <Row className={styles.typeWrapper}>\n                    <Col xs={12}>\n                        <KanaTypeIndicator\n                            className={kana.type === KanaType.HIRAGANA ? styles.hiragana : styles.katakana}\n                            title={kana.type}\n                        />\n                        {kana.isDiagraph() && <KanaTypeIndicator className={styles.diagraph} title=\"Diagraph\" />}\n                        {kana.isDiacritical && <KanaTypeIndicator className={styles.diacritical} title=\"Diacritical\" />}\n                    </Col>\n                </Row>\n\n                <KanaDisplay\n                    kana={kana}\n                    style={{\n                        character: { color: \"#000\", size: \"xs\" },\n                        container: [styles.kanaWrapper]\n                    }}\n                />\n\n                <p className={styles.romaji}>{kana.getFullRomajiString()}</p>\n            </Container>\n        );\n    }\n}\n\nexport default KanaTile;","import React, { Component } from \"react\";\nimport { Kana } from \"../../types/kana/Kana\";\nimport KanaTile from \"./KanaTile\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nimport styles from \"../../styles/sass/components/layout/KanaGrid.module.scss\";\n\nexport interface KanaGridProps {\n    kana: Kana[];\n}\n\nclass KanaGrid extends Component<KanaGridProps> {\n    render() {\n        return (\n            <>\n                {this.props.kana.length > 0 ?\n                    <StackGrid\n                        columnWidth={90}\n                        component=\"div\"\n                        gutterWidth={10}\n                        gutterHeight={10}\n                        monitorImagesLoaded={false}\n                        duration={0}\n                        appear={transitions.fade.appear}\n                        appeared={transitions.fade.appeared}\n                        enter={transitions.fade.enter}\n                        entered={transitions.fade.entered}\n                        leaved={transitions.fade.leaved}\n                        appearDelay={0}\n                        easing=\"quartOut\"\n                        className={styles.grid}\n                    >\n                        {this.props.kana.map(kana => (\n                            <KanaTile key={kana.code} kana={kana}/>\n                        ))}\n                    </StackGrid> :\n                    <p className={styles.noResults}>No results.</p>\n                }\n            </>\n        );\n    }\n}\n\nexport default KanaGrid;\n","import { Filter } from \"../Filter\";\nimport { Kana } from \"../../types/kana/Kana\";\n\nexport default class RomajiFilter implements Filter<Kana> {\n\n    private readonly search: string;\n\n    constructor(search: string) {\n        this.search = search;\n    }\n\n    apply(values: Kana[]): Kana[] {\n        if (this.search) {\n            return values.filter(kana => kana.getRomaji().some(romaji => romaji.includes(this.search)));\n        }\n        return values;\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { KanaRepository } from \"../../repository/KanaRepository\";\nimport { Kana } from \"../../types/kana/Kana\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport styles from \"../../styles/sass/components/pages/SearchPage.module.scss\";\nimport KanaType from \"../../types/kana/KanaType\";\nimport KanaGrid from \"../layout/KanaGrid\";\nimport SearchField from \"../ui/fields/SearchField\";\nimport FilterChain from \"../../filters/FilterChain\";\nimport KanaTypeFilter from \"../../filters/kana/KanaTypeFilter\";\nimport DiagraphFilter from \"../../filters/kana/DiagraphFilter\";\nimport DiacriticalFilter from \"../../filters/kana/DiacriticalFilter\";\nimport RomajiFilter from \"../../filters/kana/RomajiFilter\";\nimport { KanaSettingsBuilder } from \"../../types/session/settings/data/KanaSettings\";\nimport ToggleSwitch from \"../ui/ToggleSwitch\";\n\nconst SearchPage = () => {\n    let data = useRef<Kana[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [kana, setKana] = useState<Kana[]>([]);\n    const [search, setSearch] = useState(\"\");\n    const [showHiragana, setShowHiragana] = useState(true);\n    const [showKatakana, setShowKatakana] = useState(true);\n    const [showDiagraphs, setShowDiagraphs] = useState(true);\n    const [showDiacriticals, setShowDiacriticals] = useState(true);\n\n    useEffect(() => {\n        setLoading(true);\n\n        const config = new KanaSettingsBuilder().withEverything().withMaxQuantity().build();\n\n        new KanaRepository().read(config).then(response => {\n            setKana(response);\n            setLoading(false);\n            data.current = response\n        });\n    }, []);\n\n    useEffect(() => {\n        const chain = new FilterChain<Kana>();\n\n        chain.addFilter(new RomajiFilter(search))\n        if (!showHiragana) chain.addFilter(new KanaTypeFilter(KanaType.HIRAGANA));\n        if (!showKatakana) chain.addFilter(new KanaTypeFilter(KanaType.KATAKANA));\n        if (!showDiagraphs) chain.addFilter(new DiagraphFilter());\n        if (!showDiacriticals) chain.addFilter(new DiacriticalFilter());\n\n        setKana(chain.execute(data.current));\n    }, [search, showHiragana, showKatakana, showDiagraphs, showDiacriticals]);\n\n    return (\n        <div className={styles.wrapper} data-testid=\"search-page\">\n            <LoadingSpinner active={loading} variant=\"primary\" />\n\n            <Container className={styles.controlsWrapper}>\n                <Container className={styles.searchWrapper}>\n                    <SearchField\n                        value={search}\n                        placeholder=\"Enter the rōmaji\"\n                        append={kana.length + \" Results\"}\n                        onChange={(search: string) => setSearch(search)}\n                    />\n                </Container>\n\n                <Container>\n                    <Row>\n                        <Col className={styles.switchWrapper} md={3} sm={4} xs={6}>\n                            <ToggleSwitch\n                                label=\"Hiragana\"\n                                enabled={showHiragana}\n                                data-testid=\"hiragana-switch\"\n                                className={styles.hiraganaSwitch}\n                                onChange={() => setShowHiragana(!showHiragana)}\n                            />\n                        </Col>\n\n                        <Col className={styles.switchWrapper} md={3} sm={4} xs={6}>\n                            <ToggleSwitch\n                                label=\"Katakana\"\n                                enabled={showKatakana}\n                                data-testid=\"katakana-switch\"\n                                className={styles.katakanaSwitch}\n                                onChange={() => setShowKatakana(!showKatakana)}\n                            />\n                        </Col>\n\n                        <Col className={styles.switchWrapper} md={3} sm={4} xs={6}>\n                            <ToggleSwitch\n                                label=\"Diagraphs\"\n                                enabled={showDiagraphs}\n                                data-testid=\"diagraphs-switch\"\n                                className={styles.diagraphSwitch}\n                                onChange={() => setShowDiagraphs(!showDiagraphs)}\n                            />\n                        </Col>\n\n                        <Col className={styles.switchWrapper} md={3} sm={12} xs={6}>\n                            <ToggleSwitch\n                                label=\"Diacriticals\"\n                                enabled={showDiacriticals}\n                                data-testid=\"diacriticals-switch\"\n                                className={styles.diacriticalSwitch}\n                                onChange={() => setShowDiacriticals(!showDiacriticals)}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </Container>\n\n            <KanaGrid kana={kana}/>\n        </div>\n    )\n}\n\nexport default SearchPage;\n","import { Component } from \"react\";\nimport { Kana } from \"../../types/kana/Kana\";\nimport { Container } from \"react-bootstrap\";\nimport KanaDisplay, { KanaDisplayStyle } from \"./display/KanaDisplay\";\nimport Arrays from \"../../utility/Arrays\";\nimport styles from \"../../styles/sass/components/ui/KanaCarousel.module.scss\";\n\nexport interface KanaCarouselProps {\n    kana: Kana[];\n    style?: KanaDisplayStyle;\n}\n\ninterface KanaCarouselState {\n    remaining: Kana[];\n    shown: Kana[];\n    current: Kana;\n}\n\nclass KanaCarousel extends Component<KanaCarouselProps, KanaCarouselState> {\n\n    constructor(props: KanaCarouselProps | Readonly<KanaCarouselProps>) {\n        super(props);\n\n        const [next, remaining] = Arrays.getRandomObject(props.kana);\n\n        this.state = {\n            remaining: remaining,\n            shown: [next],\n            current: next,\n        }\n    }\n\n    render() {\n        const { current } = this.state;\n        return (\n            <Container className={styles.wrapper}>\n                <div data-testid=\"animation\" onAnimationIteration={this.handleAnimation} className={styles.animate}>\n                    <KanaDisplay kana={current} style={this.props.style} />\n                    <p className={styles.romaji}>{current.getFullRomajiString()}</p>\n                </div>\n            </Container>\n        );\n    }\n\n    private handleAnimation = () => {\n        const { current, remaining, shown } = this.state;\n        const { kana } = this.props;\n\n        const pool = remaining.length > 0 ? remaining : kana;\n        const [next, nextRemaining] = Arrays.getRandomObject(pool);\n        const shownPool = remaining.length > 0 ? shown.concat(current) : [next];\n        this.setState({ current: next, remaining: nextRemaining, shown: shownPool });\n    }\n}\n\nexport default KanaCarousel","import { Component } from \"react\";\nimport { Kana } from \"../../types/kana/Kana\";\nimport styles from \"../../styles/sass/components/layout/ParallaxBackground.module.scss\";\nimport Arrays from \"../../utility/Arrays\";\n\ninterface ParallaxBackgroundProps {\n    kana: Kana[];\n}\n\ninterface ParallaxBackgroundState {\n    kana: Kana[];\n    height: number;\n    width: number;\n    xMouse: number;\n    yMouse: number;\n    position: [x: number, y: number, z: number];\n}\n\nclass ParallaxBackground extends Component<ParallaxBackgroundProps, ParallaxBackgroundState> {\n\n    constructor(props: ParallaxBackgroundProps | Readonly<ParallaxBackgroundProps>) {\n        super(props);\n\n        this.state = {\n            kana: [],\n            width: window.innerWidth,\n            height: window.innerHeight,\n            xMouse: window.innerWidth / 2,\n            yMouse: window.innerHeight / 2,\n            position: [0, 0, 0]\n        }\n    }\n\n    componentDidMount() {\n        this.getBackgroundKana();\n        window.addEventListener('resize', this.updateWindowDimensions);\n        //window.addEventListener('mousemove', this.updateMousePosition);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n        //window.removeEventListener('mousemove', this.updateMousePosition);\n    }\n\n    render() {\n        const { kana } = this.state;\n        return (\n            <ul className={styles.background}>\n                {kana.map(kana => {\n                    return (\n                        <li key={Math.random().toString()} data-testid=\"background-kana\">\n                            {kana.code}\n                        </li>\n                    )\n                })}\n            </ul>\n        );\n    }\n\n    private updateWindowDimensions = () => {\n        this.getBackgroundKana();\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    private updateMousePosition = (e: MouseEvent) => {\n        this.setState({ xMouse: e.pageX, yMouse: e.pageY }, this.calculateParallax);\n    }\n\n    private getBackgroundKana = () => {\n        let kana: Kana[] = [];\n\n        const html = document.querySelector('html');\n        const pool = [...this.props.kana];\n\n        if (pool.length > 0 && html) {\n            //Calculate the width & height of the viewport in em.\n            const fontSize = getComputedStyle(html).fontSize;\n            const width = window.innerWidth / parseFloat(fontSize);\n            const height = window.innerHeight / parseFloat(fontSize);\n\n            //Calculate how many kana fit on a single row, the number of rows and the total required.\n            const kanaPerRow = Math.ceil(width / 5);\n            const rows = Math.ceil(height / 5) + 1;\n            const totalKanaRequired = kanaPerRow * rows;\n\n            if (totalKanaRequired > pool.length) {\n                //There are 214 kana. If more is needed, find out how many more and push them.\n                const pools = Math.floor(totalKanaRequired / pool.length);\n                for (let i = 0; i < pools; i++) {\n                    kana.push(...pool);\n                }\n\n                //If the number of pools is fractional, push one more row in.\n                const remaining = totalKanaRequired % pool.length;\n                if (remaining !== 0) {\n                    kana.push(...pool.splice(0, kanaPerRow));\n                }\n            } else {\n                kana.push(...pool.splice(0, totalKanaRequired));\n            }\n        }\n\n        this.setState({ kana: Arrays.shuffle(kana) });\n    }\n\n    private calculateParallax() {\n        /*const { xMouse, yMouse, width, height } = this.state;\n        const halfWidth = width / 2;\n        const halfHeight = height / 2;\n        const xDepth = 0\n        const yDepth = 0\n        const zDepth = 0\n        this.setState({ position: [xDepth, yDepth, zDepth] });*/\n    }\n}\n\nexport default ParallaxBackground;","import { Button, Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/pages/LandingPage.module.scss\";\nimport Inspectable from \"../ui/Inspectable\";\nimport KanaCarousel from \"../ui/KanaCarousel\";\nimport { faGraduationCap, faPlay, faQuestion, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Environment } from \"../../utility/Environment\";\nimport ParallaxBackground from \"../layout/ParallaxBackground\";\nimport { Link } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\";\nimport { KanaRepository } from \"../../repository/KanaRepository\";\nimport { KanaSettingsBuilder } from \"../../types/session/settings/data/KanaSettings\";\nimport { Kana } from \"../../types/kana/Kana\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\n\nconst LandingPage = () => {\n    const [kana, setKana] = useState<Kana[]>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        const settings = new KanaSettingsBuilder().withHiragana().withKatakana().build();\n        new KanaRepository().read(settings).then(data => {\n            setKana(data);\n            setLoading(false);\n        });\n    }, []);\n\n    return (\n        <Container fluid className={styles.wrapper} data-testid=\"landing-page\">\n            {kana.length > 0 && <ParallaxBackground kana={kana}/>}\n\n            <div className={styles.content}>\n                <h1 className={styles.heading}>\n                    {'Learn '}\n                    <Inspectable\n                        popover={{\n                            title: \"Nihongo (日本語)\",\n                            text: Environment.variable(\"JAPANESE_KANJI_DESC\")\n                        }}\n                        className={styles.japanese}\n                        placement=\"top\"\n                    >\n                        <span data-testid=\"japanese-inspectable\">Japanese</span>\n                    </Inspectable>\n                    {' Kana'}\n                </h1>\n\n                <div className={styles.descriptionWrapper}>\n                    <h4 className={styles.description}>\n                        {'A simple memory training app for learning the Japanese '}\n                        <Inspectable\n                            popover={{\n                                title: \"Hiragana (ひらがな)\",\n                                text: Environment.variable(\"HIRAGANA_DESC\")\n                            }}\n                            placement=\"bottom\" color=\"white\"\n                        >\n                            <span data-testid=\"hiragana-inspectable\">Hiragana</span>\n                        </Inspectable>\n                        {' and '}\n                        <Inspectable\n                            popover={{\n                                title: \"Katakana (カタカナ)\",\n                                text: Environment.variable(\"KATAKANA_DESC\")\n                            }}\n                            placement=\"bottom\"\n                            color=\"white\"\n                        >\n                            <span data-testid=\"katakana-inspectable\">Katakana</span>\n                        </Inspectable>\n                        {' syllabaries.'}\n                    </h4>\n                </div>\n\n                {kana.length > 0 && <KanaCarousel\n                    kana={kana}\n                    style={{ character: { className: styles.carouselDisplay } }}\n                />}\n\n                <LoadingSpinner active={loading} variant=\"primary\" />\n\n                <Row noGutters={true} className={styles.buttonContainer}>\n                    <Col xs={6} md={3} className={styles.buttonWrapper}>\n                        <Link to=\"/menu/learn\">\n                            <Button className={styles.button} variant=\"outline-danger\">\n                                <FontAwesomeIcon icon={faGraduationCap} className={styles.buttonIcon}/>\n                                <span className={styles.buttonText}> Learn</span>\n                            </Button>\n                        </Link>\n                    </Col>\n\n                    <Col xs={6} md={3} className={styles.buttonWrapper}>\n                        <Link to=\"/menu/play\">\n                            <Button className={styles.button} variant=\"outline-success\">\n                                <FontAwesomeIcon icon={faPlay} className={styles.buttonIcon}/>\n                                <span className={styles.buttonText}> Play</span>\n                            </Button>\n                        </Link>\n                    </Col>\n\n                    <Col xs={6} md={3} className={styles.buttonWrapper}>\n                        <Link to=\"/search\">\n                            <Button className={styles.button} variant=\"outline-info\">\n                                <FontAwesomeIcon icon={faSearch} className={styles.buttonIcon}/>\n                                <span className={styles.buttonText}> Search</span>\n                            </Button>\n                        </Link>\n                    </Col>\n\n                    <Col xs={6} md={3} className={styles.buttonWrapper}>\n                        <Link to=\"/help\">\n                            <Button variant=\"outline-warning\" className={styles.button} title=\"Help\">\n                                <FontAwesomeIcon icon={faQuestion} className={styles.buttonIcon}/>\n                                <span className={styles.buttonText}> Help</span>\n                            </Button>\n                        </Link>\n                    </Col>\n                </Row>\n            </div>\n        </Container>\n    );\n}\n\nexport default LandingPage;\n","import { Button, Container } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"../../styles/sass/components/pages/NotFoundPage.module.scss\";\n\nconst NotFoundPage = () => {\n    return(\n        <Container fluid className={styles.wrapper}>\n            <div className={styles.content}>\n                <h1 className={styles.heading}>Nani!?</h1>\n                <h3 className={styles.description}>There doesn't appear to be anything here.</h3>\n\n                <Button className={styles.home} variant=\"outline-success\" href=\"/\">\n                    <FontAwesomeIcon icon={faHome} fixedWidth className={styles.buttonIcon}/>\n                    <span className={styles.buttonText}> Home</span>\n                </Button>\n            </div>\n        </Container>\n    );\n}\n\nexport default NotFoundPage;","import { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"../../styles/sass/components/pages/HelpPage.module.scss\";\nimport { faLink, faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass HelpPage extends Component {\n    render() {\n        return (\n            <Container fluid className={styles.wrapper}>\n                <Container className={styles.content}>\n                    <Row>\n                        <Col>\n                            <h1 className={styles.heading}>\n                                <FontAwesomeIcon icon={faQuestionCircle} /> Frequently Asked Questions\n                            </h1>\n\n                            <h3 className={styles.question}>What is <strong>'romaji'</strong> ?</h3>\n                            <p className={styles.answer}>\n                                Rōmaji or ローマ字 (rōmaji) is the romanisation of the Japanese written language.\n                            </p>\n                            <a href=\"https://www.japanesepod101.com/japanese-romaji/\" target=\"_blank\" rel=\"noreferrer\" className={styles.link}>\n                                <FontAwesomeIcon icon={faLink} fixedWidth className={styles.sourceIcon} />\n                                <span className={styles.source}>Source</span>\n                            </a>\n                        </Col>\n                    </Row>\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default HelpPage;","import { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport MainMenuPage from \"../pages/MainMenuPage\";\nimport SearchPage from \"../pages/SearchPage\";\nimport LandingPage from \"../pages/LandingPage\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport HelpPage from \"../pages/HelpPage\";\nimport styles from \"../../styles/sass/components/layout/Main.module.scss\";\n\nclass Main extends Component {\n    render() {\n        return (\n            <div className={styles.wrapper}>\n                <HashRouter basename={process.env.REACT_APP_BASE_PATH}>\n                    <Switch>\n                        <Route exact path=\"/\" component={LandingPage}/>\n                        <Route exact path=\"/menu/:mode\" component={MainMenuPage}/>\n                        <Route exact path=\"/search\" component={SearchPage}/>\n                        <Route exact path=\"/help\" component={HelpPage} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default Main;","import { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\ninterface ErrorBoundaryState {\n    hasError: boolean;\n    error: any;\n}\n\nclass ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    constructor(props: {} | Readonly<{}>) {\n        super(props);\n        this.state = {\n            hasError: false,\n            error: null\n        };\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: any) {\n        this.setState({ hasError: true, error });\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <Container>\n                    <h1>It do be broken.</h1>\n                    <h2>{this.state.error}</h2>\n                </Container>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import './styles/sass/LearnJapanese.module.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport Main from \"./components/layout/Main\";\nimport ErrorBoundary from \"./components/error/ErrorBoundary\";\nimport { Location } from \"history\";\nimport { Component } from \"react\";\n\ninterface LearnJapaneseProps {\n    location?: Location;\n}\n\nclass LearnJapanese extends Component<LearnJapaneseProps> {\n    render() {\n        return (\n            <ErrorBoundary key={this.props?.location?.pathname}>\n                <Main/>\n            </ErrorBoundary>\n        );\n    }\n}\n\nexport default LearnJapanese;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/sass/index.scss';\nimport LearnJapanese from './LearnJapanese';\n\nReactDOM.render(\n    <React.StrictMode>\n        <LearnJapanese/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavigationButton_container__3XhT_\",\"content\":\"NavigationButton_content__1NtfE\",\"popover\":\"NavigationButton_popover__LlmeK\",\"fade\":\"NavigationButton_fade__1Al45\",\"itemWrapper\":\"NavigationButton_itemWrapper__CzMA1\",\"item\":\"NavigationButton_item__bpJTW\",\"itemIcon\":\"NavigationButton_itemIcon__3fNM9\",\"link\":\"NavigationButton_link__3gOzJ\",\"search\":\"NavigationButton_search__2hYa2\",\"active\":\"NavigationButton_active__1G4w-\",\"icon\":\"NavigationButton_icon__L8Bpr\",\"text\":\"NavigationButton_text__2fRmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"KanjiExampleDisplay_title__3pOsE\",\"kanji\":\"KanjiExampleDisplay_kanji__25usg\",\"highlight\":\"KanjiExampleDisplay_highlight__1pgH2\",\"kana\":\"KanjiExampleDisplay_kana__1O4er\",\"meaning\":\"KanjiExampleDisplay_meaning__1oMxb\",\"wrapper\":\"KanjiExampleDisplay_wrapper__ZiF_u\",\"textWrapper\":\"KanjiExampleDisplay_textWrapper__z0jZU\",\"controllerWrapper\":\"KanjiExampleDisplay_controllerWrapper__3chPz\",\"example\":\"KanjiExampleDisplay_example__1_1Kh\",\"row\":\"KanjiExampleDisplay_row__ec4rf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchPage_wrapper__3WfDo\",\"searchWrapper\":\"SearchPage_searchWrapper__ldt2W\",\"controlsWrapper\":\"SearchPage_controlsWrapper__3aLIl\",\"label\":\"SearchPage_label__pw8Q_\",\"switchWrapper\":\"SearchPage_switchWrapper__3WDNw\",\"hiraganaSwitch\":\"SearchPage_hiraganaSwitch__2ufYA\",\"katakanaSwitch\":\"SearchPage_katakanaSwitch__h-ela\",\"diagraphSwitch\":\"SearchPage_diagraphSwitch__tHO4N\",\"diacriticalSwitch\":\"SearchPage_diacriticalSwitch__26buD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"UserForm_modal__3iOo1\",\"title\":\"UserForm_title__vV7Jq\",\"header\":\"UserForm_header__SNCjO\",\"body\":\"UserForm_body__2kSQz\",\"footer\":\"UserForm_footer__2Ds-n\",\"switch\":\"UserForm_switch__cLcpW\",\"submit\":\"UserForm_submit__qG4kP\",\"row\":\"UserForm_row__2l8uy\",\"loading\":\"UserForm_loading__383db\",\"footerText\":\"UserForm_footerText__2zWVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SpinnerController_wrapper__3HEjI\",\"disabled\":\"SpinnerController_disabled__24vmh\",\"arrow\":\"SpinnerController_arrow__zjwxz\",\"arrowWrapper\":\"SpinnerController_arrowWrapper__2r06M\",\"selectedWrapper\":\"SpinnerController_selectedWrapper__26vbM\",\"selected\":\"SpinnerController_selected__KrGZx\",\"selectedDisabled\":\"SpinnerController_selectedDisabled__1081r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"KanaSettingsForm_description__3j4Hb\",\"disabled\":\"KanaSettingsForm_disabled__2OMZk\",\"switch\":\"KanaSettingsForm_switch__3IHJE\",\"quantity\":\"KanaSettingsForm_quantity__DQn9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CommonFlashCardBack_wrapper__1rM7S\",\"innerWrapper\":\"CommonFlashCardBack_innerWrapper__1JBcM\",\"kanji\":\"CommonFlashCardBack_kanji__3svyg\",\"kana\":\"CommonFlashCardBack_kana__eG9m1\",\"romaji\":\"CommonFlashCardBack_romaji__22Sre\",\"exampleKana\":\"CommonFlashCardBack_exampleKana__34hFc\",\"exampleEnglish\":\"CommonFlashCardBack_exampleEnglish__3LUmm\",\"rightCol\":\"CommonFlashCardBack_rightCol__3MJgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kana\":\"AnswerMistake_kana__3kGK2\",\"timesWrong\":\"AnswerMistake_timesWrong__1PNl1\",\"romaji\":\"AnswerMistake_romaji__2g_l7\",\"wrapper\":\"AnswerMistake_wrapper__3QaYJ\",\"kanaWrapper\":\"AnswerMistake_kanaWrapper__lhBj_\",\"infoWrapper\":\"AnswerMistake_infoWrapper__HEWY-\",\"col\":\"AnswerMistake_col__QbWIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meaning\":\"DefinitionList_meaning__1Ez6W\",\"or\":\"DefinitionList_or__2-xmc\",\"inline\":\"DefinitionList_inline__24zED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"TopicSelectionMenu_dropdown__DAZI4\",\"dropdownMenu\":\"TopicSelectionMenu_dropdownMenu__2Z5F9\",\"dropdownToggle\":\"TopicSelectionMenu_dropdownToggle__3X9ki\",\"menu\":\"TopicSelectionMenu_menu__1i_fU\",\"learn\":\"TopicSelectionMenu_learn__2gQbh\",\"play\":\"TopicSelectionMenu_play__XaDZK\",\"icon\":\"TopicSelectionMenu_icon__V15u7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ModeSelectionMenu_wrapper__3VdHL\",\"leftColumn\":\"ModeSelectionMenu_leftColumn__3irDV\",\"rightColumn\":\"ModeSelectionMenu_rightColumn__1sFMN\",\"search\":\"ModeSelectionMenu_search__2-TqH\",\"settings\":\"ModeSelectionMenu_settings__3RdTf\",\"spin\":\"ModeSelectionMenu_spin__1MmNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hiragana\":\"KanaTile_hiragana__ECiBL\",\"katakana\":\"KanaTile_katakana__3xTDR\",\"diagraph\":\"KanaTile_diagraph__1478d\",\"diacritical\":\"KanaTile_diacritical__2aQhQ\",\"kana\":\"KanaTile_kana__m6fQI\",\"wrapper\":\"KanaTile_wrapper__ipAmP\",\"kanaWrapper\":\"KanaTile_kanaWrapper__3JJ4M\",\"romaji\":\"KanaTile_romaji__1u1Vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HelpPage_wrapper__1jt-X\",\"content\":\"HelpPage_content__3Yiv-\",\"heading\":\"HelpPage_heading__LXfL2\",\"question\":\"HelpPage_question__2Fzay\",\"answer\":\"HelpPage_answer__3cn1-\",\"source\":\"HelpPage_source__389Tt\",\"link\":\"HelpPage_link__3Xldi\",\"sourceIcon\":\"HelpPage_sourceIcon__1PBie\"};"],"sourceRoot":""}